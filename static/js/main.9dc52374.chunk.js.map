{"version":3,"sources":["functions.js","thenBy.min.js","ToDo.js","App.js","serviceWorker.js","index.js"],"names":["convertDate","date","convertTo","ISODate","Date","toISOString","substring","getTime","year","month","day","setUTCFullYear","setUTCMonth","setUTCDate","toLocaleDateString","articulateDateDue","dateDue","today","now","arrayMove","arr","fromIndex","toIndex","arrCopy","slice","element","length","splice","firstBy","identity","v","ignoreCase","toLowerCase","tb","func","opt","x","this","y","f","direction","prop","v1","uf","preprocess","cmp","v2","makeCompareFunction","a","b","thenBy","Calendar","_ref","handleOnChange","value","react_default","createElement","Fragment","reactstrap_es","className","onChange","type","min","max","Priority","_ref2","List","props","children","ListItem","xs","ToDo_Task","data","item","index","handleTextChange","editText","toggleEditItem","ToDo_TaskDetails","react_transition_group","key","id","timeout","classNames","ToDo_ItemButtons","markComplete","sortItems","ToDo_ItemEditBox","ToDo_Calendar","event","editDate","ToDo_Priority","convertPriority","priority","editPriority","Task","_ref3","active","onClick","style","backgroundColor","settings","colorLow","colorMedium","colorHigh","textDecorationLine","editPanelHidden","task","instance","concat","lib_default","stopPropagation","defaultValue","color","size","TaskDetails","_ref4","tag","in","ItemButtons","_ref5","outline","ItemEditBox","_ref6","hidden","Settings","_ref7","settingsHidden","selectedStyle","changeStyle","changeColor","toggleInactiveTasks","_this","label","checked","hideInactive","Stats","_this2","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","loading","setState","_this$props","stats","statsHidden","tasks","tasksCompleted","oneWeekAgo","totalStarsOneWeek","keys","reduce","total","timeCompleted","react_spinners","sizeUnit","Component","AddTask","_this3","createItem","_this3$props","selectedPriority","addItem","selectedDate","selectedTag","inputElementValue","inputElement","current","itemInstances","listItems","uuid","timeCreated","preventDefault","React","createRef","_this$props2","inputChange","buttonDisabled","onSubmit","innerRef","placeholder","disabled","ToDo","_this4","clone","object","JSON","parse","stringify","newItem","selectedSort","toConsumableArray","sortItemsBy","undo","console","log","setTimeout","notify","show","background","text","deleteItem","filter","changePriority","target","newDate","toggleItems","listItemsCopy","forEach","moveFrom","showAll","moveTo","sort","manual","selectSortBy","targetItem","targetPanelState","editTaskText","changeDate","updateDate","selectedColor","toggleSettings","showModal","toggleStats","colors","changeTag","addTag","newTag","prompt","tags","includes","alert","removeTag","currentText","hideEditPanels","toggleModal","time","prevProps","prevState","_this$state","saveData","_this5","_this$state2","_this$props3","notify_default","isOpen","toggle","ToDo_Settings","ToDo_Stats","sm","md","lg","xl","ToDo_AddTask","map","ToDo_List","ToDo_ListItem","defaultProps","App","localStorage","getItem","src_ToDo","fileName","setItem","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9dc52374.chunk.js","sourcesContent":["const convertDate = (date, convertTo) => {\r\n    const ISODate = new Date(date).toISOString().substring(0, 10)\r\n    if (convertTo === \"ISO\") {\r\n        return ISODate\r\n    } else if (convertTo === \"timestamp\") {\r\n        return new Date(date).getTime()\r\n    } else if (convertTo === \"local\") {\r\n        const year = ISODate.substring(0, 4)\r\n        const month = ISODate.substring(5, 7)\r\n        const day = ISODate.substring(8, 10)\r\n        const date = new Date()\r\n        date.setUTCFullYear(year)\r\n        date.setUTCMonth(month - 1)\r\n        date.setUTCDate(day)\r\n        return date.toLocaleDateString(\"en-GB\")\r\n    }\r\n}\r\n\r\nconst articulateDateDue = (dateDue) => {\r\n    let today = convertDate(Date.now(), \"ISO\")\r\n    today = convertDate(today, \"timestamp\")\r\n    if (dateDue - today < 0) {\r\n        return \"Overdue\"\r\n    }\r\n    if (dateDue - today === 0) {\r\n        return \"Today\"\r\n    } else if (dateDue - today === 86400000) {\r\n        return \"Tomorrow\"\r\n    } else {\r\n        return convertDate(dateDue, \"local\")\r\n    }\r\n}\r\n\r\nconst arrayMove = (arr, fromIndex, toIndex) => {\r\n    const arrCopy = arr.slice(0)\r\n    const element = arr[fromIndex]\r\n    if (fromIndex === 0) {\r\n        toIndex = arr.length\r\n    }\r\n    arrCopy.splice(fromIndex, 1)\r\n    arrCopy.splice(toIndex, 0, element)\r\n    return arrCopy\r\n}\r\n\r\nexport { convertDate, articulateDateDue, arrayMove }","/***\r\n   Copyright 2013 Teun Duynstee\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n     http://www.apache.org/licenses/LICENSE-2.0\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\nvar firstBy = (function() {\r\n\r\n    function identity(v){return v;}\r\n\r\n    function ignoreCase(v){return typeof(v)===\"string\" ? v.toLowerCase() : v;}\r\n\r\n    function makeCompareFunction(f, opt){\r\n        opt = typeof(opt)===\"number\" ? {direction:opt} : opt||{};\r\n        if(typeof(f)!=\"function\"){\r\n            var prop = f;\r\n            // make unary function\r\n            f = function(v1){return !!v1[prop] ? v1[prop] : \"\";}\r\n        }\r\n        if(f.length === 1) {\r\n            // f is a unary function mapping a single item to its sort score\r\n            var uf = f;\r\n            var preprocess = opt.ignoreCase?ignoreCase:identity;\r\n            var cmp = opt.cmp || function(v1,v2) {return v1 < v2 ? -1 : v1 > v2 ? 1 : 0;}\r\n            f = function(v1,v2) {return cmp(preprocess(uf(v1)), preprocess(uf(v2)));}\r\n        }\r\n        if(opt.direction === -1) return function(v1,v2){return -f(v1,v2)};\r\n        return f;\r\n    }\r\n\r\n    /* adds a secondary compare function to the target function (`this` context)\r\n       which is applied in case the first one returns 0 (equal)\r\n       returns a new compare function, which has a `thenBy` method as well */\r\n    function tb(func, opt) {\r\n        /* should get value false for the first call. This can be done by calling the \r\n        exported function, or the firstBy property on it (for es6 module compatibility)\r\n        */\r\n        var x = (typeof(this) == \"function\" && !this.firstBy) ? this : false;\r\n        var y = makeCompareFunction(func, opt);\r\n        var f = x ? function(a, b) {\r\n                        return x(a,b) || y(a,b);\r\n                    }\r\n                  : y;\r\n        f.thenBy = tb;\r\n        return f;\r\n    }\r\n    tb.firstBy = tb;\r\n    return tb;\r\n})();\r\n\r\nexport { firstBy }","import React, { Component } from 'react'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport { Container, Row, Col, Input, CustomInput, Button, Form, FormGroup, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\r\nimport { MoonLoader } from 'react-spinners'\r\nimport Notifications, {notify} from 'react-notify-toast'\r\nimport TextareaAutosize from 'react-autosize-textarea'\r\nimport uuid from 'uuid'\r\nimport { convertDate, articulateDateDue, arrayMove } from './functions'\r\nimport { firstBy } from './thenBy.min.js'\r\n\r\nconst Calendar = ({ handleOnChange, value, convertDate }) =>\r\n    <React.Fragment>\r\n        <Input\r\n            className=\"calendar-element\"\r\n            onChange={handleOnChange}\r\n            type=\"date\"\r\n            value={value}\r\n            min={convertDate(Date.now(), \"ISO\")}\r\n            max=\"2019-12-31\"\r\n        />\r\n    </React.Fragment>\r\n\r\nconst Priority = ({ handleOnChange, value }) =>\r\n    <React.Fragment>\r\n        <Input\r\n            type=\"select\"\r\n            className=\"priority-element\"\r\n            value={value}\r\n            onChange={handleOnChange}\r\n        >\r\n            <option value=\"Low\">Priority: Low</option>\r\n            <option value=\"Medium\">Medium</option>\r\n            <option value=\"High\">High</option>\r\n        </Input>\r\n    </React.Fragment>\r\n\r\nconst List = (props) =>\r\n    <div className=\"list\">\r\n        {props.children}\r\n    </div>\r\n\r\nconst ListItem = (props) =>\r\n    <React.Fragment>\r\n        <Row className=\"no-gutters\">\r\n            <Col xs=\"9\">\r\n                <Task\r\n                    data={props.data}\r\n                    item={props.item}\r\n                    index={props.index}\r\n                    handleTextChange={props.handleTextChange}\r\n                    editText={props.editText}\r\n                    toggleEditItem={props.toggleEditItem}\r\n                >\r\n                    <TaskDetails\r\n                        item={props.item}\r\n                        articulateDateDue={props.articulateDateDue}\r\n                    />\r\n                </Task>\r\n            </Col>\r\n            <Col xs=\"3\">\r\n                <TransitionGroup>\r\n                    <CSSTransition\r\n                        key={props.item.id}\r\n                        timeout={500}\r\n                        classNames=\"fade\">\r\n                        <ItemButtons\r\n                            item={props.item}\r\n                            index={props.index}\r\n                            markComplete={props.markComplete}\r\n                            sortItems={props.sortItems}\r\n                        />\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n            </Col>\r\n        </Row>\r\n        <ItemEditBox\r\n            item={props.item}\r\n            index={props.index}\r\n            markComplete={props.markComplete}>\r\n            <Row>\r\n                <Col>\r\n                    <Calendar\r\n                        value={props.convertDate(props.item.dateDue, \"ISO\")}\r\n                        handleOnChange={(event) => props.editDate(event, props.index)}\r\n                        convertDate={props.convertDate}\r\n                    />\r\n                </Col>\r\n                <Col>\r\n                    <Priority\r\n                        value={props.convertPriority(props.item.priority)}\r\n                        handleOnChange={(event) => props.editPriority(event, props.index)}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </ItemEditBox>\r\n    </React.Fragment>\r\n\r\nconst Task = ({ data, item, index, toggleEditItem, handleTextChange, editText, children }) =>\r\n    <div\r\n        className={(item.active) ? \"task\" : \"task task-complete animate-background\"}\r\n        onClick={() => toggleEditItem(index)}\r\n        style={{\r\n            backgroundColor:\r\n                (!item.active) ?\r\n                    \"#e5e5e5\" :\r\n                    (item.priority === 3) ?\r\n                        data.settings.style.colorLow :\r\n                        (item.priority === 2) ?\r\n                            data.settings.style.colorMedium :\r\n                            data.settings.style.colorHigh\r\n        }}>\r\n        <span\r\n            style={{\r\n                textDecorationLine:\r\n                    (item.active) ?\r\n                        \"none\" :\r\n                        \"line-through\"\r\n            }}>\r\n            {(item.editPanelHidden) ?\r\n                <Row>\r\n                    <Col>\r\n                        {item.task}\r\n                        <span className=\"instance\">\r\n                            {(item.instance > 1) ?\r\n                                ` (${item.instance})` :\r\n                                null}\r\n                        </span>\r\n                    </Col>\r\n                </Row> :\r\n                <span>\r\n                    <Row className=\"edit-text no-gutters\">\r\n                        <Col xs=\"10\">\r\n                            <TextareaAutosize\r\n                                className=\"edit-text-element\"\r\n                                onChange={(event) => handleTextChange(event)}\r\n                                onClick={(event) => event.stopPropagation()}\r\n                                defaultValue={item.task}\r\n                            />\r\n                        </Col>\r\n                        <Col xs=\"2\">\r\n                            <Button\r\n                                className=\"edit-text-button\"\r\n                                color=\"secondary\"\r\n                                size=\"sm\"\r\n                                onClick={(event) => editText(event, index)}\r\n                            >\r\n                                {\"OK\"}\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </span>\r\n            }\r\n        </span>\r\n        {children}\r\n    </div>\r\n\r\nconst TaskDetails = ({ item, articulateDateDue }) =>\r\n    <Row>\r\n        <Col className=\"task-details\">\r\n            <TransitionGroup>\r\n                <div className=\"date-due x-small\">\r\n                    {(item.tag === null) ?\r\n                        null :\r\n                        <span className=\"tag\">{item.tag}</span>}\r\n                    {(item.active) ?\r\n                        `Due: ${articulateDateDue(item.dateDue)}` :\r\n                        <React.Fragment>\r\n                            <span className=\"x-small\">\r\n                                {\"Complete \"}\r\n                            </span>\r\n                            <CSSTransition\r\n                                in={!item.active}\r\n                                timeout={1000}\r\n                                classNames=\"star\"\r\n                            //unmountOnExit\r\n                            >\r\n                                <span className=\"star x-small\" >\r\n                                    {\"★\"}\r\n                                </span>\r\n                            </CSSTransition>\r\n                            <CSSTransition\r\n                                in={!item.active}\r\n                                timeout={1000}\r\n                                classNames=\"plus-one\"\r\n                            //unmountOnExit\r\n                            >\r\n                                <span className=\"plus-one x-small\">\r\n                                    {\" +1\"}\r\n                                </span>\r\n                            </CSSTransition>\r\n                        </React.Fragment>}\r\n                </div>\r\n            </TransitionGroup>\r\n        </Col>\r\n    </Row>\r\n\r\n\r\nconst ItemButtons = ({ item, index, markComplete, sortItems }) =>\r\n    <div className=\"item-buttons\">\r\n        <Button\r\n            className=\"sort-button\"\r\n            size=\"sm\"\r\n            outline\r\n            color=\"secondary\"\r\n            onClick={() => sortItems(index, true)}>\r\n            ↑\r\n        </Button>\r\n        <Button\r\n            className=\"delete-item-button\"\r\n            size=\"sm\"\r\n            outline\r\n            color={(item.active) ? \"success\" : \"danger\"}\r\n            onClick={() => markComplete(index)}>\r\n            {(item.active) ? \"✓\" : \"✕\"}\r\n        </Button>\r\n    </div>\r\n\r\nconst ItemEditBox = ({ item, index, markComplete, children }) =>\r\n    <div className=\"edit-task\" hidden={item.editPanelHidden}>\r\n        <span hidden={!item.active}>\r\n            {children}\r\n        </span>\r\n        <div className=\"undo\">\r\n            <Button\r\n                hidden={item.active}\r\n                className=\"undo-button\"\r\n                outline\r\n                color=\"secondary\"\r\n                onClick={() => markComplete(index, true)}>\r\n                Undo \"Mark Complete\"\r\n            </Button>\r\n        </div>\r\n    </div>\r\n\r\nconst Settings = ({ data, settingsHidden, selectedStyle, changeStyle, changeColor, toggleInactiveTasks }) =>\r\n    <React.Fragment>\r\n        <fieldset hidden={settingsHidden}>\r\n            <div>\r\n                <legend>Choose your colours</legend>\r\n                <div>\r\n                    <Input\r\n                        className=\"select-style\"\r\n                        type=\"select\"\r\n                        value={selectedStyle}\r\n                        onChange={changeStyle}>\r\n                        <option value=\"None\">None</option>\r\n                        <option value=\"Default\">Default</option>\r\n                        <option value=\"Marie\">Marie</option>\r\n                        <option value=\"Halloween\">Halloween</option>\r\n                    </Input>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        className=\"change-color\"\r\n                        type=\"color\"\r\n                        value={data.settings.style.colorHigh}\r\n                        onChange={(event) => changeColor(event, \"colorHigh\")}>\r\n                    </input>\r\n                    <label>High Priority</label>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        className=\"change-color\"\r\n                        type=\"color\"\r\n                        value={data.settings.style.colorMedium}\r\n                        onChange={(event) => changeColor(event, \"colorMedium\")}>\r\n                    </input>\r\n                    <label>Medium Priority</label>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        className=\"change-color\"\r\n                        type=\"color\"\r\n                        value={data.settings.style.colorLow}\r\n                        onChange={(event) => this.changeColor(event, \"colorLow\")}>\r\n                    </input>\r\n                    <label>Low Priority</label>\r\n                </div>\r\n            </div>\r\n            <React.Fragment>\r\n                <div>-----------</div>\r\n                <Row>\r\n                    <Col>\r\n                        <CustomInput\r\n                            type=\"checkbox\"\r\n                            id=\"checkbox\"\r\n                            label=\"Show completed tasks\"\r\n                            checked={!data.settings.hideInactive}\r\n                            onChange={toggleInactiveTasks} />\r\n                    </Col>\r\n                </Row>\r\n                <div>-----------</div>\r\n            </React.Fragment>\r\n        </fieldset>\r\n    </React.Fragment>\r\n\r\nclass Stats extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { stats, statsHidden } = this.props\r\n        const { loading } = this.state\r\n        const tasks = stats.tasksCompleted\r\n        const oneWeekAgo = Date.now() - (60 * 60 * 24 * 7 * 1000)\r\n        const totalStarsOneWeek =\r\n            Object.keys(tasks)\r\n                .reduce((total, id) => {\r\n                    if (tasks[id].timeCompleted > oneWeekAgo) {\r\n                        total++\r\n                    }\r\n                    return total\r\n                }, 0)\r\n        return (\r\n            (loading) ?\r\n                <div className=\"align-center\">\r\n                    <MoonLoader\r\n                        color={'#007bff'}\r\n                        sizeUnit={\"px\"}\r\n                        size={100}\r\n                        loading={loading}\r\n                    />\r\n                </div>\r\n                :\r\n                <div\r\n                    className=\"align-center\"\r\n                    hidden={statsHidden}\r\n                >\r\n                    <div className=\"star-big\">\r\n                        {\"★\"}\r\n                    </div>\r\n                    <h1>{`${Object.keys(stats.tasksCompleted).length} stars earned!`}</h1>\r\n                    <div>\r\n                        {`Earned this week: ${totalStarsOneWeek}`}\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass AddTask extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.inputElement = React.createRef()\r\n    }\r\n    createItem = (event) => {\r\n        const { data, selectedPriority, addItem, convertPriority, convertDate, selectedDate, selectedTag } = this.props\r\n        const inputElementValue = this.inputElement.current.value\r\n        const itemInstances = data.listItems.reduce(function (total, item) {\r\n            return total + (inputElementValue === item.task ? 1 : 0)\r\n        }, 1)\r\n        const newItem = {\r\n            active: true,\r\n            id: uuid().substring(0, 12),\r\n            hidden: false,\r\n            task: inputElementValue,\r\n            priority: convertPriority(selectedPriority),\r\n            timeCreated: Date.now(),\r\n            dateDue: convertDate(selectedDate, \"timestamp\"),\r\n            instance: itemInstances,\r\n            editPanelHidden: true,\r\n            settingsHidden: true,\r\n            tag: (selectedTag === \"None\") ? null : selectedTag,\r\n        }\r\n        addItem(newItem)\r\n        this.inputElement.current.value = \"\"\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        const { inputChange, buttonDisabled } = this.props\r\n        return (\r\n            <Form onSubmit={this.createItem}>\r\n                <FormGroup>\r\n                    <Row className=\"row-0 no-gutters\">\r\n                        <Col className=\"padding-right\" xs=\"9\">\r\n                            <Input\r\n                                type=\"text\"\r\n                                className=\"input--add-task\"\r\n                                onChange={inputChange}\r\n                                innerRef={this.inputElement}\r\n                                placeholder=\"Enter Task\">\r\n                            </Input>\r\n                        </Col>\r\n                        <Col xs=\"3\">\r\n                            <Button\r\n                                className=\"add-button\"\r\n                                outline\r\n                                color=\"primary\"\r\n                                disabled={buttonDisabled}\r\n                                type=\"submit\">\r\n                                Add\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </FormGroup>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nclass ToDo extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: (this.props.data) ? JSON.parse(this.props.data) :\r\n                {\r\n                    listItems:\r\n                        [{\r\n                            active: true,\r\n                            hidden: false,\r\n                            id: uuid().substring(0, 10),\r\n                            task: \"Sample Task ✨\",\r\n                            priority: 3,\r\n                            time: Date.now(),\r\n                            instance: 1,\r\n                            editPanelHidden: true,\r\n                            dateDue: Date.now(),\r\n                            tag: null\r\n                        }],\r\n                    settings: {\r\n                        style: {\r\n                            colorHigh: \"#f5c6cb\",\r\n                            colorMedium: \"#ffeeba\",\r\n                            colorLow: \"#bee5eb\"\r\n                        },\r\n                        hideInactive: false\r\n                    },\r\n                    tags: [\"None\"]\r\n                },\r\n            stats: (this.props.stats) ? JSON.parse(this.props.stats) :\r\n                {\r\n                    tasksCompleted: {}\r\n                },\r\n            buttonDisabled: true,\r\n            selectedPriority: \"Low\",\r\n            selectedSort: \"None\",\r\n            selectedDate: this.props.convertDate(Date.now(), \"ISO\"),\r\n            settingsHidden: true,\r\n            statsHidden: true,\r\n            selectedStyle: \"None\",\r\n            selectedTag: \"None\",\r\n            editTaskText: \"\",\r\n            showModal: false\r\n        }\r\n        this.selectSortBy = React.createRef()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { data, stats } = this.state\r\n        const { saveData } = this.props\r\n        if (prevState.data !== data) {\r\n            saveData(data, \"data_7\")\r\n        }\r\n        if (prevState.stats !== stats) {\r\n            saveData(stats, \"stats\")\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.hideEditPanels()\r\n        this.sortItems()\r\n        console.log(this.state.data.listItems)\r\n        console.log(this.state.stats.tasksCompleted)\r\n        notify.show(\"You got this! 😊\", \"custom\", 2000, { background: \"#007bff\", text: \"#ffffff\" })\r\n    }\r\n\r\n    clone = (object) => {\r\n        return JSON.parse(JSON.stringify(object))\r\n    }\r\n\r\n    addItem = (newItem) => {\r\n        const { selectedSort } = this.state\r\n        const data = this.clone(this.state.data)\r\n        data.listItems = [...data.listItems, newItem]\r\n        data.listItems = this.sortItemsBy(data.listItems, selectedSort)\r\n        this.setState({\r\n            data: data,\r\n            buttonDisabled: true\r\n        })\r\n    }\r\n\r\n    markComplete = (index, undo) => {\r\n        const data = this.clone(this.state.data)\r\n        const stats = this.clone(this.state.stats)\r\n        const item = data.listItems[index]\r\n        if (data.listItems.length === 0) {\r\n            console.log(\"List is empty\")\r\n        } else {\r\n            const itemIsActive = item.active\r\n            if (itemIsActive) {\r\n                item.active = false\r\n                stats.tasksCompleted[item.id] = {\r\n                    timeCreated: item.timeCreated,\r\n                    timeCompleted: Date.now()\r\n                }\r\n                this.setState({\r\n                    data: data,\r\n                    stats: stats\r\n                })\r\n                if (Object.keys(stats.tasksCompleted).length % 5 == 0) {\r\n                    setTimeout(() => {\r\n                        notify.show(\"Great job! ⭐\", \"custom\", 2000, { background: \"#007bff\", text: \"#ffffff\" })\r\n                    }, 1000)\r\n                }\r\n            } else if (undo) {\r\n                item.editPanelHidden = true\r\n                item.active = true\r\n                delete stats.tasksCompleted[item.id]\r\n                this.setState({\r\n                    data: data,\r\n                    stats: stats\r\n                })\r\n            } else {\r\n                this.deleteItem(index)\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteItem = (key) => {\r\n        const data = this.clone(this.state.data)\r\n        data.listItems = data.listItems.filter((item, index) =>\r\n            index !== key\r\n        )\r\n        this.setState({\r\n            data: data\r\n        })\r\n    }\r\n\r\n    changePriority = (event) => {\r\n        const selectedPriority = event.target.value\r\n        this.setState({ selectedPriority: selectedPriority })\r\n    }\r\n\r\n    convertPriority = (priority) => {\r\n        if (typeof priority === 'string') {\r\n            return (priority === \"Low\") ? 3\r\n                : (priority === \"Medium\") ? 2\r\n                    : 1\r\n        } else {\r\n            return (priority === 3) ? \"Low\"\r\n                : (priority === 2) ? \"Medium\"\r\n                    : \"High\"\r\n        }\r\n    }\r\n\r\n    editPriority = (event, index) => {\r\n        const { selectedSort } = this.state\r\n        const data = this.clone(this.state.data)\r\n        const item = data.listItems[index]\r\n        const selectedPriority = event.target.value\r\n        item.priority = this.convertPriority(selectedPriority)\r\n        item.editPanelHidden = true\r\n        data.listItems = this.sortItemsBy(data.listItems, selectedSort)\r\n        this.setState({\r\n            data: data\r\n        })\r\n    }\r\n\r\n    editDate = (event, index) => {\r\n        const { selectedSort } = this.state\r\n        const data = this.clone(this.state.data)\r\n        const newDate = event.target.value\r\n        data.listItems[index].dateDue = convertDate(newDate, \"timestamp\")\r\n        data.listItems[index].editPanelHidden = true\r\n        data.listItems = this.sortItemsBy(data.listItems, selectedSort)\r\n        this.setState({\r\n            data: data\r\n        })\r\n    }\r\n\r\n    inputChange = (event) => {\r\n        const currentText = event.target.value\r\n        if (currentText === \"\") {\r\n            this.setState({\r\n                buttonDisabled: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                buttonDisabled: false\r\n            })\r\n        }\r\n    }\r\n\r\n    toggleItems = (listItems, type, tag) => {\r\n        const listItemsCopy = this.clone(listItems)\r\n        if (type === \"selected tag\") {\r\n            listItemsCopy.forEach(item => (item.tag !== tag) && (item.hidden = true))\r\n        } else if (type === \"tags only\") {\r\n            listItemsCopy.forEach(item => (item.tag === null) && (item.hidden = true))\r\n        } else if (type === \"show all\") {\r\n            listItemsCopy.forEach(item => (item.hidden === true) && (item.hidden = false))\r\n        }\r\n        return listItemsCopy\r\n    }\r\n\r\n    sortItemsBy = (listItems, selectedSort, moveFrom) => {\r\n        const showAll = this.toggleItems(listItems, \"show all\")\r\n        if (selectedSort === \"Manual\") {\r\n            const moveTo = moveFrom - 1\r\n            return listItems = this.props.arrayMove(listItems, moveFrom, moveTo)\r\n            //return listItems.sort(firstBy(\"active\", -1))\r\n        }\r\n        if (selectedSort === \"None\") {\r\n            return showAll\r\n        } else if (selectedSort === \"Priority\") {\r\n            listItems = showAll\r\n            return listItems.sort(\r\n                firstBy(\"active\", -1)\r\n                    .thenBy(\"priority\")\r\n                    .thenBy(\"dateDue\")\r\n                    .thenBy(\"task\")\r\n            )\r\n        } else if (selectedSort === \"Date Due\") {\r\n            listItems = showAll\r\n            return listItems.sort(\r\n                firstBy(\"active\", -1)\r\n                    .thenBy(\"dateDue\")\r\n                    .thenBy(\"priority\")\r\n                    .thenBy(\"task\")\r\n            )\r\n        } else if (selectedSort === \"A-Z\") {\r\n            listItems = showAll\r\n            return listItems.sort(\r\n                firstBy(\"active\", -1)\r\n                    .thenBy(\"task\")\r\n            )\r\n        } else if (selectedSort === \"Tags\") {\r\n            listItems = showAll\r\n            listItems = this.toggleItems(listItems, \"tags only\")\r\n            return listItems.sort(\r\n                firstBy(\"tag\")\r\n                    .thenBy(\"priority\")\r\n                    .thenBy(\"dateDue\")\r\n                    .thenBy(\"task\")\r\n            )\r\n        } else if (selectedSort === \"Selected Tag\") {\r\n            listItems = this.toggleItems(listItems, \"selected tag\", this.state.selectedTag)\r\n            return listItems.sort(\r\n                firstBy(\"tag\")\r\n                    .thenBy(\"priority\")\r\n                    .thenBy(\"dateDue\")\r\n                    .thenBy(\"task\")\r\n            )\r\n        } else if (selectedSort === \"toggle inactive\") {\r\n            return listItems.sort(firstBy(\"active\", -1))\r\n        }\r\n    }\r\n\r\n    sortItems = (index, manual) => {\r\n        const data = this.clone(this.state.data)\r\n        const selectedSort = this.selectSortBy.current.value\r\n        if (manual) {\r\n            if (selectedSort === \"None\") {\r\n                data.listItems = this.sortItemsBy(data.listItems, \"Manual\", index)\r\n                this.setState({\r\n                    data: data\r\n                })\r\n            } else {\r\n                data.listItems = this.sortItemsBy(data.listItems, \"Manual\", index)\r\n                this.setState({\r\n                    data: data,\r\n                    selectedSort: \"None\"\r\n                })\r\n            }\r\n        } else {\r\n            if (selectedSort === \"None\") {\r\n                data.listItems = this.sortItemsBy(data.listItems, selectedSort)\r\n                this.setState({\r\n                    data: data,\r\n                    selectedSort: selectedSort\r\n                })\r\n            } else {\r\n                data.listItems = this.sortItemsBy(data.listItems, selectedSort)\r\n                this.setState({\r\n                    data: data,\r\n                    selectedSort: selectedSort\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleEditItem = (index) => {\r\n        const data = this.clone(this.state.data)\r\n        const targetItem = data.listItems[index]\r\n        const targetPanelState = targetItem.editPanelHidden\r\n        data.listItems.forEach(function (item, index) {\r\n            if (item.editPanelHidden === false && item !== targetItem) {\r\n                item.editPanelHidden = true\r\n            }\r\n        })\r\n        data.listItems[index].editPanelHidden = !targetPanelState\r\n        this.setState({\r\n            data: data,\r\n            editTaskText: targetItem.task\r\n        })\r\n    }\r\n\r\n    changeDate = (event) => {\r\n        const updateDate = event.target.value\r\n        this.setState({\r\n            selectedDate: updateDate\r\n        })\r\n    }\r\n\r\n    changeColor = (event, selectedColor) => {\r\n        const data = this.clone(this.state.data)\r\n        data.settings.style[selectedColor] = event.target.value\r\n        this.setState({\r\n            data: data,\r\n            selectedStyle: \"None\"\r\n        })\r\n    }\r\n\r\n    toggleSettings = () => {\r\n        this.setState(state => ({\r\n            settingsHidden: false,\r\n            showModal: !state.showModal\r\n        }))\r\n    }\r\n\r\n    toggleStats = () => {\r\n        this.setState(state => ({\r\n            statsHidden: false,\r\n            showModal: !state.showModal\r\n        }))\r\n    }\r\n\r\n    changeStyle = (event) => {\r\n        const data = this.clone(this.state.data)\r\n        const style = event.target.value\r\n        const colors = data.settings.style\r\n        if (style === \"None\") {\r\n            this.setState({\r\n                selectedStyle: style\r\n            })\r\n        } else if (style === \"Default\") {\r\n            colors.colorHigh = \"#f5c6cb\"\r\n            colors.colorMedium = \"#ffeeba\"\r\n            colors.colorLow = \"#bee5eb\"\r\n            this.setState({\r\n                data: data,\r\n                selectedStyle: style\r\n            })\r\n        } else if (style === \"Marie\") {\r\n            colors.colorHigh = \"#f46ed0\"\r\n            colors.colorMedium = \"#f2b5e2\"\r\n            colors.colorLow = \"#fce8f7\"\r\n            this.setState({\r\n                data: data,\r\n                selectedStyle: style\r\n            })\r\n        } else if (style === \"Halloween\") {\r\n            colors.colorHigh = \"#e76427\"\r\n            colors.colorMedium = \"#ffa100\"\r\n            colors.colorLow = \"#feeeb8\"\r\n            this.setState({\r\n                data: data,\r\n                selectedStyle: style\r\n            })\r\n        }\r\n    }\r\n\r\n    changeTag = (event) => {\r\n        const { selectedSort } = this.state\r\n        const data = this.clone(this.state.data)\r\n        const tag = event.target.value\r\n        if (selectedSort === \"Selected Tag\") {\r\n            this.toggleItems(data.listItems, \"show all\")\r\n            this.toggleItems(data.listItems, \"selected tag\", tag)\r\n            this.setState({\r\n                data: data,\r\n                selectedTag: tag\r\n            })\r\n        } else {\r\n            this.setState({\r\n                selectedTag: tag\r\n            })\r\n        }\r\n    }\r\n\r\n    addTag = () => {\r\n        const data = this.clone(this.state.data)\r\n        const newTag = prompt(\"Enter a new tag\")\r\n        if (newTag === \"\" || data.tags.includes(newTag)) {\r\n            alert(\"Invalid tag or duplicate\")\r\n        } else {\r\n            data.tags = [...data.tags, newTag]\r\n            this.setState({\r\n                data: data,\r\n                selectedTag: newTag\r\n            })\r\n        }\r\n    }\r\n\r\n    removeTag = () => {\r\n        const { selectedTag } = this.state\r\n        const data = this.clone(this.state.data)\r\n        data.tags = data.tags.filter(tag => tag !== selectedTag || tag === \"None\")\r\n        this.setState({\r\n            data: data,\r\n            selectedTag: \"None\"\r\n        })\r\n    }\r\n\r\n    editText = (event, index) => {\r\n        event.stopPropagation()\r\n        const { editTaskText } = this.state\r\n        const data = this.clone(this.state.data)\r\n        data.listItems[index].task = editTaskText\r\n        data.listItems[index].editPanelHidden = true\r\n        this.setState({\r\n            data: data\r\n        })\r\n    }\r\n\r\n    handleTextChange = (event) => {\r\n        const currentText = event.target.value\r\n        this.setState({\r\n            editTaskText: currentText\r\n        })\r\n    }\r\n\r\n    hideEditPanels = () => {\r\n        const { data } = this.state\r\n        data.listItems.forEach(item => (item.editPanelHidden === false) && (item.editPanelHidden = true))\r\n    }\r\n\r\n    toggleInactiveTasks = () => {\r\n        const data = this.clone(this.state.data)\r\n        data.settings.hideInactive = !data.settings.hideInactive\r\n        data.listItems = this.sortItemsBy(data.listItems, \"toggle inactive\")\r\n        this.setState({\r\n            data: data\r\n        })\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState(state => ({\r\n            showModal: !state.showModal,\r\n            settingsHidden: true,\r\n            statsHidden: true\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const { data, stats, buttonDisabled, selectedPriority, selectedDate, selectedTag, selectedSort, settingsHidden, statsHidden, selectedStyle, showModal } = this.state\r\n        const { convertDate, articulateDateDue } = this.props\r\n        return (\r\n            <Container style={{ backgroundColor: (selectedStyle === \"Halloween\") ? \"black\" : \"white\" }}>\r\n                <Notifications />\r\n                <Modal isOpen={showModal} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        {(settingsHidden) ? \"Stats\" : \"Settings\"}\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Settings\r\n                            data={data}\r\n                            settingsHidden={settingsHidden}\r\n                            selectedStyle={selectedStyle}\r\n                            changeStyle={this.changeStyle}\r\n                            changeColor={this.changeColor}\r\n                            toggleInactiveTasks={this.toggleInactiveTasks}\r\n                        />\r\n                        <Stats\r\n                            stats={stats}\r\n                            statsHidden={statsHidden}\r\n                        />\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.toggleModal}>OK</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Row>\r\n                    <Col className=\"todo\" sm=\"10\" md=\"7\" lg=\"5\" xl=\"5\">\r\n                        <AddTask\r\n                            data={data}\r\n                            addItem={this.addItem}\r\n                            inputChange={this.inputChange}\r\n                            convertPriority={this.convertPriority}\r\n                            convertDate={convertDate}\r\n                            buttonDisabled={buttonDisabled}\r\n                            selectedPriority={selectedPriority}\r\n                            selectedDate={selectedDate}\r\n                            selectedTag={selectedTag} />\r\n                        <Row className=\"row-1 no-gutters\">\r\n                            <Col>\r\n                                <div className=\"calendar\">\r\n                                    <Calendar\r\n                                        value={selectedDate}\r\n                                        handleOnChange={this.changeDate}\r\n                                        convertDate={convertDate} />\r\n                                </div>\r\n                            </Col>\r\n                            <Col>\r\n                                <div className=\"priority--top\">\r\n                                    <Priority\r\n                                        value={selectedPriority}\r\n                                        handleOnChange={this.changePriority} />\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"row-2 no-gutters\">\r\n                            <Col\r\n                                className=\"sort padding-right\"\r\n                                xs=\"5\">\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    className=\"select-sort\"\r\n                                    value={selectedSort}\r\n                                    innerRef={this.selectSortBy}\r\n                                    onChange={this.sortItems}>\r\n                                    <option value=\"None\">Sort: None</option>\r\n                                    <option value=\"Priority\">Priority</option>\r\n                                    <option value=\"Date Due\">Date Due</option>\r\n                                    <option value=\"A-Z\">A-Z</option>\r\n                                    <option value=\"Tags\">Tags</option>\r\n                                    <option value=\"Selected Tag\">Selected Tag</option>\r\n                                </Input>\r\n                            </Col>\r\n                            <Col\r\n                                className=\"manage-tags\"\r\n                                xs=\"7\">\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    className=\"select-tag\"\r\n                                    value={selectedTag}\r\n                                    onChange={this.changeTag}>\r\n                                    {this.state.data.tags.map((tag, index) =>\r\n                                        <option\r\n                                            key={index}\r\n                                            value={tag}>\r\n                                            {(tag === \"None\") ? \"Tag: None\" : tag}\r\n                                        </option>\r\n                                    )}\r\n                                </Input>\r\n                                <Button\r\n                                    outline\r\n                                    color=\"secondary\"\r\n                                    size=\"sm\"\r\n                                    onClick={this.removeTag}>\r\n                                    -\r\n                                </Button>\r\n                                <Button\r\n                                    outline\r\n                                    color=\"secondary\"\r\n                                    size=\"sm\"\r\n                                    onClick={this.addTag}>\r\n                                    +\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <List className=\"list\">\r\n                            <TransitionGroup>\r\n                                {data.listItems.map((item, index) =>\r\n                                    (item.hidden) ?\r\n                                        null :\r\n                                        (!item.active && data.settings.hideInactive) ?\r\n                                            null :\r\n                                            <CSSTransition\r\n                                                key={item.id}\r\n                                                timeout={500}\r\n                                                classNames=\"fade\">\r\n                                                <ListItem\r\n                                                    data={data}\r\n                                                    item={item}\r\n                                                    index={index}\r\n                                                    handleTextChange={this.handleTextChange}\r\n                                                    editText={this.editText}\r\n                                                    toggleEditItem={this.toggleEditItem}\r\n                                                    articulateDateDue={articulateDateDue}\r\n                                                    markComplete={this.markComplete}\r\n                                                    sortItems={this.sortItems}\r\n                                                    convertPriority={this.convertPriority}\r\n                                                    editDate={this.editDate}\r\n                                                    convertDate={convertDate}\r\n                                                    editPriority={this.editPriority} />\r\n                                            </CSSTransition>\r\n                                )}\r\n                            </TransitionGroup>\r\n                        </List>\r\n                        <Row className=\"row-3 no-gutters\">\r\n                            <Button\r\n                                className=\"settings-button\"\r\n                                outline\r\n                                color=\"secondary\"\r\n                                onClick={this.toggleSettings}\r\n                            >\r\n                                {\"⚙\"}\r\n                            </Button>\r\n                            <Button\r\n                                className=\"stats-button\"\r\n                                outline\r\n                                color=\"secondary\"\r\n                                onClick={this.toggleStats}\r\n                            >\r\n                                {\"★\"}\r\n                            </Button>\r\n                        </Row>\r\n                        <Row className=\"settings no-gutters\">\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nToDo.defaultProps = {\r\n    convertDate: convertDate,\r\n    articulateDateDue: articulateDateDue,\r\n    arrayMove: arrayMove\r\n}\r\n\r\nexport default ToDo","import React, { Component } from 'react';\nimport { convertDate, articulateDateDue, arrayMove } from './functions'\nimport ToDo from './ToDo'\nimport './App.css';\n\nclass App extends Component {\n    render() {\n        const data = localStorage.getItem(\"data_7\")\n        const stats = localStorage.getItem(\"stats\")\n        const saveData = (data, fileName) => localStorage.setItem(fileName, JSON.stringify(data))\n        return (\n            <ToDo\n                data={data}\n                stats={stats}\n                saveData={saveData}\n                convertDate={convertDate}\n                articulateDateDue={articulateDateDue}\n                arrayMove={arrayMove}\n            />\n        )\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}