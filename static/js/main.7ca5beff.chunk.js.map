{"version":3,"sources":["functions.js","randomMessage.js","thenBy.min.js","Stats.js","Calendar.js","randomName.js","CatGif.js","CustomModal.js","Shop.js","AddTask.js","Priority.js","List.js","Settings.js","TaskText.js","TaskDetails.js","TaskButtons.js","TaskEditBox.js","Tags.js","Checklist.js","Task.js","ToDo.js","App.js","serviceWorker.js","index.js"],"names":["convertDate","date","convertTo","ISODate","Date","toISOString","substring","getTime","year","month","day","setUTCFullYear","setUTCMonth","setUTCDate","toLocaleDateString","getDate","time","todayISO","now","articulateDateDue","dateDue","today","arrayMove","arr","fromIndex","toIndex","arrCopy","slice","element","length","splice","hexToRGB","hex","alpha","r","parseInt","g","b","randomMessage","messages","Math","floor","random","firstBy","identity","v","ignoreCase","toLowerCase","tb","func","opt","x","this","y","f","direction","prop","v1","uf","preprocess","cmp","v2","makeCompareFunction","a","thenBy","Stats","_ref","stats","tasksCompleted","totalTasksCompleted","Object","keys","oneWeekAgo","totalTasksCompletedOneWeek","reduce","total","id","timeCompleted","react_default","createElement","className","bonusStars","starsUsed","concat","consecutiveDaysUsed","Calendar","handleOnChange","value","Fragment","reactstrap_es","onChange","type","min","max","randomName","consonants","randomLetter","newName","charAt","toUpperCase","CatGif","_Component","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSave","url","kitty","name","state","newKittyName","popoverOpen","saveKitty","setState","saveButtonClicked","loading","inherits","createClass","key","_this2","axios","method","headers","x-api-key","timeout","then","response","gif","data","console","log","catch","error","alert","_this3","_this$state","hideCatGif","react_spinners","color","sizeUnit","size","body","xs","outline","onClick","style","width","src","alt","disabled","Component","CustomModal","isOpen","modalType","header","toggleModal","toggle","children","ShopItems","buttonDisabled","totalStars","buyGif","offset","SavedKitties","showSavedKitties","deleteKitty","inventory","striped","catGifs","map","index","scope","Shop","stars","showGif","deductStars","togglesavedKitties","toggleInnerModal","innerModal","currentCatGif","activeTab","tab","_this$props","CustomModal_CustomModal","tabs","classnames","active","cursor","toggleTab","tabId","Shop_ShopItems","CatGif_CatGif","Shop_SavedKitties","AddTask","createItem","event","tasks","selectedPriority","addTask","convertPriority","selectedDate","selectedTag","inputElementValue","inputElement","current","itemInstances","task","text","uuid","hidden","priority","timeCreated","instance","editPanelHidden","settingsHidden","tag","checklist","preventDefault","React","createRef","_this$props2","inputChange","onSubmit","innerRef","placeholder","Priority","List","Settings","settings","selectedStyle","changeStyle","changeColor","toggleInactiveTasks","toggleAddTasksToTop","colorHigh","colorMedium","colorLow","label","checked","hideInactive","addTasksToTop","TaskText","toggleEditItem","handleTextChange","editText","backgroundColor","textDecorationLine","lib_default","stopPropagation","defaultValue","TaskDetails","react_transition_group","in","classNames","TaskButtons","markComplete","sortItems","TaskEditBox","Tags","tags","changeTag","addTag","removeTag","showButtons","Checklist","currentText","addButtonDisabled","addChecklistTask","complete","totalTasks","percentageComplete","sum","priorityColor","animated","checklistHidden","padding","sortTask","deleteTask","marginBottom","height","hide","marginTop","Task","TaskText_TaskText","TaskDetails_TaskDetails","TaskButtons_TaskButtons","TaskEditBox_TaskEditBox","Calendar_Calendar","editDate","Priority_Priority","editPriority","showChecklist","Tags_Tags","editTaskTag","Checklist_Checklist","deleteChecklistTask","hideEditPanels","sortChecklistTask","ToDo","clone","object","JSON","parse","stringify","newTask","selectedSort","toConsumableArray","sortItemsBy","undo","setTimeout","notify","notifyStyle","background","err","filter","taskIndex","checklistTaskIndex","checklistTask","updatedChecklist","encouragingMessage","changePriority","target","newDate","toggleItems","tasksCopy","forEach","moveFrom","showAll","moveTo","sort","manual","selectSortBy","targetTask","targetPanelState","editTaskText","changeDate","updateDate","selectedColor","styles","newTag","prompt","includes","modals","item","push","font","daysAppUsed","settingsModal","statsModal","shopModal","createShowQueue","Default","Marie","Marie_2","Halloween","prevProps","prevState","_this$state2","saveData","prevTasksCompleted","revisedStats","countDays","_this$state3","document","notify_default","sm","md","lg","xl","AddTask_AddTask","List_List","Task_Task","Settings_Settings","Stats_Stats","Shop_Shop","defaultProps","array","App","localStorage","getItem","src_ToDo","fileName","setItem","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7ca5beff.chunk.js","sourcesContent":["const convertDate = (date, convertTo) => {\r\n    const ISODate = new Date(date).toISOString().substring(0, 10)\r\n    if (convertTo === 'ISO') {\r\n        return ISODate\r\n    } else if (convertTo === 'timestamp') {\r\n        return new Date(date).getTime()\r\n    } else if (convertTo === 'local') {\r\n        const year = ISODate.substring(0, 4)\r\n        const month = ISODate.substring(5, 7)\r\n        const day = ISODate.substring(8, 10)\r\n        const date = new Date()\r\n        date.setUTCFullYear(year)\r\n        date.setUTCMonth(month - 1)\r\n        date.setUTCDate(day)\r\n        return date.toLocaleDateString('en-GB')\r\n    }\r\n}\r\n\r\nconst getDate = (time) => {\r\n    if (time === 'today') {\r\n        const todayISO = convertDate(Date.now(), 'ISO')\r\n        const todayTimestamp = convertDate(todayISO, 'timestamp')\r\n        return todayTimestamp\r\n    }\r\n}\r\n\r\nconst countDays  = (array, length, sum) => {\r\n    if (array[length] - array[length-1] === 86400000) {\r\n        sum += 1\r\n        return countDays(array, length - 1, sum)\r\n    } else {\r\n        return sum\r\n    }\r\n}\r\n\r\nconst articulateDateDue = (dateDue) => {\r\n    let today = convertDate(Date.now(), 'ISO')\r\n    today = convertDate(today, 'timestamp')\r\n    if (dateDue - today < 0) {\r\n        return \"Overdue\"\r\n    }\r\n    if (dateDue - today === 0) {\r\n        return \"Today\"\r\n    } else if (dateDue - today === 86400000) {\r\n        return \"Tomorrow\"\r\n    } else {\r\n        return convertDate(dateDue, 'local')\r\n    }\r\n}\r\n\r\nconst arrayMove = (arr, fromIndex, toIndex) => {\r\n    const arrCopy = arr.slice(0)\r\n    const element = arr[fromIndex]\r\n    if (fromIndex === 0) {\r\n        toIndex = arr.length\r\n    }\r\n    arrCopy.splice(fromIndex, 1)\r\n    arrCopy.splice(toIndex, 0, element)\r\n    return arrCopy\r\n}\r\n\r\n// Thanks to AJFarkas @ https://stackoverflow.com/a/28056903/9636451\r\nconst hexToRGB = (hex, alpha) => {\r\n    var r = parseInt(hex.slice(1, 3), 16),\r\n        g = parseInt(hex.slice(3, 5), 16),\r\n        b = parseInt(hex.slice(5, 7), 16);\r\n\r\n    if (alpha) {\r\n        return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\"\r\n    } else {\r\n        return \"rgb(\" + r + \", \" + g + \", \" + b + \")\"\r\n    }\r\n}\r\n\r\nexport { convertDate, getDate, countDays, articulateDateDue, arrayMove, hexToRGB }","const randomMessage = () => {\r\n    const messages = [\r\n        \"Great job! 👍\",\r\n        \"Nice! 👌\",\r\n        \"You're doing so great!\",\r\n        \"You're on a roll!\",\r\n        \"We're doing it! 😁\",\r\n        \"Weow! 😺\",\r\n        \"A++ for effort!✨\",\r\n        \"Cool 😎\",\r\n        \"Amazing! 😄\",\r\n        \"Impressive 😎\",\r\n        \"Incredible! 👏\",\r\n        \"Nice moves! 🕺\",\r\n        \"Making progress! 😊\",\r\n        \"You're unstoppable! 😲\",\r\n        \"You're on fiyah!!!\",\r\n        \"Don't stop now!\",\r\n        \"You're pretty neat.\",\r\n        \"YES!!! 😊\",\r\n        \"Pretty dope tbh\",\r\n        \"You're like a rocket! 🚀\",\r\n        \"Whoa slow down! I can't keep up!\",\r\n        \"Jaw to the floor 😲\",\r\n        \"Proud of you 😉\"\r\n    ]\r\n    return messages[Math.floor(Math.random() * messages.length)]\r\n}\r\n\r\nexport { randomMessage }","/***\r\n   Copyright 2013 Teun Duynstee\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n     http://www.apache.org/licenses/LICENSE-2.0\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\nvar firstBy = (function() {\r\n\r\n    function identity(v){return v;}\r\n\r\n    function ignoreCase(v){return typeof(v)===\"string\" ? v.toLowerCase() : v;}\r\n\r\n    function makeCompareFunction(f, opt){\r\n        opt = typeof(opt)===\"number\" ? {direction:opt} : opt||{};\r\n        if(typeof(f)!=\"function\"){\r\n            var prop = f;\r\n            // make unary function\r\n            f = function(v1){return !!v1[prop] ? v1[prop] : \"\";}\r\n        }\r\n        if(f.length === 1) {\r\n            // f is a unary function mapping a single item to its sort score\r\n            var uf = f;\r\n            var preprocess = opt.ignoreCase?ignoreCase:identity;\r\n            var cmp = opt.cmp || function(v1,v2) {return v1 < v2 ? -1 : v1 > v2 ? 1 : 0;}\r\n            f = function(v1,v2) {return cmp(preprocess(uf(v1)), preprocess(uf(v2)));}\r\n        }\r\n        if(opt.direction === -1) return function(v1,v2){return -f(v1,v2)};\r\n        return f;\r\n    }\r\n\r\n    /* adds a secondary compare function to the target function (`this` context)\r\n       which is applied in case the first one returns 0 (equal)\r\n       returns a new compare function, which has a `thenBy` method as well */\r\n    function tb(func, opt) {\r\n        /* should get value false for the first call. This can be done by calling the \r\n        exported function, or the firstBy property on it (for es6 module compatibility)\r\n        */\r\n        var x = (typeof(this) == \"function\" && !this.firstBy) ? this : false;\r\n        var y = makeCompareFunction(func, opt);\r\n        var f = x ? function(a, b) {\r\n                        return x(a,b) || y(a,b);\r\n                    }\r\n                  : y;\r\n        f.thenBy = tb;\r\n        return f;\r\n    }\r\n    tb.firstBy = tb;\r\n    return tb;\r\n})();\r\n\r\nexport { firstBy }","import React from 'react'\r\n\r\nexport const Stats = ({ stats }) => {\r\n    const tasksCompleted = stats.tasksCompleted\r\n    const totalTasksCompleted = Object.keys(tasksCompleted).length\r\n    const oneWeekAgo = Date.now() - (60 * 60 * 24 * 7 * 1000)\r\n    const totalTasksCompletedOneWeek = Object.keys(tasksCompleted)\r\n        .reduce((total, id) => {\r\n            if (tasksCompleted[id].timeCompleted > oneWeekAgo) {\r\n                total++\r\n            }\r\n            return total\r\n        }, 0)\r\n    return (\r\n        <div className='align-center'>\r\n            <div className='star-big'>\r\n                {\"★\"}\r\n            </div>\r\n            <h1>{\"Stars: \"}<span className=\"special-text\">{totalTasksCompleted + stats.bonusStars - stats.starsUsed}</span></h1>\r\n            <div>\r\n                {`Tasks completed: ${totalTasksCompleted}`}\r\n            </div>\r\n            <div>\r\n                {`This week: ${totalTasksCompletedOneWeek}`}\r\n            </div>\r\n            <div>\r\n                {`Consecutive days app used: ${stats.consecutiveDaysUsed}`}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Input } from 'reactstrap'\r\n\r\nexport const Calendar = ({ handleOnChange, value, convertDate }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Input \r\n                className='calendar-element'\r\n                onChange={handleOnChange} type='date'\r\n                value={value}\r\n                min={convertDate(Date.now(), 'ISO')}\r\n                max='2019-12-31'\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n","const randomName = () => {\r\n    const beginnings = ['ab', 'th', 'fr', 'chr', 'ch', 'dr', 'cl', 'gr', 'pr', 'st', 'sn', 'sl', 'tr', 'eth', 'an', 'el', 'in', 'ol']\r\n    const consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z']\r\n    const doubleConsonants = ['bb', 'dd', 'ff', 'gg', 'll', 'mm', 'nn', 'pp', 'rr', 'ss', 'tt', 'vv', 'zz']\r\n    const vowels = ['a', 'e', 'i', 'o', 'u']\r\n    const doubleVowels = ['au', 'ai', 'ea', 'ee', 'eu', 'eo', 'ia', 'io', 'oo', 'ou', 'ui']\r\n    const endings = ['y', 'a', 'e', 's', 'ie', 'ia', 'er', 'el', 'on', 'en', 'ur', 'es', 'as', 'sy', 'sta', 'ely', 'ley', 'ina', 'ers', 'elyn', 'ica', 'arin', ]\r\n    const randomLetter = (type) => type[Math.floor(Math.random() * type.length)]\r\n    let newName =\r\n        ((Math.random() > 0.4) ? randomLetter(consonants) : randomLetter(beginnings)) +\r\n        ((Math.random() > 0.4) ? randomLetter(doubleVowels) : randomLetter(vowels)) + \r\n        ((Math.random() > 0.8) ? randomLetter(doubleConsonants) : randomLetter(consonants)) + \r\n        randomLetter(endings)\r\n    newName = newName.charAt(0).toUpperCase() + newName.slice(1)\r\n    return newName\r\n}\r\n\r\nexport { randomName }","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Card, CardTitle, CardHeader, Row, Col } from 'reactstrap'\r\nimport { ClipLoader } from 'react-spinners'\r\nimport { randomName } from './randomName'\r\n\r\nexport class CatGif extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { \r\n            loading: true,\r\n            saveButtonClicked: false,\r\n            newKittyName: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios({\r\n            method: 'get',\r\n            url: 'https://api.thecatapi.com/v1/images/search?limit=1&mime_types=gif&format=json&order=RANDOM',\r\n            headers: { 'x-api-key': 'f5568fae-d85b-4310-8e88-cb282e0e2bac' },\r\n            timeout: 20000 \r\n        })\r\n            .then(response => {\r\n                const gif = response.data\r\n                console.log(gif[0].url)\r\n                this.setState({\r\n                    loading: false,\r\n                    newKittyName: randomName(),\r\n                    gif\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                alert(error)\r\n            })\r\n    }\r\n\r\n    handleSave = (url) => {\r\n        const kitty = {\r\n            url: url,\r\n            name: this.state.newKittyName,\r\n            popoverOpen: false\r\n        }\r\n        this.props.saveKitty(kitty)\r\n        this.setState({ saveButtonClicked: true })\r\n    }\r\n\r\n    render() {\r\n        const { loading, gif, saveButtonClicked, newKittyName } = this.state\r\n        const { hideCatGif } = this.props\r\n        return (\r\n            (loading) ?\r\n                <div className='align-center'>\r\n                    <ClipLoader\r\n                        color='#007bff'\r\n                        sizeUnit='px'\r\n                        size={50}\r\n                        loading={loading}\r\n                    />\r\n                </div>\r\n                :\r\n                <Card body className='text-center'>\r\n                    <CardTitle>\r\n                        <Row>\r\n                            <Col className='align-left' xs='9'>\r\n                                <CardTitle>\r\n                                    {`Here's your new kitty! - ${newKittyName}`}\r\n                                </CardTitle>\r\n                            </Col>\r\n                            <Col className='align-right' xs='3'>\r\n                                <Button\r\n                                    outline\r\n                                    onClick={hideCatGif}\r\n                                >\r\n                                    {\"X\"}\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </CardTitle>\r\n                    <div className='align-center margin-bottom-5 margin-top-5'>\r\n                        <img\r\n                            className='rounded-border'\r\n                            style={{ width: '100%' }}\r\n                            src={gif[0].url}\r\n                            alt=\"This should be a cat gif...\"\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        onClick={() => this.handleSave(gif[0].url)}\r\n                        color={(saveButtonClicked) ? 'success' : 'info'}\r\n                        disabled={saveButtonClicked}\r\n                    >\r\n                        {(saveButtonClicked) ? \"Saved!\" : \"Save Kitty\"}\r\n                    </Button>\r\n                </Card>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\r\n\r\nexport const CustomModal = (props) => {\r\n    const { className, isOpen, modalType, header, toggleModal } = props\r\n    return (\r\n        <Modal\r\n            isOpen={isOpen}\r\n            toggle={() => toggleModal(modalType)}\r\n        >\r\n            <ModalHeader toggle={() => toggleModal(modalType)}>\r\n                {header}\r\n            </ModalHeader>\r\n            <ModalBody className={className}>\r\n                {props.children}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button\r\n                    color='primary'\r\n                    onClick={() => toggleModal(modalType)}\r\n                >\r\n                    {\"OK\"}\r\n                </Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport {\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Badge,\r\n    Collapse,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardText,\r\n    Popover,\r\n    PopoverHeader,\r\n    PopoverBody,\r\n    Table,\r\n    TabContent,\r\n    TabPane,\r\n    Nav,\r\n    NavItem,\r\n    NavLink\r\n} from 'reactstrap'\r\nimport { CatGif } from './CatGif'\r\nimport { CustomModal } from './CustomModal'\r\nimport classnames from 'classnames'\r\n\r\nconst ShopItems = (props) => {\r\n    const { buttonDisabled, totalStars, buyGif } = props\r\n    return (\r\n        <Row className='margin-top-10'>\r\n            <Col\r\n                xs={{ size: 10, offset: 1 }}\r\n            >\r\n                <Card className='margin-bottom-10'>\r\n                    <CardHeader>{\"Items\"}</CardHeader>\r\n                    <CardBody>\r\n                        <Card className='align-center'>\r\n                            <CardBody>\r\n                                <CardText>{\"1 x Cat Gif: ⭐2\"}</CardText>\r\n                                <Button\r\n                                    className='buy-button'\r\n                                    color='warning'\r\n                                    disabled={buttonDisabled || totalStars < 2}\r\n                                    onClick={() => buyGif(2)}\r\n                                >\r\n                                    {\"Retrieve Cuteness\"}\r\n                                </Button>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nconst SavedKitties = (props) => {\r\n    const { showSavedKitties, deleteKitty, inventory, toggleModal } = props\r\n    return (\r\n        <Row className='margin-top-10'>\r\n            <Col>\r\n                <Collapse isOpen={showSavedKitties}>\r\n                    <Table striped>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>{\"#\"}</th>\r\n                                <th>{\"Kitty\"}</th>\r\n                                <th>{\"Gif\"}</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {inventory.catGifs.map((gif, index) =>\r\n                                <tr>\r\n                                    <th scope='row'>{index + 1}</th>\r\n                                    <td>{gif.name}</td>\r\n                                    <td>\r\n                                        <Button\r\n                                            color='link'\r\n                                            onClick={() => toggleModal(gif)}\r\n                                        >\r\n                                            {\"View\"}\r\n                                        </Button>\r\n                                    </td>\r\n                                    <td>\r\n                                        <Button\r\n                                            color='danger'\r\n                                            onClick={() => deleteKitty(index)}\r\n                                        >\r\n                                            {\"x\"}\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </Table>\r\n                </Collapse>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport class Shop extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showGif: false,\r\n            buttonDisabled: false,\r\n            showSavedKitties: false,\r\n            innerModal: false,\r\n            currentCatGif: '',\r\n            activeTab: '1'\r\n        }\r\n    }\r\n\r\n    buyGif = (stars) => {\r\n        this.setState({\r\n            showGif: true,\r\n            buttonDisabled: true\r\n        })\r\n        this.props.deductStars(stars)\r\n    }\r\n\r\n    hideCatGif = () => {\r\n        this.setState({\r\n            showGif: false,\r\n            buttonDisabled: false\r\n        })\r\n    }\r\n\r\n    togglesavedKitties = () => {\r\n        this.setState({ showSavedKitties: !this.state.showSavedKitties })\r\n    }\r\n\r\n    toggleInnerModal = (gif) => {\r\n        if (this.state.innerModal) {\r\n            this.setState({\r\n                innerModal: false\r\n            })\r\n        } else {\r\n            this.setState({\r\n                innerModal: true,\r\n                currentCatGif: gif\r\n            })\r\n        }\r\n    }\r\n\r\n    toggleTab(tab) {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n                activeTab: tab,\r\n                showSavedKitties: !this.state.showSavedKitties\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { stats, inventory, saveKitty, deleteKitty } = this.props\r\n        const { buttonDisabled, showSavedKitties, innerModal, currentCatGif, showGif } = this.state\r\n        const totalStars = Object.keys(stats.tasksCompleted).length + stats.bonusStars - stats.starsUsed\r\n        return (\r\n            <React.Fragment>\r\n                <CustomModal\r\n                    isOpen={innerModal}\r\n                    header={currentCatGif.name}\r\n                    toggleModal={this.toggleInnerModal}\r\n                >\r\n                    <img\r\n                        style={{ width: '100%' }}\r\n                        src={currentCatGif.url}\r\n                        alt=\"This should be a cat gif..\"\r\n                    >\r\n                    </img>\r\n                </CustomModal>\r\n                <Nav tabs>\r\n                    <NavItem>\r\n                        <NavLink\r\n                            className={classnames({ active: this.state.activeTab === '1' })}\r\n                            style={{ cursor:'pointer' }}\r\n                            onClick={() => this.toggleTab('1')}\r\n                        >\r\n                            {\"Shop\"}\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink\r\n                            className={classnames({ active: this.state.activeTab === '2' })}\r\n                            style={{ cursor:'pointer' }}\r\n                            onClick={() => this.toggleTab('2')}\r\n                        >\r\n                            {\"Saved Kitties\"}\r\n                        </NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n                <TabContent activeTab={this.state.activeTab}>\r\n                    <TabPane tabId=\"1\">\r\n                        <Row className='margin-top-10'>\r\n                            <Col xs={{ size: 6, offset: 6 }}>\r\n                                <h4 className='align-center'>\r\n                                    {\"Stars \"}\r\n                                    <Badge\r\n                                        className='golden-text'\r\n                                        color='primary'>\r\n                                        <span className='drop-shadow'>\r\n                                            {totalStars}\r\n                                        </span>\r\n                                    </Badge>\r\n                                </h4>\r\n                            </Col>\r\n                        </Row>\r\n                        <ShopItems\r\n                            buttonDisabled={buttonDisabled}\r\n                            totalStars={totalStars}\r\n                            buyGif={this.buyGif}\r\n                        />\r\n                        {(showGif) &&\r\n                            <CatGif\r\n                                saveKitty={saveKitty}\r\n                                hideCatGif={this.hideCatGif}\r\n                            />}\r\n                    </TabPane>\r\n                    <TabPane tabId='2'>\r\n                        <SavedKitties\r\n                            deleteKitty={deleteKitty}\r\n                            showSavedKitties={showSavedKitties}\r\n                            inventory={inventory}\r\n                            toggleModal={this.toggleInnerModal}\r\n                        />\r\n                    </TabPane>\r\n                </TabContent>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport uuid from 'uuid'\r\nimport { Row, Col, Input, Button, Form, FormGroup } from 'reactstrap'\r\n\r\nexport class AddTask extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.inputElement = React.createRef()\r\n    }\r\n    createItem = (event) => {\r\n        const { \r\n            tasks,\r\n            selectedPriority,\r\n            addTask,\r\n            convertPriority,\r\n            convertDate,\r\n            selectedDate,\r\n            selectedTag\r\n        } = this.props\r\n        const inputElementValue = this.inputElement.current.value\r\n        const itemInstances = tasks.reduce(function (total, task) {\r\n            return total + (inputElementValue === task.text ? 1 : 0)\r\n        }, 1)\r\n        const newTask = {\r\n            active: true,\r\n            id: uuid().substring(0, 12),\r\n            hidden: false,\r\n            text: inputElementValue,\r\n            priority: convertPriority(selectedPriority),\r\n            timeCreated: Date.now(),\r\n            dateDue: convertDate(selectedDate, 'timestamp'),\r\n            instance: itemInstances,\r\n            editPanelHidden: true,\r\n            settingsHidden: true,\r\n            tag: (selectedTag === 'None') ? 'None' : selectedTag,\r\n            checklist: []\r\n        }\r\n        addTask(newTask)\r\n        this.inputElement.current.value = \"\"\r\n        event.preventDefault()\r\n    }\r\n    render() {\r\n        const { inputChange, buttonDisabled } = this.props\r\n        return (\r\n            <Form onSubmit={this.createItem}>\r\n                <FormGroup>\r\n                    <Row className='row-0 no-gutters'>\r\n                        <Col className='padding-right' xs='9'>\r\n                            <Input \r\n                                type='text'\r\n                                className='input--add-task'\r\n                                onChange={inputChange}\r\n                                innerRef={this.inputElement}\r\n                                placeholder='Enter Task'>\r\n                            </Input>\r\n                        </Col>\r\n                        <Col xs='3'>\r\n                            <Button\r\n                                className='add-button'\r\n                                outline color='primary'\r\n                                disabled={buttonDisabled}\r\n                                type='submit'\r\n                            >\r\n                                {\"Add\"}\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </FormGroup>\r\n            </Form>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Input } from 'reactstrap'\r\n\r\nexport const Priority = ({ handleOnChange, value }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Input\r\n                type='select'\r\n                className='priority-element'\r\n                value={value}\r\n                onChange={handleOnChange}\r\n            >\r\n                <option value='Low'>Priority: Low</option>\r\n                <option value='Medium'>Medium</option>\r\n                <option value='High'>High</option>\r\n            </Input>\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const List = (props) => {\r\n    return (\r\n        <div className='list'>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Row, Col, Input, CustomInput } from 'reactstrap'\r\n\r\nexport const Settings = ({ settings, selectedStyle, changeStyle, changeColor, toggleInactiveTasks, toggleAddTasksToTop }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <fieldset>\r\n                <div>\r\n                    <legend>Choose your colours</legend>\r\n                    <div>\r\n                        <Input\r\n                            className='select-style'\r\n                            type='select'\r\n                            value={selectedStyle}\r\n                            onChange={changeStyle}\r\n                        >\r\n                                <option value='None'>None</option>\r\n                                <option value='Default'>Default</option>\r\n                                <option value='Marie'>Marie</option>\r\n                                <option value='Marie_2'>Marie 2</option>\r\n                                <option value='Halloween'>Halloween</option>\r\n                        </Input>\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            className='change-color'\r\n                            type='color'\r\n                            value={settings.style.colorHigh}\r\n                            onChange={(event) => changeColor(event, 'colorHigh')}>\r\n                        </input>\r\n                        <label>High Priority</label>\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            className='change-color'\r\n                            type='color'\r\n                            value={settings.style.colorMedium}\r\n                            onChange={(event) => changeColor(event, 'colorMedium')}>\r\n                        </input>\r\n                        <label>Medium Priority</label>\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            className='change-color'\r\n                            type='color'\r\n                            value={settings.style.colorLow}\r\n                            onChange={(event) => changeColor(event, 'colorLow')}>\r\n                        </input>\r\n                        <label>Low Priority</label>\r\n                    </div>\r\n                </div>\r\n                <React.Fragment>\r\n                    <div>-----------</div>\r\n                    <Row>\r\n                        <Col>\r\n                            <CustomInput\r\n                                type='checkbox'\r\n                                id='hidInactive'\r\n                                label=\"Show completed tasks\"\r\n                                checked={!settings.hideInactive}\r\n                                onChange={toggleInactiveTasks} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <CustomInput\r\n                                type='checkbox'\r\n                                id='addTasksToTop'\r\n                                label=\"Add tasks to top of list\"\r\n                                checked={settings.addTasksToTop}\r\n                                onChange={toggleAddTasksToTop} />\r\n                        </Col>\r\n                    </Row>\r\n                    <div>-----------</div>\r\n                </React.Fragment>\r\n            </fieldset>\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react'\r\nimport TextareaAutosize from 'react-autosize-textarea'\r\nimport { Row, Col, Button } from 'reactstrap'\r\n\r\nexport const TaskText = ({ settings, task, index, toggleEditItem, handleTextChange, editText, children }) => {\r\n    return (\r\n        <div\r\n            className={(task.active) ? 'task' : 'task animate-background'}\r\n            onClick={() => toggleEditItem(index)}\r\n            style={{\r\n                backgroundColor: (!task.active) ?\r\n                    '#e5e5e5' :\r\n                    (task.priority === 3) ?\r\n                        settings.style.colorLow :\r\n                        (task.priority === 2) ?\r\n                            settings.style.colorMedium :\r\n                            settings.style.colorHigh\r\n            }}\r\n        >\r\n            <span \r\n                style={{\r\n                textDecorationLine: (task.active) ?\r\n                    'none' :\r\n                    'line-through'\r\n                }}\r\n            >\r\n                {(task.editPanelHidden) ?\r\n                    <Row>\r\n                        <Col>\r\n                            {task.text}\r\n                            <span className='instance'>\r\n                                {(task.instance > 1) ?\r\n                                    ` (${task.instance})` :\r\n                                    null}\r\n                            </span>\r\n                        </Col>\r\n                    </Row> :\r\n                    <span>\r\n                        <Row className='edit-text no-gutters'>\r\n                            <Col xs='10'>\r\n                                <TextareaAutosize\r\n                                    className='edit-text-element'\r\n                                    onChange={(event) => handleTextChange(event)}\r\n                                    onClick={(event) => event.stopPropagation()}\r\n                                    defaultValue={task.text}\r\n                                />\r\n                            </Col>\r\n                            <Col xs='2'>\r\n                                <Button\r\n                                    className='edit-text-button'\r\n                                    color='secondary'\r\n                                    size='sm'\r\n                                    onClick={(event) => editText(event, index)}\r\n                                >\r\n                                    {\"OK\"}\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </span>}\r\n            </span>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport { Row, Col } from 'reactstrap'\r\n\r\nexport const TaskDetails = ({ task, articulateDateDue }) => \r\n    <Row>\r\n        <Col className='task-details'>\r\n            <TransitionGroup>\r\n                <div className='date-due x-small'>\r\n                    {(task.tag === 'None') ?\r\n                        null :\r\n                        <span className='tag'>{task.tag}</span>}\r\n                    {(task.active) ?\r\n                        `Due: ${articulateDateDue(task.dateDue)}` :\r\n                        <React.Fragment>\r\n                            <span className='x-small'>\r\n                                {\"Complete \"}\r\n                            </span>\r\n                            <CSSTransition\r\n                                in={!task.active}\r\n                                timeout={1000}\r\n                                classNames='star'\r\n                            >\r\n                                <span className='star x-small'>\r\n                                    {\"★\"}\r\n                                </span>\r\n                            </CSSTransition>\r\n                            <CSSTransition\r\n                                in={!task.active}\r\n                                timeout={1000}\r\n                                classNames='plus-one'\r\n                            >\r\n                                <span className='plus-one x-small'>\r\n                                    {\" +1\"}\r\n                                </span>\r\n                            </CSSTransition>\r\n                        </React.Fragment>}\r\n                </div>\r\n            </TransitionGroup>\r\n        </Col>\r\n    </Row>","import React from 'react'\r\nimport { Button } from 'reactstrap'\r\n\r\nexport const TaskButtons = ({ task, index, markComplete, sortItems }) => {\r\n    return (\r\n        <div className='item-buttons'>\r\n            <Button\r\n                className='sort-button'\r\n                size='sm'\r\n                outline color='secondary'\r\n                onClick={() => sortItems(index, true)}\r\n            >\r\n                {\"↑\"}\r\n            </Button>\r\n            <Button\r\n                className='delete-item-button'\r\n                size='sm'\r\n                outline\r\n                color={(task.active) ? 'success' : 'danger'}\r\n                onClick={() => markComplete(index)}\r\n            >\r\n                {(task.active) ? \"✓\" : \"✕\"}\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { Button } from 'reactstrap'\r\n\r\nexport const TaskEditBox = ({ task, index, markComplete, children }) => {\r\n    return (\r\n        <div className='edit-task' hidden={task.editPanelHidden}>\r\n            <span hidden={!task.active}>\r\n                {children}\r\n            </span>\r\n            <div className='undo'>\r\n                <Button \r\n                    hidden={task.active}\r\n                    className='undo-button'\r\n                    outline\r\n                    color='secondary'\r\n                    onClick={() => markComplete(index, true)}\r\n                >\r\n                    {`Undo \"Mark Complete\"`}\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Input, Button } from 'reactstrap'\r\n\r\nexport const Tags = (props) => {\r\n    const { tags, selectedTag, changeTag, addTag, removeTag, showButtons } = props\r\n    return (\r\n        <React.Fragment>\r\n            <Input \r\n                type='select'\r\n                className='select-tag'\r\n                value={selectedTag}\r\n                onChange={changeTag}\r\n            >\r\n                {tags.map((tag, index) => <option key={index} value={tag}>\r\n                    {(tag === 'None') ? 'Tag: None' : tag}\r\n                </option>)}\r\n            </Input>\r\n            {(!showButtons) ? null :\r\n                <React.Fragment>\r\n                    <Button\r\n                        outline\r\n                        color='secondary'\r\n                        size='sm'\r\n                        onClick={removeTag}\r\n                    >\r\n                        {\"-\"}\r\n                    </Button>\r\n                    <Button\r\n                        outline\r\n                        color='secondary'\r\n                        size='sm'\r\n                        onClick={addTag}\r\n                    >\r\n                        {\"+\"}\r\n                    </Button>\r\n                </React.Fragment>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport { Row, Col, Button, Input, Form, FormGroup, Progress } from 'reactstrap'\r\nimport { hexToRGB } from './functions'\r\n\r\nexport class Checklist extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            addButtonDisabled: true,\r\n            currentText: \"\"\r\n        }\r\n        this.inputElement = React.createRef()\r\n    }\r\n\r\n    inputChange = () => {\r\n        const inputValue = this.inputElement.current.value\r\n        // Disable button when inputValue is empty\r\n        const buttonDisabled = inputValue.length < 1\r\n        this.setState({\r\n            currentText: this.inputElement.current.value,\r\n            addButtonDisabled: buttonDisabled\r\n        })\r\n    }\r\n\r\n    addChecklistTask = (event, index) => {\r\n        event.preventDefault()\r\n        const inputValue = this.inputElement.current.value\r\n        const task = {\r\n            text: inputValue,\r\n            complete: false\r\n        }\r\n        this.inputElement.current.value = ''\r\n        this.props.addTask(task, index)\r\n        this.setState({ addButtonDisabled: true })\r\n    }\r\n\r\n    render() {\r\n        const props = this.props\r\n        const { addButtonDisabled } = this.state\r\n        const totalTasks = props.task.checklist.length\r\n        // Count completed checklist tasks\r\n        const tasksComplete = props.task.checklist.reduce((sum, task) => {\r\n            return (task.complete) ? sum + 1 : sum\r\n        }, 0)\r\n        const percentageComplete = (100 / totalTasks) * tasksComplete\r\n        // Get priority color of parent task\r\n        const priorityColor = ['colorHigh', 'colorMedium', 'colorLow'][props.task.priority - 1]\r\n        return (\r\n            <React.Fragment>\r\n                <Progress\r\n                    hidden={(totalTasks < 1) ? true : false}\r\n                    className='margin-top-2'\r\n                    striped\r\n                    animated={(percentageComplete === 100) ? false : true}\r\n                    value={percentageComplete}\r\n                    color={(percentageComplete === 100) ? 'success' : null}\r\n                />\r\n                <div className='margin-top-2'></div>\r\n                {/* Checklist will show by default if list is not empty */}\r\n                {(props.task.checklistHidden && props.task.checklist.length < 1)\r\n                    ? null\r\n                    :\r\n                    <React.Fragment>\r\n                        {props.task.checklist.map((task, index) =>\r\n                            <Row className='no-gutters'>\r\n                                <Col xs='8'>\r\n                                    <div\r\n                                        className='task'\r\n                                        style={{\r\n                                            backgroundColor: (task.complete)\r\n                                                ? '#E5E5E577'\r\n                                                : hexToRGB(props.settings.style[priorityColor], 0.5),\r\n                                            padding: '2% 3% 3% 3%'\r\n                                        }}\r\n                                    >\r\n                                        <span style={{ textDecorationLine: (task.complete) ? 'line-through' : 'none' }}>\r\n                                            {task.text}\r\n                                        </span>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col xs='2'>\r\n                                    <Button\r\n                                        className='checklist-button'\r\n                                        size='sm'\r\n                                        outline\r\n                                        color='secondary'\r\n                                        onClick={() => props.sortTask(props.index, index)}\r\n                                    >\r\n                                        {\"↑\"}\r\n                                    </Button>\r\n                                </Col>\r\n                                <Col xs='2'>\r\n                                    <Button\r\n                                        className='checklist-button'\r\n                                        size='sm'\r\n                                        outline\r\n                                        color={(task.complete) ? 'danger' : 'success'}\r\n                                        onClick={() => props.deleteTask(props.index, index)}\r\n                                    >\r\n                                        {(task.complete) ? \"✕\" : \"✓\"}\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        )}\r\n                        <Form onSubmit={(event) => this.addChecklistTask(event, props.index)}>\r\n                            <FormGroup style={{ marginBottom: 0 }}>\r\n                                <Row className='margin-top-2 no-gutters'>\r\n                                    <Col xs='10'>\r\n                                        <Input\r\n                                            type='text'\r\n                                            innerRef={this.inputElement}\r\n                                            onChange={this.inputChange}\r\n                                        >\r\n                                        </Input>\r\n                                    </Col>\r\n                                    <Col xs='2'>\r\n                                        <Button\r\n                                            type='submit'\r\n                                            className='checklist-button'\r\n                                            size='sm'\r\n                                            outline\r\n                                            color='primary'\r\n                                            disabled={addButtonDisabled}\r\n                                            style={{ height: 'calc(2.25rem + 2px)' }}\r\n                                        >\r\n                                            {\"Add\"}\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                        </Form>\r\n                        <Row>\r\n                            <Col>\r\n                                <Button\r\n                                    onClick={props.hide}\r\n                                    color='secondary'\r\n                                    outline\r\n                                    style={{ width: '100%', marginTop: '5px' }}\r\n                                >\r\n                                    {\"Hide\"}\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </React.Fragment>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport { Row, Col, Button } from 'reactstrap'\r\nimport { TaskText } from './TaskText'\r\nimport { TaskDetails } from './TaskDetails'\r\nimport { TaskButtons } from './TaskButtons'\r\nimport { TaskEditBox } from './TaskEditBox'\r\nimport { Calendar } from './Calendar'\r\nimport { Priority } from './Priority'\r\nimport { Tags } from './Tags'\r\nimport { Checklist } from './Checklist'\r\n\r\nexport const Task = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Row className='no-gutters'>\r\n                <Col xs='9'>\r\n                    <TaskText\r\n                        settings={props.settings}\r\n                        task={props.task}\r\n                        index={props.index}\r\n                        handleTextChange={props.handleTextChange}\r\n                        editText={props.editText}\r\n                        toggleEditItem={props.toggleEditItem}\r\n                    >\r\n                        <TaskDetails\r\n                            task={props.task}\r\n                            articulateDateDue={props.articulateDateDue}\r\n                        />\r\n                    </TaskText>\r\n                </Col>\r\n                <Col xs='3'>\r\n                    <TransitionGroup>\r\n                        <CSSTransition\r\n                            key={props.task.id}\r\n                            timeout={500}\r\n                            classNames='fade'>\r\n                            <TaskButtons\r\n                                task={props.task}\r\n                                index={props.index}\r\n                                markComplete={props.markComplete}\r\n                                sortItems={props.sortItems}\r\n                            />\r\n                        </CSSTransition>\r\n                    </TransitionGroup>\r\n                </Col>\r\n            </Row>\r\n            <TaskEditBox\r\n                task={props.task}\r\n                index={props.index}\r\n                markComplete={props.markComplete}>\r\n                <Row>\r\n                    <Col>\r\n                        <Calendar\r\n                            value={props.convertDate(props.task.dateDue, 'ISO')}\r\n                            handleOnChange={(event) => props.editDate(event, props.index)}\r\n                            convertDate={props.convertDate}\r\n                        />\r\n                    </Col>\r\n                    <Col>\r\n                        <Priority\r\n                            value={props.convertPriority(props.task.priority)}\r\n                            handleOnChange={(event) => props.editPriority(event, props.index)}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row className='margin-top-2'>\r\n                    <Col>\r\n                        <Button\r\n                            color='link'\r\n                            onClick={() => props.showChecklist(props.index)}\r\n                            disabled={props.task.checklist.length > 0}\r\n                        >\r\n                            {\"Add checklist ▾\"}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col>\r\n                        <Tags\r\n                            tags={props.tags}\r\n                            index={props.index}\r\n                            selectedTag={props.task.tag}\r\n                            changeTag={(event) => props.editTaskTag(event, props.index)}\r\n                            addTag={props.addTag}\r\n                            removeTag={props.removeTag}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Checklist\r\n                    task={props.task}\r\n                    index={props.index}\r\n                    settings={props.settings}\r\n                    addTask={props.addChecklistTask}\r\n                    deleteTask={props.deleteChecklistTask}\r\n                    hide={props.hideEditPanels}\r\n                    sortTask={props.sortChecklistTask}\r\n                />\r\n            </TaskEditBox>\r\n        </React.Fragment>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport Notifications, { notify } from 'react-notify-toast'\r\nimport uuid from 'uuid'\r\nimport { convertDate, getDate, countDays, articulateDateDue, arrayMove } from './functions'\r\nimport { randomMessage } from './randomMessage'\r\nimport { firstBy } from './thenBy.min.js'\r\nimport { Container, Row, Col, Input, Button } from 'reactstrap'\r\nimport { Stats } from './Stats'\r\nimport { Calendar } from './Calendar'\r\nimport { Shop } from './Shop'\r\nimport { AddTask } from './AddTask'\r\nimport { CustomModal } from './CustomModal'\r\nimport { Priority } from './Priority'\r\nimport { List } from './List'\r\nimport { Settings } from './Settings'\r\nimport { Task } from './Task'\r\nimport { Tags } from './Tags'\r\n\r\nclass ToDo extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            tasks: (this.props.tasks) ? JSON.parse(this.props.tasks) :\r\n                [{\r\n                    active: true,\r\n                    hidden: false,\r\n                    id: uuid().substring(0, 10),\r\n                    text: \"Sample Task ✨\",\r\n                    priority: 3,\r\n                    time: Date.now(),\r\n                    instance: 1,\r\n                    editPanelHidden: true,\r\n                    dateDue: getDate('today'),\r\n                    tag: 'None',\r\n                    checklist: []\r\n                }],\r\n            inventory: (this.props.inventory) ? JSON.parse(this.props.inventory) :\r\n                {\r\n                    catGifs: []\r\n                },\r\n            settings: (this.props.settings) ? JSON.parse(this.props.settings) :\r\n                {\r\n                    style: {\r\n                        colorHigh: '#f5c6cb',\r\n                        colorMedium: '#ffeeba',\r\n                        colorLow: '#bee5eb',\r\n                        backgroundColor: '#ffffff',\r\n                        font: ''\r\n                    },\r\n                    hideInactive: false,\r\n                    addTasksToTop: false\r\n                },\r\n            stats: (this.props.stats) ? JSON.parse(this.props.stats) :\r\n                {\r\n                    tasksCompleted: {},\r\n                    bonusStars: 0,\r\n                    starsUsed: 0,\r\n                    daysAppUsed: [],\r\n                    consecutiveDaysUsed: 0,\r\n                },\r\n            modals: {\r\n                settingsModal: false,\r\n                statsModal: false,\r\n                shopModal: false\r\n            },\r\n            tags: (this.props.tags) ? JSON.parse(this.props.tags) : ['None'],\r\n            buttonDisabled: true,\r\n            selectedPriority: 'Low',\r\n            selectedSort: 'None',\r\n            selectedDate: this.props.convertDate(Date.now(), 'ISO'),\r\n            selectedStyle: 'None',\r\n            selectedTag: 'None',\r\n            editTaskText: '',\r\n        }\r\n        this.selectSortBy = React.createRef()\r\n        this.notify = notify.createShowQueue()\r\n        this.styles = {\r\n            // In order: low, medium, high, background\r\n            Default: ['#bee5eb', '#ffeeba', '#f5c6cb', '#ffffff'],\r\n            Marie: ['#fce8f7', '#f2b5e2', '#f46ed0', '#ffffff'],\r\n            Marie_2: ['#85cdf3', '#ba93f0', '#e317de', '#faefff'],\r\n            Halloween: ['#feeeb8', '#ffa100', '#e76427', '#000000']\r\n        }\r\n        this.notifyStyle = { background: '#007bff', text: '#ffffff' }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.state.tasks.forEach(task => (task.editPanelHidden === false) && (task.editPanelHidden = true))\r\n        this.sortItems()\r\n        console.log(this.state)\r\n        this.notify(\"You got this! 😊\", 'custom', 2000, this.notifyStyle)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { tasks, inventory, settings, stats, tags } = this.state\r\n        const { saveData } = this.props\r\n        // console.log(this.state)\r\n        if (prevState.tasks !== tasks) {\r\n            saveData(tasks, 'tasks_3b')\r\n        }\r\n        if (prevState.inventory !== inventory) {\r\n            saveData(inventory, 'inventory_3')\r\n        }\r\n        if (prevState.settings !== settings) {\r\n            saveData(settings, 'settings_2')\r\n        }\r\n        if (prevState.stats !== stats) {\r\n            saveData(stats, 'stats_10')\r\n        }\r\n        if (prevState.tags !== tags) {\r\n            saveData(tags, 'tags_2')\r\n        }\r\n        // Uncredit bonus stars on 'mark uncomplete'\r\n        const prevTasksCompleted = Object.keys(prevState.stats.tasksCompleted).length\r\n        const tasksCompleted = Object.keys(stats.tasksCompleted).length\r\n        if (tasksCompleted < prevTasksCompleted) {\r\n            if (prevTasksCompleted % 10 === 0) {\r\n                let revisedStats = this.clone(stats)\r\n                revisedStats.bonusStars -= 2\r\n                console.log(\"Stars are being removed..\")\r\n                this.setState({ stats: revisedStats })\r\n            }\r\n        }\r\n        // Log current day in stats as timestamp\r\n        const logAppUsage = (() => {\r\n            const today = this.props.getDate('today')\r\n            let stats = this.clone(this.state.stats)\r\n            let { daysAppUsed } = stats\r\n            const lastLoggedDay = daysAppUsed[daysAppUsed.length-1]\r\n            if (lastLoggedDay !== today) {\r\n                daysAppUsed.push(today)\r\n                // Count consecutive days app used\r\n                stats.consecutiveDaysUsed = this.props.countDays(daysAppUsed, daysAppUsed.length-1, 0) + 1\r\n                console.log(\"Logging present-day timestamp to stats\")\r\n                this.setState({ stats: stats })\r\n            }\r\n        })()\r\n    }\r\n\r\n    clone = (object) => {\r\n        return JSON.parse(JSON.stringify(object))\r\n    }\r\n\r\n    addTask = (newTask) => {\r\n        const { selectedSort, settings } = this.state\r\n        let tasks = this.clone(this.state.tasks)\r\n        if (settings.addTasksToTop) {\r\n            tasks = [newTask, ...tasks]\r\n        } else {\r\n            tasks = [...tasks, newTask]\r\n        }\r\n        tasks = this.sortItemsBy(tasks, selectedSort)\r\n        this.setState({\r\n            tasks: tasks,\r\n            buttonDisabled: true\r\n        })\r\n    }\r\n\r\n    markComplete = (index, undo) => {\r\n        let tasks = this.clone(this.state.tasks)\r\n        let stats = this.clone(this.state.stats)\r\n        const task = tasks[index]\r\n        if (tasks.length === 0) {\r\n            console.log('List is empty')\r\n        } else {\r\n            try {\r\n                const itemIsActive = task.active\r\n                if (itemIsActive) {\r\n                    task.active = false\r\n                    stats.tasksCompleted[task.id] = {\r\n                        timeCreated: task.timeCreated,\r\n                        timeCompleted: Date.now()\r\n                    }\r\n                    if (this.state.settings.hideInactive) {\r\n                        tasks = this.sortItemsBy(tasks, 'active')\r\n                    }\r\n                    this.setState({\r\n                        tasks: tasks,\r\n                        stats: stats\r\n                    })\r\n                    // Stars stuff\r\n                    const tasksCompleted = Object.keys(stats.tasksCompleted).length\r\n                    if (tasksCompleted % 5 === 0) {\r\n                        setTimeout(() => {\r\n                            this.notify(randomMessage(), 'custom', 2000, this.notifyStyle)\r\n                        }, 500)\r\n                    }\r\n                    if (tasksCompleted % 10 === 0) {\r\n                        setTimeout(() => {\r\n                            this.notify(\r\n                                '⭐+2 STARS BONUS⭐', \r\n                                'custom', \r\n                                2000, \r\n                                { background: '#fff5be', text: '#000000' }\r\n                            )\r\n                            stats.bonusStars += 2\r\n                            this.setState({ stats: stats })\r\n                        }, 500)\r\n                    }\r\n                } else if (undo) {\r\n                    task.editPanelHidden = true\r\n                    task.active = true\r\n                    delete stats.tasksCompleted[task.id]\r\n                    this.setState({\r\n                        tasks: tasks,\r\n                        stats: stats\r\n                    })\r\n                } else {\r\n                    this.deleteTask(index)\r\n                }\r\n            }\r\n            catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteTask = (key) => {\r\n        let tasks = this.clone(this.state.tasks)\r\n        tasks = tasks.filter((task, index) => index !== key)\r\n        this.setState({ tasks: tasks })\r\n    }\r\n\r\n    deleteChecklistTask = (taskIndex, checklistTaskIndex) => {\r\n        let tasks = this.clone(this.state.tasks)\r\n        const checklist = tasks[taskIndex].checklist\r\n        let checklistTask = tasks[taskIndex].checklist[checklistTaskIndex]\r\n        if (checklistTask.complete) {\r\n            // Remove checklist task\r\n            const updatedChecklist = tasks[taskIndex].checklist.filter((task, index) => index !== checklistTaskIndex)\r\n            tasks[taskIndex].checklist = updatedChecklist\r\n        } else {\r\n            checklistTask.complete = true\r\n        }\r\n        const tasksComplete = tasks[taskIndex].checklist.reduce((sum, task) => {\r\n            return (task.complete) ? sum + 1 : sum\r\n        }, 0)\r\n        if (tasksComplete == checklist.length) this.encouragingMessage()\r\n        this.setState({ tasks: tasks })\r\n    }\r\n\r\n    changePriority = (event) => {\r\n        const selectedPriority = event.target.value\r\n        this.setState({ selectedPriority: selectedPriority })\r\n    }\r\n\r\n    convertPriority = (priority) => {\r\n        if (typeof priority === 'string') {\r\n            return (priority === 'Low') ? 3\r\n                : (priority === 'Medium') ? 2\r\n                    : 1\r\n        } else {\r\n            return (priority === 3) ? 'Low'\r\n                : (priority === 2) ? 'Medium'\r\n                    : 'High'\r\n        }\r\n    }\r\n\r\n    editPriority = (event, index) => {\r\n        const { selectedSort } = this.state\r\n        let tasks = this.clone(this.state.tasks)\r\n        const task = tasks[index]\r\n        const selectedPriority = event.target.value\r\n        task.priority = this.convertPriority(selectedPriority)\r\n        task.editPanelHidden = true\r\n        tasks = this.sortItemsBy(tasks, selectedSort)\r\n        this.setState({ tasks: tasks })\r\n    }\r\n\r\n    editDate = (event, index) => {\r\n        const { selectedSort } = this.state\r\n        let tasks = this.clone(this.state.tasks)\r\n        const newDate = event.target.value\r\n        tasks[index].dateDue = convertDate(newDate, 'timestamp')\r\n        tasks[index].editPanelHidden = true\r\n        tasks = this.sortItemsBy(tasks, selectedSort)\r\n        this.setState({ tasks: tasks })\r\n    }\r\n\r\n    inputChange = (event) => {\r\n        const currentText = event.target.value\r\n        if (currentText === '') {\r\n            this.setState({ buttonDisabled: true })\r\n        } else {\r\n            this.setState({ buttonDisabled: false })\r\n        }\r\n    }\r\n\r\n    toggleItems = (tasks, type, tag) => {\r\n        let tasksCopy = this.clone(tasks)\r\n        if (type === 'selected tag') {\r\n            tasksCopy.forEach(task => (task.tag !== tag || task.tag === 'None') && (task.hidden = true))\r\n        } else if (type === 'tags only') {\r\n            tasksCopy.forEach(task => (task.tag === 'None') && (task.hidden = true))\r\n        } else if (type === 'show all') {\r\n            tasksCopy.forEach(task => (task.hidden === true) && (task.hidden = false))\r\n        }\r\n        return tasksCopy\r\n    }\r\n\r\n    sortItemsBy = (tasks, selectedSort, moveFrom) => {\r\n        const showAll = this.toggleItems(tasks, 'show all')\r\n        if (selectedSort === 'Manual') {\r\n            const moveTo = moveFrom - 1\r\n            tasks = this.props.arrayMove(tasks, moveFrom, moveTo)\r\n            if (this.state.settings.hideInactive) {\r\n                tasks = this.sortItemsBy(tasks, 'active')\r\n            }\r\n            return tasks\r\n        }\r\n        if (selectedSort === 'None') {\r\n            return showAll\r\n        } else if (selectedSort === 'Priority') {\r\n            tasks = showAll\r\n            return tasks.sort(\r\n                firstBy('active', -1)\r\n                    .thenBy('priority')\r\n                    .thenBy('dateDue')\r\n                    .thenBy('text')\r\n            )\r\n        } else if (selectedSort === 'Date Due') {\r\n            tasks = showAll\r\n            return tasks.sort(\r\n                firstBy('active', -1)\r\n                    .thenBy('dateDue')\r\n                    .thenBy('priority')\r\n                    .thenBy('text')\r\n            )\r\n        } else if (selectedSort === 'A-Z') {\r\n            tasks = showAll\r\n            return tasks.sort(\r\n                firstBy('active', -1)\r\n                    .thenBy('text')\r\n            )\r\n        } else if (selectedSort === 'Tags') {\r\n            tasks = showAll\r\n            tasks = this.toggleItems(tasks, 'tags only')\r\n            return tasks.sort(\r\n                firstBy('tag')\r\n                    .thenBy('priority')\r\n                    .thenBy('dateDue')\r\n                    .thenBy('text')\r\n            )\r\n        } else if (selectedSort === 'Selected Tag') {\r\n            tasks = this.toggleItems(tasks, 'selected tag', this.state.selectedTag)\r\n            return tasks.sort(\r\n                firstBy('tag')\r\n                    .thenBy('priority')\r\n                    .thenBy('dateDue')\r\n                    .thenBy('text')\r\n            )\r\n        } else if (selectedSort === 'active') {\r\n            return tasks.sort(firstBy('active', -1))\r\n        }\r\n    }\r\n\r\n    sortItems = (index, manual) => {\r\n        let tasks = this.clone(this.state.tasks)\r\n        const selectedSort = this.selectSortBy.current.value\r\n        if (manual) {\r\n            if (selectedSort === 'None') {\r\n                console.log(\"correct\")\r\n                tasks = this.sortItemsBy(tasks, 'Manual', index)\r\n                this.setState({ tasks: tasks })\r\n            } else {\r\n                tasks = this.sortItemsBy(tasks, 'Manual', index)\r\n                this.setState({\r\n                    tasks: tasks,\r\n                    selectedSort: 'None'\r\n                })\r\n            }\r\n        } else {\r\n            if (selectedSort === 'None') {\r\n                tasks = this.sortItemsBy(tasks, selectedSort)\r\n                this.setState({\r\n                    tasks: tasks,\r\n                    selectedSort: selectedSort\r\n                })\r\n            } else {\r\n                tasks = this.sortItemsBy(tasks, selectedSort)\r\n                this.setState({\r\n                    tasks: tasks,\r\n                    selectedSort: selectedSort\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleEditItem = (index) => {\r\n        let tasks = this.clone(this.state.tasks)\r\n        const targetTask = tasks[index]\r\n        const targetPanelState = targetTask.editPanelHidden\r\n        tasks.forEach((task) => {\r\n            if (task.editPanelHidden === false && task !== targetTask) {\r\n                task.editPanelHidden = true\r\n                // If no checklist, hide checklist\r\n                if (task.checklist.length < 1) task.checklistHidden = true\r\n            }\r\n        })\r\n        tasks[index].editPanelHidden = !targetPanelState\r\n        // If no checklist, hide checklist\r\n        if (tasks[index].checklist.length < 1) tasks[index].checklistHidden = true\r\n        this.setState({\r\n            tasks: tasks,\r\n            editTaskText: targetTask.text\r\n        })\r\n    }\r\n\r\n    changeDate = (event) => {\r\n        const updateDate = event.target.value\r\n        this.setState({ selectedDate: updateDate })\r\n    }\r\n\r\n    changeColor = (event, selectedColor) => {\r\n        let settings = this.clone(this.state.settings)\r\n        settings.style[selectedColor] = event.target.value\r\n        this.setState({\r\n            settings: settings,\r\n            selectedStyle: 'None'\r\n        })\r\n    }\r\n\r\n    changeStyle = (event) => {\r\n        let settings = this.clone(this.state.settings)\r\n        const selectedStyle = event.target.value\r\n        const style = settings.style\r\n        if (style === 'None') {\r\n            this.setState({ selectedStyle: selectedStyle })\r\n        } else {\r\n            style.colorLow = this.styles[selectedStyle][0]\r\n            style.colorMedium = this.styles[selectedStyle][1]\r\n            style.colorHigh = this.styles[selectedStyle][2]\r\n            style.backgroundColor = this.styles[selectedStyle][3]\r\n            this.setState({\r\n                settings: settings,\r\n                selectedStyle: selectedStyle\r\n            })\r\n        }\r\n    }\r\n\r\n    changeTag = (event) => {\r\n        const { selectedSort } = this.state\r\n        let tasks = this.clone(this.state.tasks)\r\n        const tag = event.target.value\r\n        if (selectedSort === 'Selected Tag') {\r\n            tasks = this.toggleItems(tasks, 'show all')\r\n            tasks = this.toggleItems(tasks, 'selected tag', tag)\r\n            this.setState({\r\n                tasks: tasks,\r\n                selectedTag: tag\r\n            })\r\n        } else {\r\n            this.setState({ selectedTag: tag })\r\n        }\r\n    }\r\n\r\n    addTag = () => {\r\n        let tags = this.clone(this.state.tags)\r\n        const newTag = prompt(\"Enter a new tag\")\r\n        if (newTag === '' || tags.includes(newTag)) {\r\n            alert(\"Invalid tag or duplicate\")\r\n        } else {\r\n            tags = [...tags, newTag]\r\n            this.setState({\r\n                tags: tags,\r\n                selectedTag: newTag\r\n            })\r\n        }\r\n    }\r\n\r\n    removeTag = () => {\r\n        const { selectedTag } = this.state\r\n        let tags = this.clone(this.state.tags)\r\n        tags = tags.filter(tag => tag !== selectedTag || tag === 'None')\r\n        this.setState({\r\n            tags: tags,\r\n            selectedTag: 'None'\r\n        })\r\n    }\r\n\r\n    editTaskTag = (event, index) => {\r\n        const { selectedSort } = this.state\r\n        let tasks = this.clone(this.state.tasks)\r\n        let task = tasks[index]\r\n        task.tag = event.target.value\r\n        task.editPanelHidden = true\r\n        tasks = this.sortItemsBy(tasks, selectedSort)\r\n        this.setState({ tasks: tasks })\r\n    }\r\n\r\n    editText = (event, index) => {\r\n        event.stopPropagation()\r\n        let tasks = this.clone(this.state.tasks)\r\n        tasks[index].text = this.state.editTaskText\r\n        tasks[index].editPanelHidden = true\r\n        this.setState({ tasks: tasks })\r\n    }\r\n\r\n    handleTextChange = (event) => {\r\n        const currentText = event.target.value\r\n        this.setState({ editTaskText: currentText })\r\n    }\r\n\r\n    hideEditPanels = () => {\r\n        let tasks = this.clone(this.state.tasks)\r\n        tasks.forEach(task => (task.editPanelHidden === false) && (task.editPanelHidden = true))\r\n        this.setState({ tasks: tasks })\r\n    }\r\n\r\n    toggleInactiveTasks = () => {\r\n        let tasks = this.clone(this.state.tasks)\r\n        let settings = this.clone(this.state.settings)\r\n        settings.hideInactive = !settings.hideInactive\r\n        tasks = this.sortItemsBy(tasks, 'active')\r\n        this.setState({\r\n            tasks: tasks,\r\n            settings: settings\r\n        })\r\n    }\r\n\r\n    toggleAddTasksToTop = () => {\r\n        let settings = this.clone(this.state.settings)\r\n        console.log(settings)\r\n        settings.addTasksToTop = !settings.addTasksToTop\r\n        console.log(\"after\", settings)\r\n        this.setState({ settings: settings })\r\n    }\r\n\r\n    toggleModal = (modalType) => {\r\n        let modals = this.clone(this.state.modals)\r\n        modals[modalType] = !modals[modalType]\r\n        this.setState({ modals: modals })\r\n    }\r\n\r\n    deductStars = (stars) => {\r\n        let stats = this.clone(this.state.stats)\r\n        stats.starsUsed += stars\r\n        this.setState({ stats: stats })\r\n    }\r\n\r\n    saveKitty = (kitty) => {\r\n        let inventory = this.clone(this.state.inventory)\r\n        inventory.catGifs = [...inventory.catGifs, kitty]\r\n        this.setState({ inventory: inventory })\r\n    }\r\n\r\n    deleteKitty = (kitty) => {\r\n        let inventory = this.clone(this.state.inventory)\r\n        inventory.catGifs = inventory.catGifs.filter((item, index) => index !== kitty)\r\n        this.setState({ inventory: inventory })\r\n    }\r\n\r\n    showChecklist = (index) => {\r\n        let tasks = this.clone(this.state.tasks)\r\n        tasks[index].checklistHidden = false\r\n        this.setState({ tasks: tasks })\r\n    }\r\n\r\n    addChecklistTask = (task, index) => {\r\n        let tasks = this.clone(this.state.tasks)\r\n        tasks[index].checklist.push(task)\r\n        this.setState({ tasks: tasks })\r\n    }\r\n\r\n    sortChecklistTask = (taskIndex, moveFrom) => {\r\n        let tasks = this.clone(this.state.tasks)\r\n        const moveTo = moveFrom - 1\r\n        const checklist = tasks[taskIndex].checklist\r\n        tasks[taskIndex].checklist = this.props.arrayMove(checklist, moveFrom, moveTo)\r\n        this.setState({ tasks: tasks })\r\n    }\r\n\r\n    encouragingMessage = () => {\r\n        setTimeout(() => {\r\n            this.notify(randomMessage(), 'custom', 2000, this.notifyStyle)\r\n        }, 500)\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            tasks,\r\n            inventory,\r\n            settings,\r\n            stats,\r\n            tags,\r\n            buttonDisabled,\r\n            selectedPriority,\r\n            selectedDate,\r\n            selectedTag,\r\n            selectedSort,\r\n            selectedStyle,\r\n            modals\r\n        } = this.state\r\n        const {\r\n            convertDate,\r\n            articulateDateDue\r\n        } = this.props\r\n        document.body.style.backgroundColor = settings.style.backgroundColor\r\n        return (\r\n            <Container>\r\n                <Notifications />\r\n                <Row>\r\n                    <Col className='todo' sm='10' md='7' lg='5' xl='5'>\r\n                        <AddTask\r\n                            tasks={tasks}\r\n                            addTask={this.addTask}\r\n                            inputChange={this.inputChange}\r\n                            convertPriority={this.convertPriority}\r\n                            convertDate={convertDate}\r\n                            buttonDisabled={buttonDisabled}\r\n                            selectedPriority={selectedPriority}\r\n                            selectedDate={selectedDate}\r\n                            selectedTag={selectedTag} />\r\n                        <Row className='row-1 no-gutters'>\r\n                            <Col>\r\n                                <div className='calendar'>\r\n                                    <Calendar\r\n                                        value={selectedDate}\r\n                                        handleOnChange={this.changeDate}\r\n                                        convertDate={convertDate} />\r\n                                </div>\r\n                            </Col>\r\n                            <Col>\r\n                                <div className='priority--top'>\r\n                                    <Priority\r\n                                        value={selectedPriority}\r\n                                        handleOnChange={this.changePriority} />\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='row-2 no-gutters'>\r\n                            <Col\r\n                                className='sort padding-right'\r\n                                xs='5'>\r\n                                <Input\r\n                                    type='select'\r\n                                    className='select-sort'\r\n                                    value={selectedSort}\r\n                                    innerRef={this.selectSortBy}\r\n                                    onChange={this.sortItems}\r\n                                >\r\n                                    <option value='None'>Sort: None</option>\r\n                                    <option value='Priority'>Priority</option>\r\n                                    <option value='Date Due'>Date Due</option>\r\n                                    <option value='A-Z'>A-Z</option>\r\n                                    <option value='Tags'>Tags</option>\r\n                                    <option value='Selected Tag'>Selected Tag</option>\r\n                                </Input>\r\n                            </Col>\r\n                            <Col\r\n                                className='manage-tags'\r\n                                xs='7'\r\n                            >\r\n                                <Tags\r\n                                    tags={tags}\r\n                                    selectedTag={selectedTag}\r\n                                    changeTag={this.changeTag}\r\n                                    addTag={this.addTag}\r\n                                    removeTag={this.removeTag}\r\n                                    showButtons\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <List className='list'>\r\n                            <TransitionGroup>\r\n                                {tasks.map((task, index) =>\r\n                                    (task.hidden) ?\r\n                                        null :\r\n                                        (!task.active && settings.hideInactive) ?\r\n                                            null :\r\n                                            <CSSTransition\r\n                                                key={task.id}\r\n                                                timeout={500}\r\n                                                classNames='fade'\r\n                                            >\r\n                                                <Task\r\n                                                    tasks={tasks}\r\n                                                    settings={settings}\r\n                                                    task={task}\r\n                                                    index={index}\r\n                                                    handleTextChange={this.handleTextChange}\r\n                                                    editText={this.editText}\r\n                                                    toggleEditItem={this.toggleEditItem}\r\n                                                    articulateDateDue={articulateDateDue}\r\n                                                    markComplete={this.markComplete}\r\n                                                    sortItems={this.sortItems}\r\n                                                    convertPriority={this.convertPriority}\r\n                                                    editDate={this.editDate}\r\n                                                    convertDate={convertDate}\r\n                                                    editPriority={this.editPriority}\r\n                                                    tags={tags}\r\n                                                    editTaskTag={this.editTaskTag}\r\n                                                    addTag={this.addTag}\r\n                                                    removeTag={this.removeTag}\r\n                                                    showChecklist={this.showChecklist}\r\n                                                    addChecklistTask={this.addChecklistTask}\r\n                                                    deleteChecklistTask={this.deleteChecklistTask}\r\n                                                    hideEditPanels={this.hideEditPanels}\r\n                                                    sortChecklistTask={this.sortChecklistTask}\r\n                                                />\r\n                                            </CSSTransition>\r\n                                )}\r\n                            </TransitionGroup>\r\n                        </List>\r\n                        <Row className='row-3 no-gutters'>\r\n                            <Button\r\n                                className='settings-button'\r\n                                outline\r\n                                color='secondary'\r\n                                onClick={() => this.toggleModal('settingsModal')}\r\n                            >\r\n                                {\"⚙\"}\r\n                            </Button>\r\n                            <Button\r\n                                className='stats-button'\r\n                                outline\r\n                                color='secondary'\r\n                                onClick={() => this.toggleModal('statsModal')}\r\n                            >\r\n                                {\"⭐\"}\r\n                            </Button>\r\n                            <Button\r\n                                className='cat-button'\r\n                                outline\r\n                                color='secondary'\r\n                                onClick={() => this.toggleModal('shopModal')}\r\n                            >\r\n                                {\"🐱\"}\r\n                            </Button>\r\n                        </Row>\r\n                        <Row className='settings no-gutters'>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                <CustomModal\r\n                    isOpen={modals.settingsModal}\r\n                    modalType='settingsModal'\r\n                    header=\"Settings\"\r\n                    toggleModal={this.toggleModal}\r\n                >\r\n                    <Settings\r\n                        settings={settings}\r\n                        selectedStyle={selectedStyle}\r\n                        changeStyle={this.changeStyle}\r\n                        changeColor={this.changeColor}\r\n                        toggleInactiveTasks={this.toggleInactiveTasks}\r\n                        toggleAddTasksToTop={this.toggleAddTasksToTop}\r\n                    />\r\n                </CustomModal>\r\n                <CustomModal\r\n                    className='rainbow-background'\r\n                    isOpen={modals.statsModal}\r\n                    modalType='statsModal'\r\n                    header=\"Stats\"\r\n                    toggleModal={this.toggleModal}\r\n                >\r\n                    <Stats\r\n                        stats={stats}\r\n                    />\r\n                </CustomModal>\r\n                <CustomModal\r\n                    isOpen={modals.shopModal}\r\n                    modalType='shopModal'\r\n                    header=\"Le Catte Gif Shoppe\"\r\n                    toggleModal={this.toggleModal}\r\n                >\r\n                    <Shop\r\n                        stats={stats}\r\n                        inventory={inventory}\r\n                        saveKitty={this.saveKitty}\r\n                        deleteKitty={this.deleteKitty}\r\n                        deductStars={this.deductStars}\r\n                    />\r\n                </CustomModal>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nToDo.defaultProps = {\r\n    convertDate: convertDate,\r\n    getDate: getDate,\r\n    countDays: countDays,\r\n    articulateDateDue: articulateDateDue,\r\n    arrayMove: arrayMove\r\n}\r\n\r\nexport default ToDo","import React, { Component } from 'react';\nimport { convertDate, articulateDateDue, arrayMove } from './functions'\nimport ToDo from './ToDo'\nimport './App.css';\n\nclass App extends Component {\n    render() {\n        const tasks = localStorage.getItem('tasks_3b')\n        const inventory = localStorage.getItem('inventory_3')\n        const settings = localStorage.getItem('settings_2')\n        const stats = localStorage.getItem('stats_10')\n        const tags = localStorage.getItem('tags_2')\n        const saveData = (data, fileName) => localStorage.setItem(fileName, JSON.stringify(data))\n        return (\n            <ToDo\n                tasks={tasks}\n                inventory={inventory}\n                settings={settings}\n                stats={stats}\n                tags={tags}\n                saveData={saveData}\n                convertDate={convertDate}\n                articulateDateDue={articulateDateDue}\n                arrayMove={arrayMove}\n            />\n        )\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}