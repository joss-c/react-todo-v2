{"version":3,"sources":["functions.js","thenBy.min.js","ToDo.js","App.js","serviceWorker.js","index.js"],"names":["convertDate","date","convertTo","ISODate","Date","toISOString","substring","getTime","year","month","day","setUTCFullYear","setUTCMonth","setUTCDate","toLocaleDateString","articulateDateDue","dateDue","today","now","arrayMove","arr","fromIndex","toIndex","arrCopy","slice","element","length","splice","firstBy","identity","v","ignoreCase","toLowerCase","tb","func","opt","x","this","y","f","direction","prop","v1","uf","preprocess","cmp","v2","makeCompareFunction","a","b","thenBy","Calendar","_ref","handleOnChange","value","react_default","createElement","Fragment","reactstrap_es","className","onChange","type","min","max","Priority","_ref2","List","props","children","ListItem","xs","ToDo_Task","data","item","index","handleTextChange","editText","toggleEditItem","ToDo_TaskDetails","react_transition_group","key","id","timeout","classNames","ToDo_ItemButtons","markComplete","sortItems","ToDo_ItemEditBox","ToDo_Calendar","event","editDate","ToDo_Priority","convertPriority","priority","editPriority","Task","_ref3","active","onClick","style","backgroundColor","settings","colorLow","colorMedium","colorHigh","textDecorationLine","editPanelHidden","task","instance","concat","lib_default","stopPropagation","defaultValue","color","size","TaskDetails","_ref4","tag","in","ItemButtons","_ref5","outline","ItemEditBox","_ref6","hidden","Settings","_ref7","settingsHidden","selectedStyle","changeStyle","changeColor","toggleInactiveTasks","_this","label","checked","hideInactive","AddTask","_this2","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","createItem","_this2$props","selectedPriority","addItem","selectedDate","selectedTag","inputElementValue","inputElement","current","itemInstances","listItems","reduce","total","uuid","time","preventDefault","React","createRef","_this$props","inputChange","buttonDisabled","onSubmit","innerRef","placeholder","disabled","Component","ToDo","_this3","clone","object","JSON","parse","stringify","newItem","selectedSort","state","toConsumableArray","sortItemsBy","setState","undo","console","log","deleteItem","filter","changePriority","target","newDate","toggleItems","listItemsCopy","forEach","moveFrom","showAll","moveTo","sort","manual","selectSortBy","targetItem","targetPanelState","editTaskText","changeDate","updateDate","selectedColor","toggleSettings","colors","changeTag","addTag","newTag","prompt","tags","includes","alert","removeTag","currentText","hideEditPanels","saveData","_this4","_this$state","_this$props2","sm","md","lg","xl","ToDo_AddTask","map","ToDo_List","ToDo_ListItem","ToDo_Settings","defaultProps","App","localStorage","getItem","src_ToDo","setItem","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.99774a84.chunk.js","sourcesContent":["const convertDate = (date, convertTo) => {\r\n    const ISODate = new Date(date).toISOString().substring(0, 10)\r\n    if (convertTo === \"ISO\") {\r\n        return ISODate\r\n    } else if (convertTo === \"timestamp\") {\r\n        return new Date(date).getTime()\r\n    } else if (convertTo === \"local\") {\r\n        const year = ISODate.substring(0, 4)\r\n        const month = ISODate.substring(5, 7)\r\n        const day = ISODate.substring(8, 10)\r\n        const date = new Date()\r\n        date.setUTCFullYear(year)\r\n        date.setUTCMonth(month - 1)\r\n        date.setUTCDate(day)\r\n        return date.toLocaleDateString(\"en-GB\")\r\n    }\r\n}\r\n\r\nconst articulateDateDue = (dateDue) => {\r\n    let today = convertDate(Date.now(), \"ISO\")\r\n    today = convertDate(today, \"timestamp\")\r\n    if (dateDue - today < 0) {\r\n        return \"Overdue\"\r\n    }\r\n    if (dateDue - today === 0) {\r\n        return \"Today\"\r\n    } else if (dateDue - today === 86400000) {\r\n        return \"Tomorrow\"\r\n    } else {\r\n        return convertDate(dateDue, \"local\")\r\n    }\r\n}\r\n\r\nconst arrayMove = (arr, fromIndex, toIndex) => {\r\n    const arrCopy = arr.slice(0)\r\n    const element = arr[fromIndex]\r\n    if (fromIndex === 0) {\r\n        toIndex = arr.length\r\n    }\r\n    arrCopy.splice(fromIndex, 1)\r\n    arrCopy.splice(toIndex, 0, element)\r\n    return arrCopy\r\n}\r\n\r\nexport { convertDate, articulateDateDue, arrayMove }","/***\r\n   Copyright 2013 Teun Duynstee\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n     http://www.apache.org/licenses/LICENSE-2.0\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\nvar firstBy = (function() {\r\n\r\n    function identity(v){return v;}\r\n\r\n    function ignoreCase(v){return typeof(v)===\"string\" ? v.toLowerCase() : v;}\r\n\r\n    function makeCompareFunction(f, opt){\r\n        opt = typeof(opt)===\"number\" ? {direction:opt} : opt||{};\r\n        if(typeof(f)!=\"function\"){\r\n            var prop = f;\r\n            // make unary function\r\n            f = function(v1){return !!v1[prop] ? v1[prop] : \"\";}\r\n        }\r\n        if(f.length === 1) {\r\n            // f is a unary function mapping a single item to its sort score\r\n            var uf = f;\r\n            var preprocess = opt.ignoreCase?ignoreCase:identity;\r\n            var cmp = opt.cmp || function(v1,v2) {return v1 < v2 ? -1 : v1 > v2 ? 1 : 0;}\r\n            f = function(v1,v2) {return cmp(preprocess(uf(v1)), preprocess(uf(v2)));}\r\n        }\r\n        if(opt.direction === -1) return function(v1,v2){return -f(v1,v2)};\r\n        return f;\r\n    }\r\n\r\n    /* adds a secondary compare function to the target function (`this` context)\r\n       which is applied in case the first one returns 0 (equal)\r\n       returns a new compare function, which has a `thenBy` method as well */\r\n    function tb(func, opt) {\r\n        /* should get value false for the first call. This can be done by calling the \r\n        exported function, or the firstBy property on it (for es6 module compatibility)\r\n        */\r\n        var x = (typeof(this) == \"function\" && !this.firstBy) ? this : false;\r\n        var y = makeCompareFunction(func, opt);\r\n        var f = x ? function(a, b) {\r\n                        return x(a,b) || y(a,b);\r\n                    }\r\n                  : y;\r\n        f.thenBy = tb;\r\n        return f;\r\n    }\r\n    tb.firstBy = tb;\r\n    return tb;\r\n})();\r\n\r\nexport { firstBy }","import React, { Component } from 'react'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport { Container, Row, Col, Input, CustomInput, Button, Form, FormGroup } from 'reactstrap'\r\nimport TextareaAutosize from 'react-autosize-textarea'\r\nimport uuid from 'uuid'\r\nimport { convertDate, articulateDateDue, arrayMove } from './functions'\r\nimport { firstBy } from './thenBy.min.js'\r\n\r\nconst Calendar = ({ handleOnChange, value, convertDate }) =>\r\n    <React.Fragment>\r\n        <Input\r\n            className=\"calendar-element\"\r\n            onChange={handleOnChange}\r\n            type=\"date\"\r\n            value={value}\r\n            min={convertDate(Date.now(), \"ISO\")}\r\n            max=\"2019-12-31\"\r\n        />\r\n    </React.Fragment>\r\n\r\nconst Priority = ({ handleOnChange, value }) =>\r\n    <React.Fragment>\r\n        <Input \r\n            type=\"select\" \r\n            className=\"priority-element\" \r\n            value={value} \r\n            onChange={handleOnChange}\r\n        >\r\n            <option value=\"Low\">Priority: Low</option>\r\n            <option value=\"Medium\">Medium</option>\r\n            <option value=\"High\">High</option>\r\n        </Input>\r\n    </React.Fragment>\r\n\r\nconst List = (props) =>\r\n    <div className=\"list\">\r\n        {props.children}\r\n    </div>\r\n\r\nconst ListItem = (props) =>\r\n    <React.Fragment>\r\n        <Row className=\"no-gutters\">\r\n            <Col xs=\"9\">\r\n                <Task\r\n                    data={props.data}\r\n                    item={props.item}\r\n                    index={props.index}\r\n                    handleTextChange={props.handleTextChange}\r\n                    editText={props.editText}\r\n                    toggleEditItem={props.toggleEditItem}\r\n                >\r\n                    <TaskDetails\r\n                        item={props.item}\r\n                        articulateDateDue={props.articulateDateDue} \r\n                    />\r\n                </Task>\r\n            </Col>\r\n            <Col xs=\"3\">\r\n                <TransitionGroup>\r\n                    <CSSTransition\r\n                        key={props.item.id}\r\n                        timeout={500}\r\n                        classNames=\"fade\">\r\n                        <ItemButtons\r\n                            item={props.item}\r\n                            index={props.index}\r\n                            markComplete={props.markComplete}\r\n                            sortItems={props.sortItems}\r\n                        />\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n            </Col>\r\n        </Row>\r\n        <ItemEditBox\r\n            item={props.item}\r\n            index={props.index}\r\n            markComplete={props.markComplete}>\r\n            <Row>\r\n                <Col>\r\n                    <Calendar\r\n                        value={props.convertDate(props.item.dateDue, \"ISO\")}\r\n                        handleOnChange={(event) => props.editDate(event, props.index)}\r\n                        convertDate={props.convertDate}\r\n                    />\r\n                </Col>\r\n                <Col>\r\n                    <Priority\r\n                        value={props.convertPriority(props.item.priority)}\r\n                        handleOnChange={(event) => props.editPriority(event, props.index)}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </ItemEditBox>\r\n    </React.Fragment>\r\n\r\nconst Task = ({ data, item, index, toggleEditItem, handleTextChange, editText, children }) =>\r\n    <div\r\n        className={(item.active) ? \"task\" : \"task task-complete animate-background\"}\r\n        onClick={() => toggleEditItem(index)}\r\n        style={{\r\n            backgroundColor:\r\n                (!item.active) ?\r\n                    \"#e5e5e5\" :\r\n                    (item.priority === 3) ?\r\n                        data.settings.style.colorLow :\r\n                        (item.priority === 2) ?\r\n                            data.settings.style.colorMedium :\r\n                            data.settings.style.colorHigh\r\n        }}>\r\n        <span\r\n            style={{\r\n                textDecorationLine:\r\n                    (item.active) ?\r\n                        \"none\" :\r\n                        \"line-through\"\r\n            }}>\r\n            {(item.editPanelHidden) ?\r\n                <Row>\r\n                    <Col>\r\n                        {item.task}\r\n                        <span className=\"instance\">\r\n                            {(item.instance > 1) ?\r\n                                ` (${item.instance})` :\r\n                                null}\r\n                        </span>\r\n                    </Col>\r\n                </Row> :\r\n                <span>\r\n                    <Row className=\"edit-text no-gutters\">\r\n                        <Col xs=\"10\">\r\n                            <TextareaAutosize\r\n                                className=\"edit-text-element\"\r\n                                onChange={(event) => handleTextChange(event)}\r\n                                onClick={(event) => event.stopPropagation()}\r\n                                defaultValue={item.task}\r\n                            />\r\n                        </Col>\r\n                        <Col xs=\"2\">\r\n                            <Button\r\n                                className=\"edit-text-button\"\r\n                                color=\"secondary\"\r\n                                size=\"sm\"\r\n                                onClick={(event) => editText(event, index)}\r\n                            >\r\n                                {\"OK\"}\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </span>\r\n            }\r\n        </span>\r\n        {children}\r\n    </div>\r\n\r\nconst TaskDetails = ({ item, articulateDateDue }) =>\r\n    <Row>\r\n        <Col className=\"task-details\">\r\n            <TransitionGroup>\r\n                <div className=\"date-due x-small\">\r\n                    {(item.tag === null) ?\r\n                        null :\r\n                        <span className=\"tag\">{item.tag}</span>}\r\n                    {(item.active) ?\r\n                        `Due: ${articulateDateDue(item.dateDue)}` :\r\n                        <React.Fragment>\r\n                            <span className=\"x-small\">\r\n                                {\"Complete \"}\r\n                            </span>\r\n                            <CSSTransition\r\n                                in={!item.active}\r\n                                timeout={1000}\r\n                                classNames=\"star\"\r\n                                //unmountOnExit\r\n                            >\r\n                                <span className=\"star x-small\" >\r\n                                    {\"★\"}\r\n                                </span>\r\n                            </CSSTransition>\r\n                            <CSSTransition\r\n                                in={!item.active}\r\n                                timeout={1000}\r\n                                classNames=\"plus-one\"\r\n                                //unmountOnExit\r\n                            >\r\n                                <span className=\"plus-one x-small\">\r\n                                    {\" +1\"}\r\n                                </span>\r\n                            </CSSTransition>\r\n                        </React.Fragment>}\r\n                </div>\r\n            </TransitionGroup>\r\n        </Col>\r\n    </Row>\r\n\r\n\r\nconst ItemButtons = ({ item, index, markComplete, sortItems }) =>\r\n    <div className=\"item-buttons\">\r\n        <Button\r\n            className=\"sort-button\"\r\n            size=\"sm\"\r\n            outline\r\n            color=\"secondary\"\r\n            onClick={() => sortItems(index, true)}>\r\n            ↑\r\n        </Button>\r\n        <Button\r\n            className=\"delete-item-button\"\r\n            size=\"sm\"\r\n            outline\r\n            color={(item.active) ? \"success\" : \"danger\"}\r\n            onClick={() => markComplete(index)}>\r\n            {(item.active) ? \"✓\" : \"✕\"}\r\n        </Button>\r\n    </div>\r\n\r\nconst ItemEditBox = ({ item, index, markComplete, children }) =>\r\n    <div className=\"edit-task\" hidden={item.editPanelHidden}>\r\n        <span hidden={!item.active}>\r\n            {children}\r\n        </span>\r\n        <div className=\"undo\">\r\n            <Button\r\n                hidden={item.active}\r\n                className=\"undo-button\"\r\n                outline\r\n                color=\"secondary\"\r\n                onClick={() => markComplete(index, true)}>\r\n                Undo \"Mark Complete\"\r\n            </Button>\r\n        </div>\r\n    </div>\r\n\r\nconst Settings = ({ data, settingsHidden, selectedStyle, changeStyle, changeColor, toggleInactiveTasks }) =>\r\n    <React.Fragment>\r\n        <fieldset hidden={settingsHidden}>\r\n            <div>\r\n                <legend>Choose your colours</legend>\r\n                <div>\r\n                    <Input\r\n                        className=\"select-style\"\r\n                        type=\"select\"\r\n                        value={selectedStyle}\r\n                        onChange={changeStyle}>\r\n                        <option value=\"None\">None</option>\r\n                        <option value=\"Default\">Default</option>\r\n                        <option value=\"Marie\">Marie</option>\r\n                        <option value=\"Halloween\">Halloween</option>\r\n                    </Input>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        className=\"change-color\"\r\n                        type=\"color\"\r\n                        value={data.settings.style.colorHigh}\r\n                        onChange={(event) => changeColor(event, \"colorHigh\")}>\r\n                    </input>\r\n                    <label>High Priority</label>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        className=\"change-color\"\r\n                        type=\"color\"\r\n                        value={data.settings.style.colorMedium}\r\n                        onChange={(event) => changeColor(event, \"colorMedium\")}>\r\n                    </input>\r\n                    <label>Medium Priority</label>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        className=\"change-color\"\r\n                        type=\"color\"\r\n                        value={data.settings.style.colorLow}\r\n                        onChange={(event) => this.changeColor(event, \"colorLow\")}>\r\n                    </input>\r\n                    <label>Low Priority</label>\r\n                </div>\r\n            </div>\r\n            <React.Fragment>\r\n                <div>-----------</div>\r\n                <Row>\r\n                    <Col>\r\n                        <CustomInput\r\n                            type=\"checkbox\"\r\n                            id=\"checkbox\"\r\n                            label=\"Show completed tasks\"\r\n                            checked={!data.settings.hideInactive}\r\n                            onChange={toggleInactiveTasks} />\r\n                    </Col>\r\n                </Row>\r\n                <div>-----------</div>\r\n            </React.Fragment>\r\n        </fieldset>\r\n    </React.Fragment>\r\n\r\nclass AddTask extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.inputElement = React.createRef()\r\n    }\r\n    createItem = (event) => {\r\n        const { data, selectedPriority, addItem, convertPriority, convertDate, selectedDate, selectedTag } = this.props\r\n        const inputElementValue = this.inputElement.current.value\r\n        const itemInstances = data.listItems.reduce(function (total, item) {\r\n            return total + (inputElementValue === item.task ? 1 : 0)\r\n        }, 1)\r\n        const newItem = {\r\n            active: true,\r\n            id: uuid().substring(0, 10),\r\n            hidden: false,\r\n            task: inputElementValue,\r\n            priority: convertPriority(selectedPriority),\r\n            time: Date.now(),\r\n            dateDue: convertDate(selectedDate, \"timestamp\"),\r\n            instance: itemInstances,\r\n            editPanelHidden: true,\r\n            settingsHidden: true,\r\n            tag: (selectedTag === \"None\") ? null : selectedTag,\r\n        }\r\n        addItem(newItem)\r\n        this.inputElement.current.value = \"\"\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        const { inputChange, buttonDisabled } = this.props\r\n        return (\r\n            <Form onSubmit={this.createItem}>\r\n                <FormGroup>\r\n                    <Row className=\"row-0 no-gutters\">\r\n                        <Col className=\"padding-right\" xs=\"9\">\r\n                            <Input\r\n                                type=\"text\"\r\n                                className=\"input--add-task\"\r\n                                onChange={inputChange}\r\n                                innerRef={this.inputElement}\r\n                                placeholder=\"Enter Task\">\r\n                            </Input>\r\n                        </Col>\r\n                        <Col xs=\"3\">\r\n                            <Button\r\n                                className=\"add-button\"\r\n                                outline\r\n                                color=\"primary\"\r\n                                disabled={buttonDisabled}\r\n                                type=\"submit\">\r\n                                Add\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </FormGroup>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nclass ToDo extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: (this.props.data) ? JSON.parse(this.props.data) :\r\n                {\r\n                    listItems:\r\n                        [{\r\n                            active: true,\r\n                            hidden: false,\r\n                            id: uuid().substring(0, 10),\r\n                            task: \"Sample Task ✨\",\r\n                            priority: 3,\r\n                            time: Date.now(),\r\n                            instance: 1,\r\n                            editPanelHidden: true,\r\n                            dateDue: Date.now(),\r\n                            tag: null\r\n                        }],\r\n                    settings:\r\n                    {\r\n                        style: {\r\n                            colorHigh: \"#f5c6cb\",\r\n                            colorMedium: \"#ffeeba\",\r\n                            colorLow: \"#bee5eb\"\r\n                        },\r\n                        hideInactive: false\r\n                    },\r\n                    tags: [\"None\"]\r\n                },\r\n            buttonDisabled: true,\r\n            selectedPriority: \"Low\",\r\n            selectedSort: \"None\",\r\n            selectedDate: this.props.convertDate(Date.now(), \"ISO\"),\r\n            settingsHidden: true,\r\n            selectedStyle: \"None\",\r\n            selectedTag: \"None\",\r\n            editTaskText: \"\",\r\n        }\r\n        this.selectSortBy = React.createRef()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const { data } = this.state\r\n        const { saveData } = this.props\r\n        saveData(data)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.hideEditPanels()\r\n        this.sortItems()\r\n        console.log(this.state.data.listItems)\r\n    }\r\n\r\n    clone = (object) => {\r\n        return JSON.parse(JSON.stringify(object))\r\n    }\r\n\r\n    addItem = (newItem) => {\r\n        const { selectedSort } = this.state\r\n        const data = this.clone(this.state.data)\r\n        data.listItems = [...data.listItems, newItem]\r\n        data.listItems = this.sortItemsBy(data.listItems, selectedSort)\r\n        this.setState({\r\n            data: data,\r\n            buttonDisabled: true\r\n        })\r\n    }\r\n\r\n    markComplete = (index, undo) => {\r\n        const data = this.clone(this.state.data)\r\n        const item = data.listItems[index]\r\n        if (data.listItems.length === 0) {\r\n            console.log(\"List is empty\")\r\n        } else {\r\n            const itemIsActive = item.active\r\n            if (itemIsActive) {\r\n                item.active = false\r\n                this.setState({\r\n                    data: data\r\n                })\r\n            } else if (undo) {\r\n                item.editPanelHidden = true\r\n                item.active = true\r\n                this.setState({\r\n                    data: data\r\n                })\r\n            } else {\r\n                this.deleteItem(index)\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteItem = (key) => {\r\n        const data = this.clone(this.state.data)\r\n        data.listItems = data.listItems.filter((item, index) =>\r\n            index !== key\r\n        )\r\n        this.setState({\r\n            data: data\r\n        })\r\n    }\r\n\r\n    changePriority = (event) => {\r\n        const selectedPriority = event.target.value\r\n        this.setState({ selectedPriority: selectedPriority })\r\n    }\r\n\r\n    convertPriority = (priority) => {\r\n        if (typeof priority === 'string') {\r\n            return (priority === \"Low\") ? 3\r\n                : (priority === \"Medium\") ? 2\r\n                    : 1\r\n        } else {\r\n            return (priority === 3) ? \"Low\"\r\n                : (priority === 2) ? \"Medium\"\r\n                    : \"High\"\r\n        }\r\n    }\r\n\r\n    editPriority = (event, index) => {\r\n        const { selectedSort } = this.state\r\n        const data = this.clone(this.state.data)\r\n        const item = data.listItems[index]\r\n        const selectedPriority = event.target.value\r\n        item.priority = this.convertPriority(selectedPriority)\r\n        item.editPanelHidden = true\r\n        data.listItems = this.sortItemsBy(data.listItems, selectedSort)\r\n        this.setState({\r\n            data: data\r\n        })\r\n    }\r\n\r\n    editDate = (event, index) => {\r\n        const { selectedSort } = this.state\r\n        const data = this.clone(this.state.data)\r\n        const newDate = event.target.value\r\n        data.listItems[index].dateDue = convertDate(newDate, \"timestamp\")\r\n        data.listItems[index].editPanelHidden = true\r\n        data.listItems = this.sortItemsBy(data.listItems, selectedSort)\r\n        this.setState({\r\n            data: data\r\n        })\r\n    }\r\n\r\n    inputChange = (event) => {\r\n        const currentText = event.target.value\r\n        if (currentText === \"\") {\r\n            this.setState({\r\n                buttonDisabled: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                buttonDisabled: false\r\n            })\r\n        }\r\n    }\r\n\r\n    toggleItems = (listItems, type, tag) => {\r\n        const listItemsCopy = this.clone(listItems)\r\n        if (type === \"selected tag\") {\r\n            listItemsCopy.forEach(item => (item.tag !== tag) && (item.hidden = true))\r\n        } else if (type === \"tags only\") {\r\n            listItemsCopy.forEach(item => (item.tag === null) && (item.hidden = true))\r\n        } else if (type === \"show all\") {\r\n            listItemsCopy.forEach(item => (item.hidden === true) && (item.hidden = false))\r\n        }\r\n        return listItemsCopy\r\n    }\r\n\r\n    sortItemsBy = (listItems, selectedSort, moveFrom) => {\r\n        const showAll = this.toggleItems(listItems, \"show all\")\r\n        if (selectedSort === \"Manual\") {\r\n            const moveTo = moveFrom - 1\r\n            return listItems = this.props.arrayMove(listItems, moveFrom, moveTo)\r\n            //return listItems.sort(firstBy(\"active\", -1))\r\n        }\r\n        if (selectedSort === \"None\") {\r\n            return showAll\r\n        } else if (selectedSort === \"Priority\") {\r\n            listItems = showAll\r\n            return listItems.sort(\r\n                firstBy(\"active\", -1)\r\n                    .thenBy(\"priority\")\r\n                    .thenBy(\"dateDue\")\r\n                    .thenBy(\"task\")\r\n            )\r\n        } else if (selectedSort === \"Date Due\") {\r\n            listItems = showAll\r\n            return listItems.sort(\r\n                firstBy(\"active\", -1)\r\n                    .thenBy(\"dateDue\")\r\n                    .thenBy(\"priority\")\r\n                    .thenBy(\"task\")\r\n            )\r\n        } else if (selectedSort === \"A-Z\") {\r\n            listItems = showAll\r\n            return listItems.sort(\r\n                firstBy(\"active\", -1)\r\n                    .thenBy(\"task\")\r\n            )\r\n        } else if (selectedSort === \"Tags\") {\r\n            listItems = showAll\r\n            listItems = this.toggleItems(listItems, \"tags only\")\r\n            return listItems.sort(\r\n                firstBy(\"tag\")\r\n                    .thenBy(\"priority\")\r\n                    .thenBy(\"dateDue\")\r\n                    .thenBy(\"task\")\r\n            )\r\n        } else if (selectedSort === \"Selected Tag\") {\r\n            listItems = this.toggleItems(listItems, \"selected tag\", this.state.selectedTag)\r\n            return listItems.sort(\r\n                firstBy(\"tag\")\r\n                    .thenBy(\"priority\")\r\n                    .thenBy(\"dateDue\")\r\n                    .thenBy(\"task\")\r\n            )\r\n        } else if (selectedSort === \"toggle inactive\") {\r\n            return listItems.sort(firstBy(\"active\", -1))\r\n        }\r\n    }\r\n\r\n    sortItems = (index, manual) => {\r\n        const data = this.clone(this.state.data)\r\n        const selectedSort = this.selectSortBy.current.value\r\n        if (manual) {\r\n            if (selectedSort === \"None\") {\r\n                data.listItems = this.sortItemsBy(data.listItems, \"Manual\", index)\r\n                this.setState({\r\n                    data: data\r\n                })\r\n            } else {\r\n                data.listItems = this.sortItemsBy(data.listItems, \"Manual\", index)\r\n                this.setState({\r\n                    data: data,\r\n                    selectedSort: \"None\"\r\n                })\r\n            }\r\n        } else {\r\n            if (selectedSort === \"None\") {\r\n                data.listItems = this.sortItemsBy(data.listItems, selectedSort)\r\n                this.setState({\r\n                    data: data,\r\n                    selectedSort: selectedSort\r\n                })\r\n            } else {\r\n                data.listItems = this.sortItemsBy(data.listItems, selectedSort)\r\n                this.setState({\r\n                    data: data,\r\n                    selectedSort: selectedSort\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleEditItem = (index) => {\r\n        const data = this.clone(this.state.data)\r\n        const targetItem = data.listItems[index]\r\n        const targetPanelState = targetItem.editPanelHidden\r\n        data.listItems.forEach(function (item, index) {\r\n            if (item.editPanelHidden === false && item !== targetItem) {\r\n                item.editPanelHidden = true\r\n            }\r\n        })\r\n        data.listItems[index].editPanelHidden = !targetPanelState\r\n        this.setState({\r\n            data: data,\r\n            editTaskText: targetItem.task\r\n        })\r\n    }\r\n\r\n    changeDate = (event) => {\r\n        const updateDate = event.target.value\r\n        this.setState({\r\n            selectedDate: updateDate\r\n        })\r\n    }\r\n\r\n    changeColor = (event, selectedColor) => {\r\n        const data = this.clone(this.state.data)\r\n        data.settings.style[selectedColor] = event.target.value\r\n        this.setState({\r\n            data: data,\r\n            selectedStyle: \"None\"\r\n        })\r\n    }\r\n\r\n    toggleSettings = () => {\r\n        this.setState(state => ({\r\n            settingsHidden: !state.settingsHidden\r\n        }))\r\n    }\r\n\r\n    changeStyle = (event) => {\r\n        const data = this.clone(this.state.data)\r\n        const style = event.target.value\r\n        const colors = data.settings.style\r\n        if (style === \"None\") {\r\n            this.setState({\r\n                selectedStyle: style\r\n            })\r\n        } else if (style === \"Default\") {\r\n            colors.colorHigh = \"#f5c6cb\"\r\n            colors.colorMedium = \"#ffeeba\"\r\n            colors.colorLow = \"#bee5eb\"\r\n            this.setState({\r\n                data: data,\r\n                selectedStyle: style\r\n            })\r\n        } else if (style === \"Marie\") {\r\n            colors.colorHigh = \"#f46ed0\"\r\n            colors.colorMedium = \"#f2b5e2\"\r\n            colors.colorLow = \"#fce8f7\"\r\n            this.setState({\r\n                data: data,\r\n                selectedStyle: style\r\n            })\r\n        } else if (style === \"Halloween\") {\r\n            colors.colorHigh = \"#e76427\"\r\n            colors.colorMedium = \"#ffa100\"\r\n            colors.colorLow = \"#feeeb8\"\r\n            this.setState({\r\n                data: data,\r\n                selectedStyle: style\r\n            })\r\n        }\r\n    }\r\n\r\n    changeTag = (event) => {\r\n        const { selectedSort } = this.state\r\n        const data = this.clone(this.state.data)\r\n        const tag = event.target.value\r\n        if (selectedSort === \"Selected Tag\") {\r\n            this.toggleItems(data.listItems, \"show all\")\r\n            this.toggleItems(data.listItems, \"selected tag\", tag)\r\n            this.setState({\r\n                data: data,\r\n                selectedTag: tag\r\n            })\r\n        } else {\r\n            this.setState({\r\n                selectedTag: tag\r\n            })\r\n        }\r\n    }\r\n\r\n    addTag = () => {\r\n        const data = this.clone(this.state.data)\r\n        const newTag = prompt(\"Enter a new tag\")\r\n        if (newTag === \"\" || data.tags.includes(newTag)) {\r\n            alert(\"Invalid tag or duplicate\")\r\n        } else {\r\n            data.tags = [...data.tags, newTag]\r\n            this.setState({\r\n                data: data,\r\n                selectedTag: newTag\r\n            })\r\n        }\r\n    }\r\n\r\n    removeTag = () => {\r\n        const { selectedTag } = this.state\r\n        const data = this.clone(this.state.data)\r\n        data.tags = data.tags.filter(tag => tag !== selectedTag || tag === \"None\")\r\n        this.setState({\r\n            data: data,\r\n            selectedTag: \"None\"\r\n        })\r\n    }\r\n\r\n    editText = (event, index) => {\r\n        event.stopPropagation()\r\n        const { editTaskText } = this.state\r\n        const data = this.clone(this.state.data)\r\n        data.listItems[index].task = editTaskText\r\n        data.listItems[index].editPanelHidden = true\r\n        this.setState({\r\n            data: data\r\n        })\r\n    }\r\n\r\n    handleTextChange = (event) => {\r\n        const currentText = event.target.value\r\n        this.setState({\r\n            editTaskText: currentText\r\n        })\r\n    }\r\n\r\n    hideEditPanels = () => {\r\n        const { data } = this.state\r\n        data.listItems.forEach(item => (item.editPanelHidden === false) && (item.editPanelHidden = true))\r\n    }\r\n\r\n    toggleInactiveTasks = () => {\r\n        const data = this.clone(this.state.data)\r\n        data.settings.hideInactive = !data.settings.hideInactive\r\n        data.listItems = this.sortItemsBy(data.listItems, \"toggle inactive\")\r\n        this.setState({\r\n            data: data\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { data, buttonDisabled, selectedPriority, selectedDate, selectedTag, selectedSort, settingsHidden, selectedStyle } = this.state\r\n        const { convertDate, articulateDateDue } = this.props\r\n        return (\r\n            <Container style={{ backgroundColor: (selectedStyle === \"Halloween\") ? \"black\" : \"white\" }}>\r\n                <Row>\r\n                    <Col className=\"todo\" sm=\"10\" md=\"7\" lg=\"5\" xl=\"5\">\r\n                        <AddTask\r\n                            data={data}\r\n                            addItem={this.addItem}\r\n                            inputChange={this.inputChange}\r\n                            convertPriority={this.convertPriority}\r\n                            convertDate={convertDate}\r\n                            buttonDisabled={buttonDisabled}\r\n                            selectedPriority={selectedPriority}\r\n                            selectedDate={selectedDate}\r\n                            selectedTag={selectedTag} />\r\n                        <Row className=\"row-1 no-gutters\">\r\n                            <Col>\r\n                                <div className=\"calendar\">\r\n                                    <Calendar\r\n                                        value={selectedDate}\r\n                                        handleOnChange={this.changeDate}\r\n                                        convertDate={convertDate} />\r\n                                </div>\r\n                            </Col>\r\n                            <Col>\r\n                                <div className=\"priority--top\">\r\n                                    <Priority\r\n                                        value={selectedPriority}\r\n                                        handleOnChange={this.changePriority} />\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"row-2 no-gutters\">\r\n                            <Col\r\n                                className=\"sort padding-right\"\r\n                                xs=\"5\">\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    className=\"select-sort\"\r\n                                    value={selectedSort}\r\n                                    innerRef={this.selectSortBy}\r\n                                    onChange={this.sortItems}>\r\n                                    <option value=\"None\">Sort: None</option>\r\n                                    <option value=\"Priority\">Priority</option>\r\n                                    <option value=\"Date Due\">Date Due</option>\r\n                                    <option value=\"A-Z\">A-Z</option>\r\n                                    <option value=\"Tags\">Tags</option>\r\n                                    <option value=\"Selected Tag\">Selected Tag</option>\r\n                                </Input>\r\n                            </Col>\r\n                            <Col\r\n                                className=\"manage-tags\"\r\n                                xs=\"7\">\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    className=\"select-tag\"\r\n                                    value={selectedTag}\r\n                                    onChange={this.changeTag}>\r\n                                    {this.state.data.tags.map((tag, index) =>\r\n                                        <option\r\n                                            key={index}\r\n                                            value={tag}>\r\n                                            {(tag === \"None\") ? \"Tag: None\" : tag}\r\n                                        </option>\r\n                                    )}\r\n                                </Input>\r\n                                <Button\r\n                                    outline\r\n                                    color=\"secondary\"\r\n                                    size=\"sm\"\r\n                                    onClick={this.removeTag}>\r\n                                    -\r\n                                </Button>\r\n                                <Button\r\n                                    outline\r\n                                    color=\"secondary\"\r\n                                    size=\"sm\"\r\n                                    onClick={this.addTag}>\r\n                                    +\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <List className=\"list\">\r\n                            <TransitionGroup>\r\n                                {data.listItems.map((item, index) =>\r\n                                    (item.hidden) ?\r\n                                        null :\r\n                                        (!item.active && data.settings.hideInactive) ?\r\n                                            null :\r\n                                            <CSSTransition\r\n                                                key={item.id}\r\n                                                timeout={500}\r\n                                                classNames=\"fade\">\r\n                                                <ListItem\r\n                                                    data={data}\r\n                                                    item={item}\r\n                                                    index={index}\r\n                                                    handleTextChange={this.handleTextChange}\r\n                                                    editText={this.editText}\r\n                                                    toggleEditItem={this.toggleEditItem}\r\n                                                    articulateDateDue={articulateDateDue}\r\n                                                    markComplete={this.markComplete}\r\n                                                    sortItems={this.sortItems}\r\n                                                    convertPriority={this.convertPriority}\r\n                                                    editDate={this.editDate}\r\n                                                    convertDate={convertDate}\r\n                                                    editPriority={this.editPriority} />\r\n                                            </CSSTransition>\r\n                                )}\r\n                            </TransitionGroup>\r\n                        </List>\r\n                        <Row className=\"row-3 no-gutters\">\r\n                            <Button\r\n                                className=\"settings-button\"\r\n                                outline color=\"secondary\"\r\n                                onClick={this.toggleSettings}>\r\n                                ⚙\r\n                        </Button>\r\n                        </Row>\r\n                        <Row className=\"settings no-gutters\">\r\n                            <Settings\r\n                                data={data}\r\n                                settingsHidden={settingsHidden}\r\n                                selectedStyle={selectedStyle}\r\n                                changeStyle={this.changeStyle}\r\n                                changeColor={this.changeColor}\r\n                                toggleInactiveTasks={this.toggleInactiveTasks} />\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nToDo.defaultProps = {\r\n    convertDate: convertDate,\r\n    articulateDateDue: articulateDateDue,\r\n    arrayMove: arrayMove\r\n}\r\n\r\nexport default ToDo","import React, { Component } from 'react';\nimport { convertDate, articulateDateDue, arrayMove } from './functions'\nimport ToDo from './ToDo'\nimport './App.css';\n\nclass App extends Component {\n    render() {\n        const dataFile = \"data_5\"\n        const data = localStorage.getItem(dataFile)\n        const saveData = (data) => localStorage.setItem(dataFile, JSON.stringify(data))\n        return (\n            <ToDo\n                data={data}\n                saveData={saveData}\n                convertDate={convertDate}\n                articulateDateDue={articulateDateDue}\n                arrayMove={arrayMove}\n            />\n        )\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}