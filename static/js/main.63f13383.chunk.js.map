{"version":3,"sources":["functions.js","thenBy.min.js","ToDo.js","App.js","serviceWorker.js","index.js"],"names":["convertDate","date","convertTo","ISODate","Date","toISOString","substring","getTime","year","month","day","setUTCFullYear","setUTCMonth","setUTCDate","toLocaleDateString","articulateDateDue","dateDue","today","now","arrayMove","arr","fromIndex","toIndex","element","length","splice","firstBy","identity","v","ignoreCase","toLowerCase","tb","func","opt","x","this","y","f","direction","prop","v1","uf","preprocess","cmp","v2","makeCompareFunction","a","b","thenBy","Calendar","_ref","handleOnChange","value","react_default","createElement","Fragment","reactstrap_es","className","onChange","type","min","max","Priority","_ref2","List","props","children","ListItem","ToDo_Task","data","item","index","handleTextChange","editText","toggleEditItem","ToDo_TaskDetails","react_transition_group","key","id","timeout","classNames","ToDo_ItemButtons","markComplete","sortItems","ToDo_ItemEditBox","ToDo_Calendar","event","editDate","ToDo_Priority","convertPriority","priority","editPriority","Task","_ref3","onClick","style","backgroundColor","active","settings","colorLow","colorMedium","colorHigh","textDecorationLine","editPanelHidden","task","lib_default","stopPropagation","defaultValue","outline","color","size","instance","concat","TaskDetails","_ref4","tag","ItemButtons","_ref5","ItemEditBox","_ref6","hidden","AddTask","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","createItem","_this$props","selectedPriority","addItem","selectedDate","selectedTag","inputElementValue","inputElement","current","itemInstances","listItems","reduce","total","uuid","time","settingsHidden","preventDefault","React","createRef","_this$props2","inputChange","buttonDisabled","onSubmit","xs","innerRef","placeholder","disabled","Component","ToDo","_this2","newItem","_this2$state","state","selectedSort","toConsumableArray","sortItemsBy","setState","undo","deleteItem","filter","changePriority","target","newDate","toggleItems","updateList","forEach","moveFrom","showAll","moveTo","sort","manual","selectSortBy","targetItem","targetPanelState","editTaskText","changeDate","updateDate","changeColor","selectedColor","selectedStyle","toggleSettings","changeStyle","changeTag","_this2$state2","addTag","newTag","prompt","tags","includes","alert","removeTag","_this2$state3","_this2$state4","currentText","JSON","parse","saveData","console","log","_this3","_this$state","_this$props3","ToDo_AddTask","map","ToDo_List","ToDo_ListItem","defaultProps","App","localStorage","getItem","src_ToDo","setItem","stringify","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6PAAMA,EAAc,SAACC,EAAMC,GACvB,IAAMC,EAAU,IAAIC,KAAKH,GAAMI,cAAcC,UAAU,EAAG,IAC1D,GAAkB,QAAdJ,EACA,OAAOC,EACJ,GAAkB,cAAdD,EACP,OAAO,IAAIE,KAAKH,GAAMM,UACnB,GAAkB,UAAdL,EAAuB,CAC9B,IAAMM,EAAOL,EAAQG,UAAU,EAAG,GAC5BG,EAAQN,EAAQG,UAAU,EAAG,GAC7BI,EAAMP,EAAQG,UAAU,EAAG,IAC3BL,EAAO,IAAIG,KAIjB,OAHAH,EAAKU,eAAeH,GACpBP,EAAKW,YAAYH,EAAQ,GACzBR,EAAKY,WAAWH,GACTT,EAAKa,mBAAmB,WAIjCC,EAAoB,SAACC,GACvB,IAAIC,EAAQjB,EAAYI,KAAKc,MAAO,OAEpC,OAAIF,GADJC,EAAQjB,EAAYiB,EAAO,cACL,EACX,UAEPD,EAAUC,IAAU,EACb,QACAD,EAAUC,IAAU,MACpB,WAEAjB,EAAYgB,EAAS,UAI9BG,EAAY,SAACC,EAAKC,EAAWC,GAC/B,IAAMC,EAAUH,EAAIC,GAMpB,OALkB,IAAdA,IACAC,EAAUF,EAAII,QAElBJ,EAAIK,OAAOJ,EAAW,GACtBD,EAAIK,OAAOH,EAAS,EAAGC,GAChBH,4DC5BPM,EAAW,WAEX,SAASC,EAASC,GAAG,OAAOA,EAE5B,SAASC,EAAWD,GAAG,MAAmB,kBAALA,EAAgBA,EAAEE,cAAgBF,EAuBvE,SAASG,EAAGC,EAAMC,GAId,IAAIC,EAAqB,mBAATC,OAAwBA,KAAKT,SAAWS,KACpDC,EA1BR,SAA6BC,EAAGJ,GAE5B,GADAA,EAAoB,kBAAPA,EAAkB,CAACK,UAAUL,GAAOA,GAAK,GACxC,mBAAJI,EAAe,CACrB,IAAIE,EAAOF,EAEXA,EAAI,SAASG,GAAI,OAASA,EAAGD,GAAQC,EAAGD,GAAQ,IAEpD,GAAgB,IAAbF,EAAEb,OAAc,CAEf,IAAIiB,EAAKJ,EACLK,EAAaT,EAAIJ,WAAWA,EAAWF,EACvCgB,EAAMV,EAAIU,KAAO,SAASH,EAAGI,GAAK,OAAOJ,EAAKI,GAAM,EAAIJ,EAAKI,EAAK,EAAI,GAC1EP,EAAI,SAASG,EAAGI,GAAK,OAAOD,EAAID,EAAWD,EAAGD,IAAME,EAAWD,EAAGG,MAEtE,OAAsB,IAAnBX,EAAIK,UAAyB,SAASE,EAAGI,GAAI,OAAQP,EAAEG,EAAGI,IACtDP,EAWCQ,CAAoBb,EAAMC,GAC9BI,EAAIH,EAAI,SAASY,EAAGC,GACR,OAAOb,EAAEY,EAAEC,IAAMX,EAAEU,EAAEC,IAEzBX,EAEZ,OADAC,EAAEW,OAASjB,EACJM,EAGX,OADAN,EAAGL,QAAUK,EACNA,EAzCI,GCJTkB,EAAW,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,eAAgBC,EAAnBF,EAAmBE,MAAOpD,EAA1BkD,EAA0BlD,YAA1B,OACbqD,EAAAP,EAAAQ,cAACD,EAAAP,EAAMS,SAAP,KACIF,EAAAP,EAAAQ,cAACE,EAAA,EAAD,CACIC,UAAU,mBACVC,SAAUP,EACVQ,KAAK,OACLP,MAAOA,EACPQ,IAAK5D,EAAYI,KAAKc,MAAO,OAC7B2C,IAAI,iBAIVC,EAAW,SAAAC,GAAA,IAAGZ,EAAHY,EAAGZ,eAAgBC,EAAnBW,EAAmBX,MAAnB,OACbC,EAAAP,EAAAQ,cAACD,EAAAP,EAAMS,SAAP,KACIF,EAAAP,EAAAQ,cAACE,EAAA,EAAD,CAAOG,KAAK,SAASF,UAAU,mBAAmBL,MAAOA,EAAOM,SAAUP,GACtEE,EAAAP,EAAAQ,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAP,EAAAQ,cAAA,UAAQF,MAAM,UAAd,UACAC,EAAAP,EAAAQ,cAAA,UAAQF,MAAM,QAAd,WAINY,EAAO,SAACC,GAAD,OACTZ,EAAAP,EAAAQ,cAAA,OAAKG,UAAU,QACXJ,EAAAP,EAAAQ,cAAA,UACKW,EAAMC,YAIbC,EAAW,SAACF,GAAD,OACbZ,EAAAP,EAAAQ,cAAA,OAAKG,UAAU,aACXJ,EAAAP,EAAAQ,cAACE,EAAA,EAAD,KACIH,EAAAP,EAAAQ,cAACc,EAAD,CACIC,KAAMJ,EAAMI,KACZC,KAAML,EAAMK,KACZC,MAAON,EAAMM,MACbC,iBAAkBP,EAAMO,iBACxBC,SAAUR,EAAMQ,SAChBC,eAAgBT,EAAMS,gBACtBrB,EAAAP,EAAAQ,cAACqB,EAAD,CACIL,KAAML,EAAMK,KACZvD,kBAAmBkD,EAAMlD,qBAEjCsC,EAAAP,EAAAQ,cAACsB,EAAA,gBAAD,KACIvB,EAAAP,EAAAQ,cAACsB,EAAA,cAAD,CACIC,IAAKZ,EAAMK,KAAKQ,GAChBC,QAAS,IACTC,WAAW,QACX3B,EAAAP,EAAAQ,cAAC2B,EAAD,CACIX,KAAML,EAAMK,KACZC,MAAON,EAAMM,MACbW,aAAcjB,EAAMiB,aACpBC,UAAWlB,EAAMkB,eAIjC9B,EAAAP,EAAAQ,cAAC8B,EAAD,CACId,KAAML,EAAMK,KACZC,MAAON,EAAMM,MACbW,aAAcjB,EAAMiB,cACpB7B,EAAAP,EAAAQ,cAACE,EAAA,EAAD,KACIH,EAAAP,EAAAQ,cAACE,EAAA,EAAD,KACIH,EAAAP,EAAAQ,cAAC+B,EAAD,CACIjC,MAAOa,EAAMjE,YAAYiE,EAAMK,KAAKtD,QAAS,OAC7CmC,eAAgB,SAACmC,GAAD,OAAWrB,EAAMsB,SAASD,EAAOrB,EAAMM,QACvDvE,YAAaiE,EAAMjE,eAE3BqD,EAAAP,EAAAQ,cAACE,EAAA,EAAD,KACIH,EAAAP,EAAAQ,cAACkC,EAAD,CACIpC,MAAOa,EAAMwB,gBAAgBxB,EAAMK,KAAKoB,UACxCvC,eAAgB,SAACmC,GAAD,OAAWrB,EAAM0B,aAAaL,EAAOrB,EAAMM,eAO7EqB,EAAO,SAAAC,GAAA,IAAGxB,EAAHwB,EAAGxB,KAAMC,EAATuB,EAASvB,KAAMC,EAAfsB,EAAetB,MAAOG,EAAtBmB,EAAsBnB,eAAgBF,EAAtCqB,EAAsCrB,iBAAkBC,EAAxDoB,EAAwDpB,SAAUP,EAAlE2B,EAAkE3B,SAAlE,OACTb,EAAAP,EAAAQ,cAAA,MACIwC,QAAS,kBAAMpB,EAAeH,IAC9BwB,MAAO,CACHC,gBACM1B,EAAK2B,OAEgB,IAAlB3B,EAAKoB,SACFrB,EAAK6B,SAASH,MAAMI,SACD,IAAlB7B,EAAKoB,SACFrB,EAAK6B,SAASH,MAAMK,YACpB/B,EAAK6B,SAASH,MAAMM,UAL5B,YAOZhD,EAAAP,EAAAQ,cAAA,QAAMG,UAAU,OACZsC,MAAO,CACHO,mBACKhC,EAAK2B,OACF,OACA,iBAEV3B,EAAKiC,gBACHjC,EAAKkC,KACLnD,EAAAP,EAAAQ,cAAA,QAAMG,UAAU,aACZJ,EAAAP,EAAAQ,cAACmD,EAAA3D,EAAD,CACIW,UAAU,oBACVC,SAAU,SAAC4B,GAAD,OAAWd,EAAiBc,IACtCQ,QAAS,SAACR,GAAD,OAAWA,EAAMoB,mBAC1BC,aAAcrC,EAAKkC,OACvBnD,EAAAP,EAAAQ,cAACE,EAAA,EAAD,CACIC,UAAU,mBACVmD,SAAO,EACPC,MAAM,YACNC,KAAK,KACLhB,QAAS,kBAAMrB,EAASF,KAL5B,QAUZlB,EAAAP,EAAAQ,cAAA,QAAMG,UAAU,YACVa,EAAKyC,SAAW,EAAjB,KAAAC,OACQ1C,EAAKyC,SADb,KAEG,MAEP7C,IAGH+C,EAAc,SAAAC,GAAA,IAAG5C,EAAH4C,EAAG5C,KAAMvD,EAATmG,EAASnG,kBAAT,OAChBsC,EAAAP,EAAAQ,cAAA,QAAMG,UAAU,YACG,OAAba,EAAK6C,IACH,KACA9D,EAAAP,EAAAQ,cAAA,QAAMG,UAAU,OAAOa,EAAK6C,KAC9B7C,EAAK2B,OAAN,QAAAe,OACWjG,EAAkBuD,EAAKtD,UAC/B,aAGNoG,EAAc,SAAAC,GAAA,IAAG/C,EAAH+C,EAAG/C,KAAMC,EAAT8C,EAAS9C,MAAOW,EAAhBmC,EAAgBnC,aAAcC,EAA9BkC,EAA8BlC,UAA9B,OAChB9B,EAAAP,EAAAQ,cAAA,OAAKG,UAAU,gBACXJ,EAAAP,EAAAQ,cAAA,OAAKG,UAAU,qBAAqBqC,QAAS,kBAAMZ,EAAaX,KAC1DD,EAAK2B,OAAU,SAAM,UAE3B5C,EAAAP,EAAAQ,cAAA,OAAKG,UAAU,cAAcqC,QAAS,kBAAMX,EAAUZ,GAAO,KAA7D,YAGF+C,EAAc,SAAAC,GAAA,IAAGjD,EAAHiD,EAAGjD,KAAMC,EAATgD,EAAShD,MAAOW,EAAhBqC,EAAgBrC,aAAchB,EAA9BqD,EAA8BrD,SAA9B,OAChBb,EAAAP,EAAAQ,cAAA,MAAIG,UAAU,YAAY+D,OAAQlD,EAAKiC,iBACnClD,EAAAP,EAAAQ,cAAA,QAAMkE,QAASlD,EAAK2B,QACf/B,GAELb,EAAAP,EAAAQ,cAAA,OAAKG,UAAU,QACXJ,EAAAP,EAAAQ,cAAA,UAAQkE,OAAQlD,EAAK2B,OAAQxC,UAAU,cAAcqC,QAAS,kBAAMZ,EAAaX,GAAO,KAAxF,2BAINkD,cACF,SAAAA,EAAYxD,GAAO,IAAAyD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAxF,KAAAsF,IACfC,EAAAC,OAAAE,EAAA,EAAAF,CAAAxF,KAAAwF,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAA5F,KAAM8B,KAGV+D,WAAa,SAAC1C,GAAU,IAAA2C,EACiFP,EAAKzD,MAAlGI,EADY4D,EACZ5D,KAAM6D,EADMD,EACNC,iBAAkBC,EADZF,EACYE,QAAS1C,EADrBwC,EACqBxC,gBAAiBzF,EADtCiI,EACsCjI,YAAaoI,EADnDH,EACmDG,aAAcC,EADjEJ,EACiEI,YAC/EC,EAAoBZ,EAAKa,aAAaC,QAAQpF,MAC9CqF,EAAgBpE,EAAKqE,UAAUC,OAAO,SAAUC,EAAOtE,GACzD,OAAOsE,GAASN,IAAsBhE,EAAKkC,KAAO,EAAI,IACvD,GAcH2B,EAbgB,CACZlC,QAAQ,EACRnB,GAAI+D,MAAOvI,UAAU,EAAG,IACxBkH,QAAQ,EACRhB,KAAM8B,EACN5C,SAAUD,EAAgByC,GAC1BY,KAAM1I,KAAKc,MACXF,QAAShB,EAAYoI,EAAc,aACnCrB,SAAU0B,EACVlC,iBAAiB,EACjBwC,gBAAgB,EAChB5B,IAAsB,SAAhBkB,EAA0B,KAAOA,IAG3CX,EAAKa,aAAaC,QAAQpF,MAAQ,GAClCkC,EAAM0D,kBAvBNtB,EAAKa,aAAeU,IAAMC,YAFXxB,wEA4BV,IAAAyB,EACmChH,KAAK8B,MAArCmF,EADHD,EACGC,YAAaC,EADhBF,EACgBE,eACrB,OACIhG,EAAAP,EAAAQ,cAACE,EAAA,EAAD,CAAM8F,SAAUnH,KAAK6F,YACjB3E,EAAAP,EAAAQ,cAACE,EAAA,EAAD,KACIH,EAAAP,EAAAQ,cAACE,EAAA,EAAD,CAAKC,UAAU,SACXJ,EAAAP,EAAAQ,cAACE,EAAA,EAAD,CAAK+F,GAAG,MACJlG,EAAAP,EAAAQ,cAACE,EAAA,EAAD,CAAOG,KAAK,OAAOF,UAAU,kBAAkBC,SAAU0F,EAAaI,SAAUrH,KAAKoG,aACjFkB,YAAY,gBAGpBpG,EAAAP,EAAAQ,cAACE,EAAA,EAAD,CAAK+F,GAAG,KACJlG,EAAAP,EAAAQ,cAACE,EAAA,EAAD,CAAQC,UAAU,aAAamD,SAAO,EAACC,MAAM,UAAU6C,SAAUL,EAAgB1F,KAAK,UAAtF,kBAzCNgG,aAkDhBC,cACF,SAAAA,EAAY3F,GAAO,IAAA4F,EAAA,OAAAlC,OAAAC,EAAA,EAAAD,CAAAxF,KAAAyH,IACfC,EAAAlC,OAAAE,EAAA,EAAAF,CAAAxF,KAAAwF,OAAAG,EAAA,EAAAH,CAAAiC,GAAA7B,KAAA5F,KAAM8B,KAiDVkE,QAAU,SAAC2B,GAAY,IAAAC,EACYF,EAAKG,MAA5B3F,EADW0F,EACX1F,KAAM4F,EADKF,EACLE,aACd5F,EAAKqE,UAALf,OAAAuC,EAAA,EAAAvC,CAAqBtD,EAAKqE,WAA1B1B,OAAA,CAAqC8C,IACrCzF,EAAKqE,UAAYmB,EAAKM,YAAY9F,EAAKqE,UAAWuB,GAClDJ,EAAKO,SAAS,CACV/F,KAAMA,EACNgF,gBAAgB,KAxDLQ,EA4DnB3E,aAAe,SAACX,EAAO8F,GAAS,IACpBhG,EAASwF,EAAKG,MAAd3F,KACaA,EAAKqE,UAAUnE,GAAO0B,QAEvC5B,EAAKqE,UAAUnE,GAAO0B,QAAS,EAC/B4D,EAAKO,SAAS,CACV/F,KAAMA,IAEVwF,EAAK1E,aACEkF,GACPhG,EAAKqE,UAAUnE,GAAO0B,QAAS,EAC/B4D,EAAKO,SAAS,CACV/F,KAAMA,IAEVwF,EAAK1E,aAEL0E,EAAKS,WAAW/F,IA5ELsF,EAgFnBS,WAAa,SAACzF,GAAQ,IACVR,EAASwF,EAAKG,MAAd3F,KACRA,EAAKqE,UAAYrE,EAAKqE,UAAU6B,OAAO,SAACjG,EAAMC,GAAP,OACnCA,IAAUM,IAEdgF,EAAKO,SAAS,CACV/F,KAAMA,KAtFKwF,EA0FnBW,eAAiB,SAAClF,GACd,IAAM4C,EAAmB5C,EAAMmF,OAAOrH,MACtCyG,EAAKO,SAAS,CAAElC,iBAAkBA,KA5FnB2B,EA+FnBpE,gBAAkB,SAACC,GACf,MAAwB,kBAAbA,EACc,QAAbA,EAAsB,EACV,WAAbA,EAAyB,EACtB,EAEW,IAAbA,EAAkB,MACN,IAAbA,EAAkB,SACf,QAvGCmE,EA2GnBlE,aAAe,SAACL,EAAOf,GAAU,IACvBF,EAASwF,EAAKG,MAAd3F,KACE4F,EAAiBJ,EAAKG,MAAtBC,aACF/B,EAAmB5C,EAAMmF,OAAOrH,MACtCiB,EAAKqE,UAAUnE,GAAOmB,SAAWmE,EAAKpE,gBAAgByC,GACtD7D,EAAKqE,UAAUnE,GAAOgC,iBAAkB,EACxClC,EAAKqE,UAAYmB,EAAKM,YAAY9F,EAAKqE,UAAWuB,GAClDJ,EAAKO,SAAS,CACV/F,KAAMA,KAnHKwF,EAuHnBtE,SAAW,SAACD,EAAOf,GAAU,IACnBF,EAASwF,EAAKG,MAAd3F,KACE4F,EAAiBJ,EAAKG,MAAtBC,aACFS,EAAUpF,EAAMmF,OAAOrH,MAC7BiB,EAAKqE,UAAUnE,GAAOvD,QAAUhB,EAAY0K,EAAS,aACrDrG,EAAKqE,UAAUnE,GAAOgC,iBAAkB,EACxClC,EAAKqE,UAAYmB,EAAKM,YAAY9F,EAAKqE,UAAWuB,GAClDJ,EAAKO,SAAS,CACV/F,KAAMA,KA/HKwF,EAmInBT,YAAc,SAAC9D,GAES,KADAA,EAAMmF,OAAOrH,MAE7ByG,EAAKO,SAAS,CACVf,gBAAgB,IAGpBQ,EAAKO,SAAS,CACVf,gBAAgB,KA3ITQ,EAgJnBc,YAAc,SAACjC,EAAW/E,EAAMwD,GAC5B,IAAMyD,EAAalC,EAQnB,MAPa,iBAAT/E,EACAiH,EAAWC,QAAQ,SAAAvG,GAAI,OAAKA,EAAK6C,MAAQA,IAAS7C,EAAKkD,QAAS,KAChD,cAAT7D,EACPiH,EAAWC,QAAQ,SAAAvG,GAAI,OAAkB,OAAbA,EAAK6C,MAAkB7C,EAAKkD,QAAS,KACjD,aAAT7D,GACPiH,EAAWC,QAAQ,SAAAvG,GAAI,OAAIA,EAAKkD,QAAS,IAEtCoD,GAzJQf,EA4JnBM,YAAc,SAACzB,EAAWuB,EAAca,GACpC,IAAMC,EAAUlB,EAAKc,YAAYjC,EAAW,YAC5C,GAAqB,WAAjBuB,EAA2B,CAC3B,IAAMe,EAASF,EAAW,EAC1B,OAAOjB,EAAK5F,MAAM9C,UAAUuH,EAAWoC,EAAUE,GAErD,MAAqB,SAAjBf,EACAvB,EAAYqC,EAEY,aAAjBd,GACPvB,EAAYqC,GACKE,KACbvJ,EAAQ,UAAW,GACdsB,OAAO,YACPA,OAAO,WACPA,OAAO,SAEQ,aAAjBiH,GACPvB,EAAYqC,GACKE,KACbvJ,EAAQ,UAAW,GACdsB,OAAO,WACPA,OAAO,YACPA,OAAO,SAEQ,QAAjBiH,GACPvB,EAAYqC,GACKE,KACbvJ,EAAQ,UAAW,GACdsB,OAAO,SAEQ,SAAjBiH,GACPvB,EAAYqC,GACZrC,EAAYmB,EAAKc,YAAYjC,EAAW,cACvBuC,KACbvJ,EAAQ,OACHsB,OAAO,YACPA,OAAO,WACPA,OAAO,UAEQ,iBAAjBiH,GACPvB,EAAYmB,EAAKc,YAAYjC,EAAW,eAAgBmB,EAAKG,MAAM3B,cAClD4C,KACbvJ,EAAQ,OACHsB,OAAO,YACPA,OAAO,WACPA,OAAO,cANb,GApMQ6G,EA+MnB1E,UAAY,SAACZ,EAAO2G,GAAW,IACnB7G,EAASwF,EAAKG,MAAd3F,KACF4F,EAAeJ,EAAKsB,aAAa3C,QAAQpF,MAC3C8H,GAA2B,SAAjBjB,IACV5F,EAAKqE,UAAYmB,EAAKM,YAAY9F,EAAKqE,UAAW,SAAUnE,GAC5DsF,EAAKO,SAAS,CACV/F,KAAMA,KAIVA,EAAKqE,UAAYmB,EAAKM,YAAY9F,EAAKqE,UAAWuB,GAClDJ,EAAKO,SAAS,CACV/F,KAAMA,EACN4F,aAAcA,KA5NPJ,EAuOnBnF,eAAiB,SAACH,GAAU,IAClBF,EAASwF,EAAKG,MAAd3F,KACA+G,EAAa/G,EAAKqE,UAAUnE,GAC5B8G,EAAmBD,EAAW7E,gBACpClC,EAAKqE,UAAUmC,QAAQ,SAAUvG,EAAMC,IACN,IAAzBD,EAAKiC,iBAA6BjC,IAAS8G,IAC3C9G,EAAKiC,iBAAkB,KAG/BlC,EAAKqE,UAAUnE,GAAOgC,iBAAmB8E,EACzCxB,EAAKO,SAAS,CACV/F,KAAMA,EACNiH,aAAcF,EAAW5E,QAnPdqD,EAuPnB0B,WAAa,SAACjG,GACV,IAAMkG,EAAalG,EAAMmF,OAAOrH,MAChCyG,EAAKO,SAAS,CACVhC,aAAcoD,KA1PH3B,EA8PnB4B,YAAc,SAACnG,EAAOoG,GAAkB,IAC5BrH,EAASwF,EAAKG,MAAd3F,KACRA,EAAK6B,SAASH,MAAM2F,GAAiBpG,EAAMmF,OAAOrH,MAClDyG,EAAKO,SAAS,CACV/F,KAAMA,EACNsH,cAAe,UAnQJ9B,EAuQnB+B,eAAiB,WACb/B,EAAKO,SAAS,SAAAJ,GAAK,MAAK,CACpBjB,gBAAiBiB,EAAMjB,mBAzQZc,EA6QnBgC,YAAc,SAACvG,GAAU,IACbjB,EAASwF,EAAKG,MAAd3F,KACF0B,EAAQT,EAAMmF,OAAOrH,MACb,SAAV2C,EACA8D,EAAKO,SAAS,CACVuB,cAAe5F,IAEF,YAAVA,GACP1B,EAAK6B,SAASH,MAAMM,UAAY,UAChChC,EAAK6B,SAASH,MAAMK,YAAc,UAClC/B,EAAK6B,SAASH,MAAMI,SAAW,UAC/B0D,EAAKO,SAAS,CACV/F,KAAMA,EACNsH,cAAe5F,KAEF,UAAVA,IACP1B,EAAK6B,SAASH,MAAMM,UAAY,UAChChC,EAAK6B,SAASH,MAAMK,YAAc,UAClC/B,EAAK6B,SAASH,MAAMI,SAAW,UAC/B0D,EAAKO,SAAS,CACV/F,KAAMA,EACNsH,cAAe5F,MAlSR8D,EAuSnBiC,UAAY,SAACxG,GAAU,IAAAyG,EACYlC,EAAKG,MAA5B3F,EADW0H,EACX1H,KAAM4F,EADK8B,EACL9B,aACR9C,EAAM7B,EAAMmF,OAAOrH,MACJ,iBAAjB6G,GACAJ,EAAKc,YAAYtG,EAAKqE,UAAW,YACjCmB,EAAKc,YAAYtG,EAAKqE,UAAW,eAAgBvB,GACjD0C,EAAKO,SAAS,CACV/F,KAAMA,EACNgE,YAAalB,KAGjB0C,EAAKO,SAAS,CACV/B,YAAalB,KAnTN0C,EAwTnBmC,OAAS,WAAM,IACH3H,EAASwF,EAAKG,MAAd3F,KACF4H,EAASC,OAAO,mBACP,KAAXD,GAAiB5H,EAAK8H,KAAKC,SAASH,GACpCI,MAAM,6BAENhI,EAAK8H,KAALxE,OAAAuC,EAAA,EAAAvC,CAAgBtD,EAAK8H,MAArBnF,OAAA,CAA2BiF,IAC3BpC,EAAKO,SAAS,CACV/F,KAAMA,EACNgE,YAAa4D,MAjUNpC,EAsUnByC,UAAY,WAAM,IAAAC,EACgB1C,EAAKG,MAA3B3F,EADMkI,EACNlI,KAAMgE,EADAkE,EACAlE,YACdhE,EAAK8H,KAAO9H,EAAK8H,KAAK5B,OAAO,SAAApD,GAAG,OAAIA,IAAQkB,GAAuB,SAARlB,IAC3D0C,EAAKO,SAAS,CACV/F,KAAMA,EACNgE,YAAa,UA3UFwB,EA+UnBpF,SAAW,SAACF,GAAU,IAAAiI,EACa3C,EAAKG,MAA5B3F,EADUmI,EACVnI,KAAMiH,EADIkB,EACJlB,aACdjH,EAAKqE,UAAUnE,GAAOiC,KAAO8E,EAC7BzB,EAAKO,SAAS,CACV/F,KAAMA,KAnVKwF,EAuVnBrF,iBAAmB,SAACc,GAChB,IAAMmH,EAAcnH,EAAMmF,OAAOrH,MACjCyG,EAAKO,SAAS,CACVkB,aAAcmB,KAxVlB5C,EAAKG,MAAQ,CACT3F,KAAOwF,EAAK5F,MAAMI,KAAQqI,KAAKC,MAAM9C,EAAK5F,MAAMI,MAC5C,CACIqE,UACI,CAAC,CACGzC,QAAQ,EACRO,KAAM,kBACNd,SAAU,EACVoD,KAAM1I,KAAKc,MACX6F,SAAU,EACVR,iBAAiB,EACjBvF,QAASZ,KAAKc,MACdiG,IAAK,OAEbjB,SACA,CACIH,MAAO,CACHM,UAAW,UACXD,YAAa,UACbD,SAAU,YAGlBgG,KAAM,CAAC,SAEf9C,gBAAgB,EAChBnB,iBAAkB,MAClB+B,aAAc,OACd7B,aAAcyB,EAAK5F,MAAMjE,YAAYI,KAAKc,MAAO,OACjD6H,gBAAgB,EAChB4C,cAAe,OACftD,YAAa,OACbiD,aAAc,IAElBzB,EAAKsB,aAAelC,IAAMC,YAnCXW,oFAsCE,IACTxF,EAASlC,KAAK6H,MAAd3F,MAERuI,EADqBzK,KAAK8B,MAAlB2I,UACCvI,GACTwI,QAAQC,IAAIzI,+CAIZlC,KAAKgD,YACL0H,QAAQC,IAAI3K,KAAK6H,MAAM3F,KAAKqE,4CA+SvB,IAAAqE,EAAA5K,KAAA6K,EACsH7K,KAAK6H,MAAxH3F,EADH2I,EACG3I,KAAMgF,EADT2D,EACS3D,eAAgBnB,EADzB8E,EACyB9E,iBAAkBE,EAD3C4E,EAC2C5E,aAAcC,EADzD2E,EACyD3E,YAAa4B,EADtE+C,EACsE/C,aAAclB,EADpFiE,EACoFjE,eAAgB4C,EADpGqB,EACoGrB,cADpGsB,EAEsC9K,KAAK8B,MAAxCjE,EAFHiN,EAEGjN,YAAae,EAFhBkM,EAEgBlM,kBACrB,OACIsC,EAAAP,EAAAQ,cAACE,EAAA,EAAD,KACIH,EAAAP,EAAAQ,cAAA,OAAKG,UAAU,QACXJ,EAAAP,EAAAQ,cAAC4J,EAAD,CACI7I,KAAMA,EACN8D,QAAShG,KAAKgG,QACdiB,YAAajH,KAAKiH,YAClB3D,gBAAiBtD,KAAKsD,gBACtBzF,YAAaA,EACbqJ,eAAgBA,EAChBnB,iBAAkBA,EAClBE,aAAcA,EACdC,YAAaA,IACjBhF,EAAAP,EAAAQ,cAACE,EAAA,EAAD,CAAKC,UAAU,SACXJ,EAAAP,EAAAQ,cAACE,EAAA,EAAD,KACIH,EAAAP,EAAAQ,cAAA,OAAKG,UAAU,YACXJ,EAAAP,EAAAQ,cAAC+B,EAAD,CAAUjC,MAAOgF,EAAcjF,eAAgBhB,KAAKoJ,WAAYvL,YAAaA,MAGrFqD,EAAAP,EAAAQ,cAACE,EAAA,EAAD,KACIH,EAAAP,EAAAQ,cAAA,OAAKG,UAAU,iBACXJ,EAAAP,EAAAQ,cAACkC,EAAD,CAAUpC,MAAO8E,EAAkB/E,eAAgBhB,KAAKqI,oBAIpEnH,EAAAP,EAAAQ,cAACE,EAAA,EAAD,CAAKC,UAAU,SACXJ,EAAAP,EAAAQ,cAACE,EAAA,EAAD,CAAKC,UAAU,OAAO8F,GAAG,QACrBlG,EAAAP,EAAAQ,cAACE,EAAA,EAAD,CAAOG,KAAK,SAASP,MAAO6G,EAAcT,SAAUrH,KAAKgJ,aAAczH,SAAUvB,KAAKgD,WAClF9B,EAAAP,EAAAQ,cAAA,UAAQF,MAAM,QAAd,SACAC,EAAAP,EAAAQ,cAAA,UAAQF,MAAM,YAAd,YACAC,EAAAP,EAAAQ,cAAA,UAAQF,MAAM,YAAd,YACAC,EAAAP,EAAAQ,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAP,EAAAQ,cAAA,UAAQF,MAAM,QAAd,QACAC,EAAAP,EAAAQ,cAAA,UAAQF,MAAM,gBAAd,kBAGRC,EAAAP,EAAAQ,cAACE,EAAA,EAAD,CAAKC,UAAU,aAAa8F,GAAG,QAC3BlG,EAAAP,EAAAQ,cAACE,EAAA,EAAD,CAAOG,KAAK,SAASP,MAAOiF,EAAa3E,SAAUvB,KAAK2J,WACnD3J,KAAK6H,MAAM3F,KAAK8H,KAAKgB,IAAI,SAAChG,EAAK5C,GAAN,OACtBlB,EAAAP,EAAAQ,cAAA,UAAQuB,IAAKN,EAAOnB,MAAO+D,GAAe,SAARA,EAAkB,OAASA,MAGrE9D,EAAAP,EAAAQ,cAACE,EAAA,EAAD,CAAQoD,SAAO,EAACC,MAAM,YAAYf,QAAS3D,KAAKmK,WAAhD,KACAjJ,EAAAP,EAAAQ,cAACE,EAAA,EAAD,CAAQoD,SAAO,EAACC,MAAM,YAAYf,QAAS3D,KAAK6J,QAAhD,MAEJ3I,EAAAP,EAAAQ,cAACE,EAAA,EAAD,CAAKC,UAAU,kBAAkB8F,GAAG,KAChClG,EAAAP,EAAAQ,cAAA,OAAKwC,QAAS3D,KAAKyJ,gBAAnB,YAGRvI,EAAAP,EAAAQ,cAAC8J,EAAD,CAAM3J,UAAU,QACZJ,EAAAP,EAAAQ,cAACsB,EAAA,gBAAD,KACKP,EAAKqE,UAAUyE,IAAI,SAAC7I,EAAMC,GAAP,OACfD,EAAKkD,OAAU,KACZnE,EAAAP,EAAAQ,cAACsB,EAAA,cAAD,CACIC,IAAKP,EAAKQ,GACVC,QAAS,IACTC,WAAW,QACX3B,EAAAP,EAAAQ,cAAC+J,EAAD,CACIhJ,KAAMA,EACNC,KAAMA,EACNC,MAAOA,EACPC,iBAAkBuI,EAAKvI,iBACvBC,SAAUsI,EAAKtI,SACfC,eAAgBqI,EAAKrI,eACrB3D,kBAAmBA,EACnBmE,aAAc6H,EAAK7H,aACnBC,UAAW4H,EAAK5H,UAChBM,gBAAiBsH,EAAKtH,gBACtBF,SAAUwH,EAAKxH,SACfvF,YAAaA,EACb2F,aAAcoH,EAAKpH,oBAK3CtC,EAAAP,EAAAQ,cAAA,OAAKG,UAAU,YACXJ,EAAAP,EAAAQ,cAAA,YAAUkE,OAAQuB,GACd1F,EAAAP,EAAAQ,cAAA,WACID,EAAAP,EAAAQ,cAAA,WACID,EAAAP,EAAAQ,cAAA,UAAQG,UAAU,eAAeL,MAAOuI,EAAejI,SAAUvB,KAAK0J,aAClExI,EAAAP,EAAAQ,cAAA,UAAQF,MAAM,QAAd,QACAC,EAAAP,EAAAQ,cAAA,UAAQF,MAAM,WAAd,WACAC,EAAAP,EAAAQ,cAAA,UAAQF,MAAM,SAAd,WAGRC,EAAAP,EAAAQ,cAAA,qCACAD,EAAAP,EAAAQ,cAAA,WACID,EAAAP,EAAAQ,cAAA,SAAOG,UAAU,eAAeE,KAAK,QAAQP,MAAOiB,EAAK6B,SAASH,MAAMM,UAAW3C,SAAU,SAAC4B,GAAD,OAAWyH,EAAKtB,YAAYnG,EAAO,gBAChIjC,EAAAP,EAAAQ,cAAA,+BAEJD,EAAAP,EAAAQ,cAAA,WACID,EAAAP,EAAAQ,cAAA,SAAOG,UAAU,eAAeE,KAAK,QAAQP,MAAOiB,EAAK6B,SAASH,MAAMK,YAAa1C,SAAU,SAAC4B,GAAD,OAAWyH,EAAKtB,YAAYnG,EAAO,kBAClIjC,EAAAP,EAAAQ,cAAA,iCAEJD,EAAAP,EAAAQ,cAAA,WACID,EAAAP,EAAAQ,cAAA,SAAOG,UAAU,eAAeE,KAAK,QAAQP,MAAOiB,EAAK6B,SAASH,MAAMI,SAAUzC,SAAU,SAAC4B,GAAD,OAAWyH,EAAKtB,YAAYnG,EAAO,eAC/HjC,EAAAP,EAAAQ,cAAA,0CAlcjBqG,aA6cnBC,EAAK0D,aAAe,CAChBtN,YAAaA,EACbe,kBAAmBA,EACnBI,UAAWA,GAGAyI,QC7oBA2D,0LAfP,IACMlJ,EAAOmJ,aAAaC,QADT,UAGjB,OACIpK,EAAAP,EAAAQ,cAACoK,EAAD,CACIrJ,KAAMA,EACNuI,SAJS,SAACvI,GAAD,OAAUmJ,aAAaG,QAFvB,SAEyCjB,KAAKkB,UAAUvJ,KAKjErE,YAAaA,EACbe,kBAAmBA,EACnBI,UAAWA,WAXTwI,cCKEkE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECTNC,IAASC,OAAO9K,EAAAP,EAAAQ,cAAC8K,EAAD,MAASC,SAASC,eAAe,SDkH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.63f13383.chunk.js","sourcesContent":["const convertDate = (date, convertTo) => {\r\n    const ISODate = new Date(date).toISOString().substring(0, 10)\r\n    if (convertTo === \"ISO\") {\r\n        return ISODate\r\n    } else if (convertTo === \"timestamp\") {\r\n        return new Date(date).getTime()\r\n    } else if (convertTo === \"local\") {\r\n        const year = ISODate.substring(0, 4)\r\n        const month = ISODate.substring(5, 7)\r\n        const day = ISODate.substring(8, 10)\r\n        const date = new Date()\r\n        date.setUTCFullYear(year)\r\n        date.setUTCMonth(month - 1)\r\n        date.setUTCDate(day)\r\n        return date.toLocaleDateString(\"en-GB\")\r\n    }\r\n}\r\n\r\nconst articulateDateDue = (dateDue) => {\r\n    let today = convertDate(Date.now(), \"ISO\")\r\n    today = convertDate(today, \"timestamp\")\r\n    if (dateDue - today < 0) {\r\n        return \"Overdue\"\r\n    }\r\n    if (dateDue - today === 0) {\r\n        return \"Today\"\r\n    } else if (dateDue - today === 86400000) {\r\n        return \"Tomorrow\"\r\n    } else {\r\n        return convertDate(dateDue, \"local\")\r\n    }\r\n}\r\n\r\nconst arrayMove = (arr, fromIndex, toIndex) => {\r\n    const element = arr[fromIndex]\r\n    if (fromIndex === 0) {\r\n        toIndex = arr.length\r\n    }\r\n    arr.splice(fromIndex, 1)\r\n    arr.splice(toIndex, 0, element)\r\n    return arr\r\n}\r\n\r\nexport { convertDate, articulateDateDue, arrayMove }","/***\r\n   Copyright 2013 Teun Duynstee\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n     http://www.apache.org/licenses/LICENSE-2.0\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\nvar firstBy = (function() {\r\n\r\n    function identity(v){return v;}\r\n\r\n    function ignoreCase(v){return typeof(v)===\"string\" ? v.toLowerCase() : v;}\r\n\r\n    function makeCompareFunction(f, opt){\r\n        opt = typeof(opt)===\"number\" ? {direction:opt} : opt||{};\r\n        if(typeof(f)!=\"function\"){\r\n            var prop = f;\r\n            // make unary function\r\n            f = function(v1){return !!v1[prop] ? v1[prop] : \"\";}\r\n        }\r\n        if(f.length === 1) {\r\n            // f is a unary function mapping a single item to its sort score\r\n            var uf = f;\r\n            var preprocess = opt.ignoreCase?ignoreCase:identity;\r\n            var cmp = opt.cmp || function(v1,v2) {return v1 < v2 ? -1 : v1 > v2 ? 1 : 0;}\r\n            f = function(v1,v2) {return cmp(preprocess(uf(v1)), preprocess(uf(v2)));}\r\n        }\r\n        if(opt.direction === -1) return function(v1,v2){return -f(v1,v2)};\r\n        return f;\r\n    }\r\n\r\n    /* adds a secondary compare function to the target function (`this` context)\r\n       which is applied in case the first one returns 0 (equal)\r\n       returns a new compare function, which has a `thenBy` method as well */\r\n    function tb(func, opt) {\r\n        /* should get value false for the first call. This can be done by calling the \r\n        exported function, or the firstBy property on it (for es6 module compatibility)\r\n        */\r\n        var x = (typeof(this) == \"function\" && !this.firstBy) ? this : false;\r\n        var y = makeCompareFunction(func, opt);\r\n        var f = x ? function(a, b) {\r\n                        return x(a,b) || y(a,b);\r\n                    }\r\n                  : y;\r\n        f.thenBy = tb;\r\n        return f;\r\n    }\r\n    tb.firstBy = tb;\r\n    return tb;\r\n})();\r\n\r\nexport { firstBy }","import React, { Component } from 'react'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport { Container, Row, Col, Input, Button, Form, FormGroup } from 'reactstrap'\r\nimport TextareaAutosize from 'react-autosize-textarea'\r\nimport uuid from 'uuid'\r\nimport { convertDate, articulateDateDue, arrayMove } from './functions'\r\nimport { firstBy } from './thenBy.min.js'\r\n\r\nconst Calendar = ({ handleOnChange, value, convertDate }) =>\r\n    <React.Fragment>\r\n        <Input\r\n            className=\"calendar-element\"\r\n            onChange={handleOnChange}\r\n            type=\"date\"\r\n            value={value}\r\n            min={convertDate(Date.now(), \"ISO\")}\r\n            max=\"2019-12-31\"\r\n        />\r\n    </React.Fragment>\r\n\r\nconst Priority = ({ handleOnChange, value }) =>\r\n    <React.Fragment>\r\n        <Input type=\"select\" className=\"priority-element\" value={value} onChange={handleOnChange}>\r\n            <option value=\"Low\">Low</option>\r\n            <option value=\"Medium\">Medium</option>\r\n            <option value=\"High\">High</option>\r\n        </Input>\r\n    </React.Fragment>\r\n\r\nconst List = (props) =>\r\n    <div className=\"list\">\r\n        <ul>\r\n            {props.children}\r\n        </ul>\r\n    </div>\r\n\r\nconst ListItem = (props) =>\r\n    <div className=\"list-item\">\r\n        <Row>\r\n            <Task\r\n                data={props.data}\r\n                item={props.item}\r\n                index={props.index}\r\n                handleTextChange={props.handleTextChange}\r\n                editText={props.editText}\r\n                toggleEditItem={props.toggleEditItem}>\r\n                <TaskDetails\r\n                    item={props.item}\r\n                    articulateDateDue={props.articulateDateDue} />\r\n            </Task>\r\n            <TransitionGroup>\r\n                <CSSTransition\r\n                    key={props.item.id}\r\n                    timeout={500}\r\n                    classNames=\"fade\">\r\n                    <ItemButtons\r\n                        item={props.item}\r\n                        index={props.index}\r\n                        markComplete={props.markComplete}\r\n                        sortItems={props.sortItems} />\r\n                </CSSTransition>\r\n            </TransitionGroup>\r\n        </Row>\r\n        <ItemEditBox\r\n            item={props.item}\r\n            index={props.index}\r\n            markComplete={props.markComplete}>\r\n            <Row>\r\n                <Col>\r\n                    <Calendar\r\n                        value={props.convertDate(props.item.dateDue, \"ISO\")}\r\n                        handleOnChange={(event) => props.editDate(event, props.index)}\r\n                        convertDate={props.convertDate} />\r\n                </Col>\r\n                <Col>\r\n                    <Priority\r\n                        value={props.convertPriority(props.item.priority)}\r\n                        handleOnChange={(event) => props.editPriority(event, props.index)} />\r\n                </Col>\r\n            </Row>\r\n        </ItemEditBox>\r\n    </div>\r\n\r\n\r\nconst Task = ({ data, item, index, toggleEditItem, handleTextChange, editText, children }) =>\r\n    <li\r\n        onClick={() => toggleEditItem(index)}\r\n        style={{\r\n            backgroundColor:\r\n                (!item.active) ?\r\n                    \"#e5e5e5\" :\r\n                    (item.priority === 3) ?\r\n                        data.settings.style.colorLow :\r\n                        (item.priority === 2) ?\r\n                            data.settings.style.colorMedium :\r\n                            data.settings.style.colorHigh\r\n        }}>\r\n        <span className=\"task\"\r\n            style={{\r\n                textDecorationLine:\r\n                    (item.active) ?\r\n                        \"none\" :\r\n                        \"line-through\"\r\n            }}>\r\n            {(item.editPanelHidden) ?\r\n                item.task :\r\n                <span className=\"edit-text\">\r\n                    <TextareaAutosize\r\n                        className=\"edit-text-element\"\r\n                        onChange={(event) => handleTextChange(event)}\r\n                        onClick={(event) => event.stopPropagation()}\r\n                        defaultValue={item.task} />\r\n                    <Button \r\n                        className=\"edit-text-button\" \r\n                        outline\r\n                        color=\"secondary\" \r\n                        size=\"sm\" \r\n                        onClick={() => editText(index)}>\r\n                    OK</Button>\r\n                </span>\r\n            }\r\n        </span>\r\n        <span className=\"instance\">\r\n            {(item.instance > 1) ?\r\n                ` (${item.instance})` :\r\n                null}\r\n        </span>\r\n        {children}\r\n    </li>\r\n\r\nconst TaskDetails = ({ item, articulateDateDue }) =>\r\n    <span className=\"date-due\">\r\n        {(item.tag === null) ?\r\n            null :\r\n            <span className=\"tag\">{item.tag}</span>}\r\n        {(item.active) ?\r\n            `Due: ${articulateDateDue(item.dateDue)}` :\r\n            \"Complete\"}\r\n    </span>\r\n\r\nconst ItemButtons = ({ item, index, markComplete, sortItems }) =>\r\n    <div className=\"item-buttons\">\r\n        <div className=\"delete-item-button\" onClick={() => markComplete(index)}>\r\n            {(item.active) ? \"✓\" : \"✕\"}\r\n        </div>\r\n        <div className=\"sort-button\" onClick={() => sortItems(index, true)}>↑</div>\r\n    </div>\r\n\r\nconst ItemEditBox = ({ item, index, markComplete, children }) =>\r\n    <li className=\"edit-task\" hidden={item.editPanelHidden}>\r\n        <span hidden={!item.active}>\r\n            {children}\r\n        </span>\r\n        <div className=\"undo\">\r\n            <button hidden={item.active} className=\"undo-button\" onClick={() => markComplete(index, true)}>Undo \"Mark Complete\"</button>\r\n        </div>\r\n    </li>\r\n\r\nclass AddTask extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.inputElement = React.createRef()\r\n    }\r\n    createItem = (event) => {\r\n        const { data, selectedPriority, addItem, convertPriority, convertDate, selectedDate, selectedTag } = this.props\r\n        const inputElementValue = this.inputElement.current.value\r\n        const itemInstances = data.listItems.reduce(function (total, item) {\r\n            return total + (inputElementValue === item.task ? 1 : 0)\r\n        }, 1)\r\n        const newItem = {\r\n            active: true,\r\n            id: uuid().substring(0, 10),\r\n            hidden: false,\r\n            task: inputElementValue,\r\n            priority: convertPriority(selectedPriority),\r\n            time: Date.now(),\r\n            dateDue: convertDate(selectedDate, \"timestamp\"),\r\n            instance: itemInstances,\r\n            editPanelHidden: true,\r\n            settingsHidden: true,\r\n            tag: (selectedTag === \"None\") ? null : selectedTag\r\n        }\r\n        addItem(newItem)\r\n        this.inputElement.current.value = \"\"\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        const { inputChange, buttonDisabled } = this.props\r\n        return (\r\n            <Form onSubmit={this.createItem}>\r\n                <FormGroup>\r\n                    <Row className=\"row-0\">\r\n                        <Col xs=\"10\">\r\n                            <Input type=\"text\" className=\"input--add-task\" onChange={inputChange} innerRef={this.inputElement}\r\n                                placeholder=\"Enter Task\">\r\n                            </Input>\r\n                        </Col>\r\n                        <Col xs=\"2\">\r\n                            <Button className=\"add-button\" outline color=\"primary\" disabled={buttonDisabled} type=\"submit\">Add</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </FormGroup>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nclass ToDo extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: (this.props.data) ? JSON.parse(this.props.data) :\r\n                {\r\n                    listItems:\r\n                        [{\r\n                            active: true,\r\n                            task: \"Your First Task\",\r\n                            priority: 3,\r\n                            time: Date.now(),\r\n                            instance: 1,\r\n                            editPanelHidden: true,\r\n                            dateDue: Date.now(),\r\n                            tag: null\r\n                        }],\r\n                    settings:\r\n                    {\r\n                        style: {\r\n                            colorHigh: \"#ff8680\",\r\n                            colorMedium: \"#ffe84b\",\r\n                            colorLow: \"#a8d7ea\"\r\n                        }\r\n                    },\r\n                    tags: [\"None\"]\r\n                },\r\n            buttonDisabled: true,\r\n            selectedPriority: \"Low\",\r\n            selectedSort: \"None\",\r\n            selectedDate: this.props.convertDate(Date.now(), \"ISO\"),\r\n            settingsHidden: true,\r\n            selectedStyle: \"None\",\r\n            selectedTag: \"None\",\r\n            editTaskText: \"\"\r\n        }\r\n        this.selectSortBy = React.createRef()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const { data } = this.state\r\n        const { saveData } = this.props\r\n        saveData(data)\r\n        console.log(data)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.sortItems()\r\n        console.log(this.state.data.listItems)\r\n    }\r\n\r\n    addItem = (newItem) => {\r\n        const { data, selectedSort } = this.state\r\n        data.listItems = [...data.listItems, newItem]\r\n        data.listItems = this.sortItemsBy(data.listItems, selectedSort)\r\n        this.setState({\r\n            data: data,\r\n            buttonDisabled: true\r\n        })\r\n    }\r\n\r\n    markComplete = (index, undo) => {\r\n        const { data } = this.state\r\n        const itemIsActive = data.listItems[index].active\r\n        if (itemIsActive) {\r\n            data.listItems[index].active = false\r\n            this.setState({\r\n                data: data\r\n            })\r\n            this.sortItems()\r\n        } else if (undo) {\r\n            data.listItems[index].active = true\r\n            this.setState({\r\n                data: data\r\n            })\r\n            this.sortItems()\r\n        } else {\r\n            this.deleteItem(index)\r\n        }\r\n    }\r\n\r\n    deleteItem = (key) => {\r\n        const { data } = this.state\r\n        data.listItems = data.listItems.filter((item, index) =>\r\n            index !== key\r\n        )\r\n        this.setState({\r\n            data: data\r\n        })\r\n    }\r\n\r\n    changePriority = (event) => {\r\n        const selectedPriority = event.target.value\r\n        this.setState({ selectedPriority: selectedPriority })\r\n    }\r\n\r\n    convertPriority = (priority) => {\r\n        if (typeof priority === 'string') {\r\n            return (priority === \"Low\") ? 3\r\n                : (priority === \"Medium\") ? 2\r\n                    : 1\r\n        } else {\r\n            return (priority === 3) ? \"Low\"\r\n                : (priority === 2) ? \"Medium\"\r\n                    : \"High\"\r\n        }\r\n    }\r\n\r\n    editPriority = (event, index) => {\r\n        let { data } = this.state\r\n        const { selectedSort } = this.state\r\n        const selectedPriority = event.target.value\r\n        data.listItems[index].priority = this.convertPriority(selectedPriority)\r\n        data.listItems[index].editPanelHidden = true\r\n        data.listItems = this.sortItemsBy(data.listItems, selectedSort)\r\n        this.setState({\r\n            data: data\r\n        })\r\n    }\r\n\r\n    editDate = (event, index) => {\r\n        let { data } = this.state\r\n        const { selectedSort } = this.state\r\n        const newDate = event.target.value\r\n        data.listItems[index].dateDue = convertDate(newDate, \"timestamp\")\r\n        data.listItems[index].editPanelHidden = true\r\n        data.listItems = this.sortItemsBy(data.listItems, selectedSort)\r\n        this.setState({\r\n            data: data\r\n        })\r\n    }\r\n\r\n    inputChange = (event) => {\r\n        const currentText = event.target.value\r\n        if (currentText === \"\") {\r\n            this.setState({\r\n                buttonDisabled: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                buttonDisabled: false\r\n            })\r\n        }\r\n    }\r\n\r\n    toggleItems = (listItems, type, tag) => {\r\n        const updateList = listItems\r\n        if (type === \"selected tag\") {\r\n            updateList.forEach(item => (item.tag !== tag) && (item.hidden = true))\r\n        } else if (type === \"tags only\") {\r\n            updateList.forEach(item => (item.tag === null) && (item.hidden = true))\r\n        } else if (type === \"show all\") {\r\n            updateList.forEach(item => item.hidden = false)\r\n        }\r\n        return updateList\r\n    }\r\n\r\n    sortItemsBy = (listItems, selectedSort, moveFrom) => {\r\n        const showAll = this.toggleItems(listItems, \"show all\")\r\n        if (selectedSort === \"Manual\") {\r\n            const moveTo = moveFrom - 1\r\n            return this.props.arrayMove(listItems, moveFrom, moveTo)\r\n        }\r\n        if (selectedSort === \"None\") {\r\n            listItems = showAll\r\n            return listItems\r\n        } else if (selectedSort === \"Priority\") {\r\n            listItems = showAll\r\n            return listItems.sort(\r\n                firstBy(\"active\", -1)\r\n                    .thenBy(\"priority\")\r\n                    .thenBy(\"dateDue\")\r\n                    .thenBy(\"task\")\r\n            )\r\n        } else if (selectedSort === \"Date Due\") {\r\n            listItems = showAll\r\n            return listItems.sort(\r\n                firstBy(\"active\", -1)\r\n                    .thenBy(\"dateDue\")\r\n                    .thenBy(\"priority\")\r\n                    .thenBy(\"task\")\r\n            )\r\n        } else if (selectedSort === \"A-Z\") {\r\n            listItems = showAll\r\n            return listItems.sort(\r\n                firstBy(\"active\", -1)\r\n                    .thenBy(\"task\")\r\n            )\r\n        } else if (selectedSort === \"Tags\") {\r\n            listItems = showAll\r\n            listItems = this.toggleItems(listItems, \"tags only\")\r\n            return listItems.sort(\r\n                firstBy(\"tag\")\r\n                    .thenBy(\"priority\")\r\n                    .thenBy(\"dateDue\")\r\n                    .thenBy(\"task\")\r\n            )\r\n        } else if (selectedSort === \"Selected Tag\") {\r\n            listItems = this.toggleItems(listItems, \"selected tag\", this.state.selectedTag)\r\n            return listItems.sort(\r\n                firstBy(\"tag\")\r\n                    .thenBy(\"priority\")\r\n                    .thenBy(\"dateDue\")\r\n                    .thenBy(\"task\")\r\n            )\r\n        }\r\n    }\r\n\r\n    sortItems = (index, manual) => {\r\n        const { data } = this.state\r\n        const selectedSort = this.selectSortBy.current.value\r\n        if (manual && selectedSort === \"None\") {\r\n            data.listItems = this.sortItemsBy(data.listItems, \"Manual\", index)\r\n            this.setState({\r\n                data: data\r\n            })\r\n        }\r\n        if (selectedSort === \"None\") {\r\n            data.listItems = this.sortItemsBy(data.listItems, selectedSort)\r\n            this.setState({\r\n                data: data,\r\n                selectedSort: selectedSort\r\n            })\r\n        } else {\r\n            data.listItems = this.sortItemsBy(data.listItems, selectedSort)\r\n            this.setState({\r\n                data: data,\r\n                selectedSort: selectedSort\r\n            })\r\n        }\r\n    }\r\n\r\n    toggleEditItem = (index) => {\r\n        let { data } = this.state\r\n        const targetItem = data.listItems[index]\r\n        const targetPanelState = targetItem.editPanelHidden\r\n        data.listItems.forEach(function (item, index) {\r\n            if (item.editPanelHidden === false && item !== targetItem) {\r\n                item.editPanelHidden = true\r\n            }\r\n        })\r\n        data.listItems[index].editPanelHidden = !targetPanelState\r\n        this.setState({\r\n            data: data,\r\n            editTaskText: targetItem.task\r\n        })\r\n    }\r\n\r\n    changeDate = (event) => {\r\n        const updateDate = event.target.value\r\n        this.setState({\r\n            selectedDate: updateDate\r\n        })\r\n    }\r\n\r\n    changeColor = (event, selectedColor) => {\r\n        const { data } = this.state\r\n        data.settings.style[selectedColor] = event.target.value\r\n        this.setState({\r\n            data: data,\r\n            selectedStyle: \"None\"\r\n        })\r\n    }\r\n\r\n    toggleSettings = () => {\r\n        this.setState(state => ({\r\n            settingsHidden: !state.settingsHidden\r\n        }))\r\n    }\r\n\r\n    changeStyle = (event) => {\r\n        const { data } = this.state\r\n        const style = event.target.value\r\n        if (style === \"None\") {\r\n            this.setState({\r\n                selectedStyle: style\r\n            })\r\n        } else if (style === \"Default\") {\r\n            data.settings.style.colorHigh = \"#ff8680\"\r\n            data.settings.style.colorMedium = \"#ffe84b\"\r\n            data.settings.style.colorLow = \"#a8d7ea\"\r\n            this.setState({\r\n                data: data,\r\n                selectedStyle: style\r\n            })\r\n        } else if (style === \"Marie\") {\r\n            data.settings.style.colorHigh = \"#f46ed0\"\r\n            data.settings.style.colorMedium = \"#f2b5e2\"\r\n            data.settings.style.colorLow = \"#fce8f7\"\r\n            this.setState({\r\n                data: data,\r\n                selectedStyle: style\r\n            })\r\n        }\r\n    }\r\n\r\n    changeTag = (event) => {\r\n        const { data, selectedSort } = this.state\r\n        const tag = event.target.value\r\n        if (selectedSort === \"Selected Tag\") {\r\n            this.toggleItems(data.listItems, \"show all\")\r\n            this.toggleItems(data.listItems, \"selected tag\", tag)\r\n            this.setState({\r\n                data: data,\r\n                selectedTag: tag\r\n            })\r\n        } else {\r\n            this.setState({\r\n                selectedTag: tag\r\n            })\r\n        }\r\n    }\r\n\r\n    addTag = () => {\r\n        const { data } = this.state\r\n        const newTag = prompt(\"Enter a new tag\")\r\n        if (newTag === \"\" || data.tags.includes(newTag)) {\r\n            alert(\"Invalid tag or duplicate\")\r\n        } else {\r\n            data.tags = [...data.tags, newTag]\r\n            this.setState({\r\n                data: data,\r\n                selectedTag: newTag\r\n            })\r\n        }\r\n    }\r\n\r\n    removeTag = () => {\r\n        const { data, selectedTag } = this.state\r\n        data.tags = data.tags.filter(tag => tag !== selectedTag || tag === \"None\")\r\n        this.setState({\r\n            data: data,\r\n            selectedTag: \"None\"\r\n        })\r\n    }\r\n\r\n    editText = (index) => {\r\n        const { data, editTaskText } = this.state\r\n        data.listItems[index].task = editTaskText\r\n        this.setState({\r\n            data: data\r\n        })\r\n    }\r\n\r\n    handleTextChange = (event) => {\r\n        const currentText = event.target.value\r\n        this.setState({\r\n            editTaskText: currentText\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { data, buttonDisabled, selectedPriority, selectedDate, selectedTag, selectedSort, settingsHidden, selectedStyle } = this.state\r\n        const { convertDate, articulateDateDue } = this.props\r\n        return (\r\n            <Container>\r\n                <div className=\"todo\">\r\n                    <AddTask\r\n                        data={data}\r\n                        addItem={this.addItem}\r\n                        inputChange={this.inputChange}\r\n                        convertPriority={this.convertPriority}\r\n                        convertDate={convertDate}\r\n                        buttonDisabled={buttonDisabled}\r\n                        selectedPriority={selectedPriority}\r\n                        selectedDate={selectedDate}\r\n                        selectedTag={selectedTag} />\r\n                    <Row className=\"row-1\">\r\n                        <Col>\r\n                            <div className=\"calendar\">\r\n                                <Calendar value={selectedDate} handleOnChange={this.changeDate} convertDate={convertDate} />\r\n                            </div>\r\n                        </Col>\r\n                        <Col>\r\n                            <div className=\"priority--top\">\r\n                                <Priority value={selectedPriority} handleOnChange={this.changePriority} />\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"row-2\">\r\n                        <Col className=\"sort\" xs=\"auto\">\r\n                            <Input type=\"select\" value={selectedSort} innerRef={this.selectSortBy} onChange={this.sortItems}>\r\n                                <option value=\"None\">Sort:</option>\r\n                                <option value=\"Priority\">Priority</option>\r\n                                <option value=\"Date Due\">Date Due</option>\r\n                                <option value=\"A-Z\">A-Z</option>\r\n                                <option value=\"Tags\">Tags</option>\r\n                                <option value=\"Selected Tag\">Selected Tag</option>\r\n                            </Input>\r\n                        </Col>\r\n                        <Col className=\"tag-select\" xs=\"auto\">\r\n                            <Input type=\"select\" value={selectedTag} onChange={this.changeTag}>\r\n                                {this.state.data.tags.map((tag, index) =>\r\n                                    <option key={index} value={tag}>{(tag === \"None\") ? \"Tag:\" : tag}</option>\r\n                                )}\r\n                            </Input>\r\n                            <Button outline color=\"secondary\" onClick={this.removeTag}>-</Button>\r\n                            <Button outline color=\"secondary\" onClick={this.addTag}>+</Button>\r\n                        </Col>\r\n                        <Col className=\"settings-button\" xs=\"1\">\r\n                            <div onClick={this.toggleSettings}>⚙</div>\r\n                        </Col>\r\n                    </Row>\r\n                    <List className=\"list\">\r\n                        <TransitionGroup>\r\n                            {data.listItems.map((item, index) =>\r\n                                (item.hidden) ? null :\r\n                                    <CSSTransition\r\n                                        key={item.id}\r\n                                        timeout={500}\r\n                                        classNames=\"fade\">\r\n                                        <ListItem\r\n                                            data={data}\r\n                                            item={item}\r\n                                            index={index}\r\n                                            handleTextChange={this.handleTextChange}\r\n                                            editText={this.editText}\r\n                                            toggleEditItem={this.toggleEditItem}\r\n                                            articulateDateDue={articulateDateDue}\r\n                                            markComplete={this.markComplete}\r\n                                            sortItems={this.sortItems}\r\n                                            convertPriority={this.convertPriority}\r\n                                            editDate={this.editDate}\r\n                                            convertDate={convertDate}\r\n                                            editPriority={this.editPriority} />\r\n                                    </CSSTransition>\r\n                            )}\r\n                        </TransitionGroup>\r\n                    </List>\r\n                    <div className=\"settings\">\r\n                        <fieldset hidden={settingsHidden}>\r\n                            <div>\r\n                                <div>\r\n                                    <select className=\"select-style\" value={selectedStyle} onChange={this.changeStyle}>\r\n                                        <option value=\"None\">None</option>\r\n                                        <option value=\"Default\">Default</option>\r\n                                        <option value=\"Marie\">Marie</option>\r\n                                    </select>\r\n                                </div>\r\n                                <legend>Choose your colours</legend>\r\n                                <div>\r\n                                    <input className=\"change-color\" type=\"color\" value={data.settings.style.colorHigh} onChange={(event) => this.changeColor(event, \"colorHigh\")}></input>\r\n                                    <label>High Priority</label>\r\n                                </div>\r\n                                <div>\r\n                                    <input className=\"change-color\" type=\"color\" value={data.settings.style.colorMedium} onChange={(event) => this.changeColor(event, \"colorMedium\")}></input>\r\n                                    <label>Medium Priority</label>\r\n                                </div>\r\n                                <div>\r\n                                    <input className=\"change-color\" type=\"color\" value={data.settings.style.colorLow} onChange={(event) => this.changeColor(event, \"colorLow\")}></input>\r\n                                    <label>Low Priority</label>\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nToDo.defaultProps = {\r\n    convertDate: convertDate,\r\n    articulateDateDue: articulateDateDue,\r\n    arrayMove: arrayMove\r\n}\r\n\r\nexport default ToDo","import React, { Component } from 'react';\nimport { convertDate, articulateDateDue, arrayMove } from './functions'\nimport ToDo from './ToDo'\nimport './App.css';\n\nclass App extends Component {\n    render() {\n        const dataFile = \"data_2\"\n        const data = localStorage.getItem(dataFile)\n        const saveData = (data) => localStorage.setItem(dataFile, JSON.stringify(data))\n        return (\n            <ToDo\n                data={data}\n                saveData={saveData}\n                convertDate={convertDate}\n                articulateDateDue={articulateDateDue}\n                arrayMove={arrayMove}\n            />\n        )\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}