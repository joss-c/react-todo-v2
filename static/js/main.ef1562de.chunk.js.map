{"version":3,"sources":["functions.js","randomMessage.js","thenBy.min.js","ToDo.js","App.js","serviceWorker.js","index.js"],"names":["convertDate","date","convertTo","ISODate","Date","toISOString","substring","getTime","year","month","day","setUTCFullYear","setUTCMonth","setUTCDate","toLocaleDateString","articulateDateDue","dateDue","today","now","arrayMove","arr","fromIndex","toIndex","arrCopy","slice","element","length","splice","randomMessage","messages","Math","floor","random","firstBy","identity","v","ignoreCase","toLowerCase","tb","func","opt","x","this","y","f","direction","prop","v1","uf","preprocess","cmp","v2","makeCompareFunction","a","b","thenBy","Calendar","_ref","handleOnChange","value","react_default","createElement","Fragment","reactstrap_es","className","onChange","type","min","max","Priority","_ref2","List","props","children","Task","_ref3","data","item","index","toggleEditItem","handleTextChange","editText","active","onClick","style","backgroundColor","priority","settings","colorLow","colorMedium","colorHigh","textDecorationLine","editPanelHidden","task","instance","concat","xs","lib_default","event","stopPropagation","defaultValue","color","size","TaskDetails","_ref4","react_transition_group","tag","in","timeout","classNames","ItemButtons","_ref5","markComplete","sortItems","outline","ItemEditBox","_ref6","hidden","Settings","_ref7","settingsHidden","selectedStyle","changeStyle","changeColor","toggleInactiveTasks","_this","id","label","checked","hideInactive","ListItem","ToDo_Task","ToDo_TaskDetails","key","ToDo_ItemButtons","ToDo_ItemEditBox","ToDo_Calendar","editDate","ToDo_Priority","convertPriority","editPriority","Stats","_this2","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","loading","setState","_this$props","stats","statsHidden","tasksCompleted","totalTasksCompleted","keys","oneWeekAgo","totalTasksCompletedOneWeek","reduce","total","timeCompleted","react_spinners","sizeUnit","bonusStars","Component","AddTask","_this3","createItem","_this3$props","selectedPriority","addItem","selectedDate","selectedTag","inputElementValue","inputElement","current","itemInstances","listItems","uuid","timeCreated","preventDefault","React","createRef","_this$props2","inputChange","buttonDisabled","onSubmit","innerRef","placeholder","disabled","ToDo","_this4","clone","object","JSON","parse","stringify","newItem","selectedSort","toConsumableArray","sortItemsBy","undo","console","log","setTimeout","notify","notifyStyle","background","text","deleteItem","filter","changePriority","target","newDate","toggleItems","listItemsCopy","forEach","moveFrom","showAll","moveTo","sort","manual","selectSortBy","targetItem","targetPanelState","editTaskText","changeDate","updateDate","selectedColor","toggleSettings","showModal","toggleStats","colors","changeTag","addTag","newTag","prompt","tags","includes","alert","removeTag","currentText","hideEditPanels","toggleModal","time","createShowQueue","prevProps","prevState","_this$state","saveData","prevTasksCompleted","revisedStats","_this5","_this$state2","_this$props3","document","body","notify_default","isOpen","toggle","ToDo_Settings","ToDo_Stats","sm","md","lg","xl","ToDo_AddTask","map","ToDo_List","ToDo_ListItem","defaultProps","App","localStorage","getItem","src_ToDo","fileName","setItem","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ef1562de.chunk.js","sourcesContent":["const convertDate = (date, convertTo) => {\r\n    const ISODate = new Date(date).toISOString().substring(0, 10)\r\n    if (convertTo === \"ISO\") {\r\n        return ISODate\r\n    } else if (convertTo === \"timestamp\") {\r\n        return new Date(date).getTime()\r\n    } else if (convertTo === \"local\") {\r\n        const year = ISODate.substring(0, 4)\r\n        const month = ISODate.substring(5, 7)\r\n        const day = ISODate.substring(8, 10)\r\n        const date = new Date()\r\n        date.setUTCFullYear(year)\r\n        date.setUTCMonth(month - 1)\r\n        date.setUTCDate(day)\r\n        return date.toLocaleDateString(\"en-GB\")\r\n    }\r\n}\r\n\r\nconst articulateDateDue = (dateDue) => {\r\n    let today = convertDate(Date.now(), \"ISO\")\r\n    today = convertDate(today, \"timestamp\")\r\n    if (dateDue - today < 0) {\r\n        return \"Overdue\"\r\n    }\r\n    if (dateDue - today === 0) {\r\n        return \"Today\"\r\n    } else if (dateDue - today === 86400000) {\r\n        return \"Tomorrow\"\r\n    } else {\r\n        return convertDate(dateDue, \"local\")\r\n    }\r\n}\r\n\r\nconst arrayMove = (arr, fromIndex, toIndex) => {\r\n    const arrCopy = arr.slice(0)\r\n    const element = arr[fromIndex]\r\n    if (fromIndex === 0) {\r\n        toIndex = arr.length\r\n    }\r\n    arrCopy.splice(fromIndex, 1)\r\n    arrCopy.splice(toIndex, 0, element)\r\n    return arrCopy\r\n}\r\n\r\nexport { convertDate, articulateDateDue, arrayMove }","const randomMessage = () => {\r\n    const messages = [\r\n        \"Great job! 👍\",\r\n        \"Nice! 👌\",\r\n        \"You're doing so great!\",\r\n        \"You're on a roll!\",\r\n        \"We're doing it! 😁\",\r\n        \"Weow! 😺\",\r\n        \"A++ for effort!✨\",\r\n        \"Cool 😎\",\r\n        \"Amazing! 😄\",\r\n        \"Impressive 😎\",\r\n        \"Incredible! 👏\",\r\n        \"Nice moves! 🕺\",\r\n        \"Making progress! 😊\"\r\n    ]\r\n    return messages[Math.floor(Math.random() * messages.length)]\r\n}\r\n\r\nexport { randomMessage }","/***\r\n   Copyright 2013 Teun Duynstee\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n     http://www.apache.org/licenses/LICENSE-2.0\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\nvar firstBy = (function() {\r\n\r\n    function identity(v){return v;}\r\n\r\n    function ignoreCase(v){return typeof(v)===\"string\" ? v.toLowerCase() : v;}\r\n\r\n    function makeCompareFunction(f, opt){\r\n        opt = typeof(opt)===\"number\" ? {direction:opt} : opt||{};\r\n        if(typeof(f)!=\"function\"){\r\n            var prop = f;\r\n            // make unary function\r\n            f = function(v1){return !!v1[prop] ? v1[prop] : \"\";}\r\n        }\r\n        if(f.length === 1) {\r\n            // f is a unary function mapping a single item to its sort score\r\n            var uf = f;\r\n            var preprocess = opt.ignoreCase?ignoreCase:identity;\r\n            var cmp = opt.cmp || function(v1,v2) {return v1 < v2 ? -1 : v1 > v2 ? 1 : 0;}\r\n            f = function(v1,v2) {return cmp(preprocess(uf(v1)), preprocess(uf(v2)));}\r\n        }\r\n        if(opt.direction === -1) return function(v1,v2){return -f(v1,v2)};\r\n        return f;\r\n    }\r\n\r\n    /* adds a secondary compare function to the target function (`this` context)\r\n       which is applied in case the first one returns 0 (equal)\r\n       returns a new compare function, which has a `thenBy` method as well */\r\n    function tb(func, opt) {\r\n        /* should get value false for the first call. This can be done by calling the \r\n        exported function, or the firstBy property on it (for es6 module compatibility)\r\n        */\r\n        var x = (typeof(this) == \"function\" && !this.firstBy) ? this : false;\r\n        var y = makeCompareFunction(func, opt);\r\n        var f = x ? function(a, b) {\r\n                        return x(a,b) || y(a,b);\r\n                    }\r\n                  : y;\r\n        f.thenBy = tb;\r\n        return f;\r\n    }\r\n    tb.firstBy = tb;\r\n    return tb;\r\n})();\r\n\r\nexport { firstBy }","import React, { Component } from 'react'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport { Container, Row, Col, Input, CustomInput, Button, Form, FormGroup, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\r\nimport { MoonLoader } from 'react-spinners'\r\nimport Notifications, { notify } from 'react-notify-toast'\r\nimport TextareaAutosize from 'react-autosize-textarea'\r\nimport uuid from 'uuid'\r\nimport { convertDate, articulateDateDue, arrayMove } from './functions'\r\nimport { randomMessage } from './randomMessage'\r\nimport { firstBy } from './thenBy.min.js'\r\n\r\nconst Calendar = ({ handleOnChange, value, convertDate }) =>\r\n    <React.Fragment>\r\n        <Input\r\n            className=\"calendar-element\"\r\n            onChange={handleOnChange}\r\n            type=\"date\"\r\n            value={value}\r\n            min={convertDate(Date.now(), \"ISO\")}\r\n            max=\"2019-12-31\"\r\n        />\r\n    </React.Fragment>\r\n\r\nconst Priority = ({ handleOnChange, value }) =>\r\n    <React.Fragment>\r\n        <Input\r\n            type=\"select\"\r\n            className=\"priority-element\"\r\n            value={value}\r\n            onChange={handleOnChange}\r\n        >\r\n            <option value=\"Low\">Priority: Low</option>\r\n            <option value=\"Medium\">Medium</option>\r\n            <option value=\"High\">High</option>\r\n        </Input>\r\n    </React.Fragment>\r\n\r\nconst List = (props) =>\r\n    <div className=\"list\">\r\n        {props.children}\r\n    </div>\r\n\r\nconst Task = ({ data, item, index, toggleEditItem, handleTextChange, editText, children }) =>\r\n    <div\r\n        className={(item.active) ? \"task\" : \"task animate-background\"}\r\n        onClick={() => toggleEditItem(index)}\r\n        style={{\r\n            backgroundColor:\r\n                (!item.active) ?\r\n                    \"#e5e5e5\" :\r\n                    (item.priority === 3) ?\r\n                        data.settings.style.colorLow :\r\n                        (item.priority === 2) ?\r\n                            data.settings.style.colorMedium :\r\n                            data.settings.style.colorHigh\r\n        }}>\r\n        <span\r\n            style={{\r\n                textDecorationLine:\r\n                    (item.active) ?\r\n                        \"none\" :\r\n                        \"line-through\"\r\n            }}>\r\n            {(item.editPanelHidden) ?\r\n                <Row>\r\n                    <Col>\r\n                        {item.task}\r\n                        <span className=\"instance\">\r\n                            {(item.instance > 1) ?\r\n                                ` (${item.instance})` :\r\n                                null}\r\n                        </span>\r\n                    </Col>\r\n                </Row> :\r\n                <span>\r\n                    <Row className=\"edit-text no-gutters\">\r\n                        <Col xs=\"10\">\r\n                            <TextareaAutosize\r\n                                className=\"edit-text-element\"\r\n                                onChange={(event) => handleTextChange(event)}\r\n                                onClick={(event) => event.stopPropagation()}\r\n                                defaultValue={item.task}\r\n                            />\r\n                        </Col>\r\n                        <Col xs=\"2\">\r\n                            <Button\r\n                                className=\"edit-text-button\"\r\n                                color=\"secondary\"\r\n                                size=\"sm\"\r\n                                onClick={(event) => editText(event, index)}\r\n                            >\r\n                                {\"OK\"}\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </span>\r\n            }\r\n        </span>\r\n        {children}\r\n    </div>\r\n\r\nconst TaskDetails = ({ item, articulateDateDue }) =>\r\n    <Row>\r\n        <Col className=\"task-details\">\r\n            <TransitionGroup>\r\n                <div className=\"date-due x-small\">\r\n                    {(item.tag === null) ?\r\n                        null :\r\n                        <span className=\"tag\">{item.tag}</span>}\r\n                    {(item.active) ?\r\n                        `Due: ${articulateDateDue(item.dateDue)}` :\r\n                        <React.Fragment>\r\n                            <span className=\"x-small\">\r\n                                {\"Complete \"}\r\n                            </span>\r\n                            <CSSTransition\r\n                                in={!item.active}\r\n                                timeout={1000}\r\n                                classNames=\"star\"\r\n                            //unmountOnExit\r\n                            >\r\n                                <span className=\"star x-small\" >\r\n                                    {\"★\"}\r\n                                </span>\r\n                            </CSSTransition>\r\n                            <CSSTransition\r\n                                in={!item.active}\r\n                                timeout={1000}\r\n                                classNames=\"plus-one\"\r\n                            //unmountOnExit\r\n                            >\r\n                                <span className=\"plus-one x-small\">\r\n                                    {\" +1\"}\r\n                                </span>\r\n                            </CSSTransition>\r\n                        </React.Fragment>}\r\n                </div>\r\n            </TransitionGroup>\r\n        </Col>\r\n    </Row>\r\n\r\nconst ItemButtons = ({ item, index, markComplete, sortItems }) =>\r\n    <div className=\"item-buttons\">\r\n        <Button\r\n            className=\"sort-button\"\r\n            size=\"sm\"\r\n            outline\r\n            color=\"secondary\"\r\n            onClick={() => sortItems(index, true)}>\r\n            ↑\r\n        </Button>\r\n        <Button\r\n            className=\"delete-item-button\"\r\n            size=\"sm\"\r\n            outline\r\n            color={(item.active) ? \"success\" : \"danger\"}\r\n            onClick={() => markComplete(index)}>\r\n            {(item.active) ? \"✓\" : \"✕\"}\r\n        </Button>\r\n    </div>\r\n\r\nconst ItemEditBox = ({ item, index, markComplete, children }) =>\r\n    <div className=\"edit-task\" hidden={item.editPanelHidden}>\r\n        <span hidden={!item.active}>\r\n            {children}\r\n        </span>\r\n        <div className=\"undo\">\r\n            <Button\r\n                hidden={item.active}\r\n                className=\"undo-button\"\r\n                outline\r\n                color=\"secondary\"\r\n                onClick={() => markComplete(index, true)}>\r\n                Undo \"Mark Complete\"\r\n            </Button>\r\n        </div>\r\n    </div>\r\n\r\nconst Settings = ({ data, settingsHidden, selectedStyle, changeStyle, changeColor, toggleInactiveTasks }) =>\r\n    <React.Fragment>\r\n        <fieldset hidden={settingsHidden}>\r\n            <div>\r\n                <legend>Choose your colours</legend>\r\n                <div>\r\n                    <Input\r\n                        className=\"select-style\"\r\n                        type=\"select\"\r\n                        value={selectedStyle}\r\n                        onChange={changeStyle}>\r\n                        <option value=\"None\">None</option>\r\n                        <option value=\"Default\">Default</option>\r\n                        <option value=\"Marie\">Marie</option>\r\n                        <option value=\"Halloween\">Halloween</option>\r\n                    </Input>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        className=\"change-color\"\r\n                        type=\"color\"\r\n                        value={data.settings.style.colorHigh}\r\n                        onChange={(event) => changeColor(event, \"colorHigh\")}>\r\n                    </input>\r\n                    <label>High Priority</label>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        className=\"change-color\"\r\n                        type=\"color\"\r\n                        value={data.settings.style.colorMedium}\r\n                        onChange={(event) => changeColor(event, \"colorMedium\")}>\r\n                    </input>\r\n                    <label>Medium Priority</label>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        className=\"change-color\"\r\n                        type=\"color\"\r\n                        value={data.settings.style.colorLow}\r\n                        onChange={(event) => this.changeColor(event, \"colorLow\")}>\r\n                    </input>\r\n                    <label>Low Priority</label>\r\n                </div>\r\n            </div>\r\n            <React.Fragment>\r\n                <div>-----------</div>\r\n                <Row>\r\n                    <Col>\r\n                        <CustomInput\r\n                            type=\"checkbox\"\r\n                            id=\"checkbox\"\r\n                            label=\"Show completed tasks\"\r\n                            checked={!data.settings.hideInactive}\r\n                            onChange={toggleInactiveTasks} />\r\n                    </Col>\r\n                </Row>\r\n                <div>-----------</div>\r\n            </React.Fragment>\r\n        </fieldset>\r\n    </React.Fragment>\r\n\r\nconst ListItem = (props) =>\r\n    <React.Fragment>\r\n        <Row className=\"no-gutters\">\r\n            <Col xs=\"9\">\r\n                <Task\r\n                    data={props.data}\r\n                    item={props.item}\r\n                    index={props.index}\r\n                    handleTextChange={props.handleTextChange}\r\n                    editText={props.editText}\r\n                    toggleEditItem={props.toggleEditItem}\r\n                >\r\n                    <TaskDetails\r\n                        item={props.item}\r\n                        articulateDateDue={props.articulateDateDue}\r\n                    />\r\n                </Task>\r\n            </Col>\r\n            <Col xs=\"3\">\r\n                <TransitionGroup>\r\n                    <CSSTransition\r\n                        key={props.item.id}\r\n                        timeout={500}\r\n                        classNames=\"fade\">\r\n                        <ItemButtons\r\n                            item={props.item}\r\n                            index={props.index}\r\n                            markComplete={props.markComplete}\r\n                            sortItems={props.sortItems}\r\n                        />\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n            </Col>\r\n        </Row>\r\n        <ItemEditBox\r\n            item={props.item}\r\n            index={props.index}\r\n            markComplete={props.markComplete}>\r\n            <Row>\r\n                <Col>\r\n                    <Calendar\r\n                        value={props.convertDate(props.item.dateDue, \"ISO\")}\r\n                        handleOnChange={(event) => props.editDate(event, props.index)}\r\n                        convertDate={props.convertDate}\r\n                    />\r\n                </Col>\r\n                <Col>\r\n                    <Priority\r\n                        value={props.convertPriority(props.item.priority)}\r\n                        handleOnChange={(event) => props.editPriority(event, props.index)}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </ItemEditBox>\r\n    </React.Fragment>\r\n\r\nclass Stats extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { stats, statsHidden } = this.props\r\n        const { loading } = this.state\r\n        const tasksCompleted = stats.tasksCompleted\r\n        const totalTasksCompleted = Object.keys(tasksCompleted).length\r\n        const oneWeekAgo = Date.now() - (60 * 60 * 24 * 7 * 1000)\r\n        const totalTasksCompletedOneWeek =\r\n            Object.keys(tasksCompleted)\r\n                .reduce((total, id) => {\r\n                    if (tasksCompleted[id].timeCompleted > oneWeekAgo) {\r\n                        total++\r\n                    }\r\n                    return total\r\n                }, 0)\r\n        return (\r\n            (loading) ?\r\n                <div className=\"align-center\">\r\n                    <MoonLoader\r\n                        color={'#007bff'}\r\n                        sizeUnit={\"px\"}\r\n                        size={100}\r\n                        loading={loading}\r\n                    />\r\n                </div>\r\n                :\r\n                <div\r\n                    className=\"align-center\"\r\n                    hidden={statsHidden}\r\n                >\r\n                    <div className=\"star-big\">\r\n                        {\"★\"}\r\n                    </div>\r\n                    <h1>{`${totalTasksCompleted + stats.bonusStars} stars earned!`}</h1>\r\n                    <div>\r\n                        {`Tasks completed: ${totalTasksCompleted}`}\r\n                    </div>\r\n                    <div>\r\n                        {`This week: ${totalTasksCompletedOneWeek}`}\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass AddTask extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.inputElement = React.createRef()\r\n    }\r\n    createItem = (event) => {\r\n        const { data, selectedPriority, addItem, convertPriority, convertDate, selectedDate, selectedTag } = this.props\r\n        const inputElementValue = this.inputElement.current.value\r\n        const itemInstances = data.listItems.reduce(function (total, item) {\r\n            return total + (inputElementValue === item.task ? 1 : 0)\r\n        }, 1)\r\n        const newItem = {\r\n            active: true,\r\n            id: uuid().substring(0, 12),\r\n            hidden: false,\r\n            task: inputElementValue,\r\n            priority: convertPriority(selectedPriority),\r\n            timeCreated: Date.now(),\r\n            dateDue: convertDate(selectedDate, \"timestamp\"),\r\n            instance: itemInstances,\r\n            editPanelHidden: true,\r\n            settingsHidden: true,\r\n            tag: (selectedTag === \"None\") ? null : selectedTag,\r\n        }\r\n        addItem(newItem)\r\n        this.inputElement.current.value = \"\"\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        const { inputChange, buttonDisabled } = this.props\r\n        return (\r\n            <Form onSubmit={this.createItem}>\r\n                <FormGroup>\r\n                    <Row className=\"row-0 no-gutters\">\r\n                        <Col className=\"padding-right\" xs=\"9\">\r\n                            <Input\r\n                                type=\"text\"\r\n                                className=\"input--add-task\"\r\n                                onChange={inputChange}\r\n                                innerRef={this.inputElement}\r\n                                placeholder=\"Enter Task\">\r\n                            </Input>\r\n                        </Col>\r\n                        <Col xs=\"3\">\r\n                            <Button\r\n                                className=\"add-button\"\r\n                                outline\r\n                                color=\"primary\"\r\n                                disabled={buttonDisabled}\r\n                                type=\"submit\">\r\n                                Add\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </FormGroup>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nclass ToDo extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: (this.props.data) ? JSON.parse(this.props.data) :\r\n                {\r\n                    listItems:\r\n                        [{\r\n                            active: true,\r\n                            hidden: false,\r\n                            id: uuid().substring(0, 10),\r\n                            task: \"Sample Task ✨\",\r\n                            priority: 3,\r\n                            time: Date.now(),\r\n                            instance: 1,\r\n                            editPanelHidden: true,\r\n                            dateDue: Date.now(),\r\n                            tag: null\r\n                        }],\r\n                    settings: {\r\n                        style: {\r\n                            colorHigh: \"#f5c6cb\",\r\n                            colorMedium: \"#ffeeba\",\r\n                            colorLow: \"#bee5eb\"\r\n                        },\r\n                        hideInactive: false\r\n                    },\r\n                    tags: [\"None\"]\r\n                },\r\n            stats: (this.props.stats) ? JSON.parse(this.props.stats) :\r\n                {\r\n                    tasksCompleted: {},\r\n                    bonusStars: 0\r\n                },\r\n            buttonDisabled: true,\r\n            selectedPriority: \"Low\",\r\n            selectedSort: \"None\",\r\n            selectedDate: this.props.convertDate(Date.now(), \"ISO\"),\r\n            settingsHidden: true,\r\n            statsHidden: true,\r\n            selectedStyle: \"None\",\r\n            selectedTag: \"None\",\r\n            editTaskText: \"\",\r\n            showModal: false\r\n        }\r\n        this.selectSortBy = React.createRef()\r\n        this.notify = notify.createShowQueue()\r\n        this.notifyStyle = { background: \"#007bff\", text: \"#ffffff\" }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { data, stats } = this.state\r\n        const { saveData } = this.props\r\n        if (prevState.data !== data) {\r\n            saveData(data, \"data_9\")\r\n        }\r\n        if (prevState.stats !== stats) {\r\n            saveData(stats, \"stats_3\")\r\n        }\r\n        // Uncredit bonus stars on \"mark uncomplete\"\r\n        const prevTasksCompleted = Object.keys(prevState.stats.tasksCompleted).length\r\n        const tasksCompleted = Object.keys(stats.tasksCompleted).length\r\n        console.log(prevTasksCompleted, tasksCompleted)\r\n        if (tasksCompleted < prevTasksCompleted) {\r\n            if (prevTasksCompleted % 10 === 0) {\r\n                const revisedStats = this.clone(stats)\r\n                revisedStats.bonusStars -= 2\r\n                this.setState({\r\n                    stats: revisedStats\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.hideEditPanels()\r\n        this.sortItems()\r\n        console.log(this.state)\r\n        this.notify(\"You got this! 😊\", \"custom\", 2000, this.notifyStyle)\r\n    }\r\n\r\n    clone = (object) => {\r\n        return JSON.parse(JSON.stringify(object))\r\n    }\r\n\r\n    addItem = (newItem) => {\r\n        const { selectedSort } = this.state\r\n        const data = this.clone(this.state.data)\r\n        data.listItems = [...data.listItems, newItem]\r\n        data.listItems = this.sortItemsBy(data.listItems, selectedSort)\r\n        this.setState({\r\n            data: data,\r\n            buttonDisabled: true\r\n        })\r\n    }\r\n\r\n    markComplete = (index, undo) => {\r\n        const data = this.clone(this.state.data)\r\n        const stats = this.clone(this.state.stats)\r\n        const item = data.listItems[index]\r\n        if (data.listItems.length === 0) {\r\n            console.log(\"List is empty\")\r\n        } else {\r\n            const itemIsActive = item.active\r\n            if (itemIsActive) {\r\n                item.active = false\r\n                stats.tasksCompleted[item.id] = {\r\n                    timeCreated: item.timeCreated,\r\n                    timeCompleted: Date.now()\r\n                }\r\n                this.setState({\r\n                    data: data,\r\n                    stats: stats\r\n                })\r\n                const tasksCompleted = Object.keys(stats.tasksCompleted).length\r\n                if (tasksCompleted % 5 === 0) {\r\n                    setTimeout(() => {\r\n                        this.notify(randomMessage(), \"custom\", 2000, this.notifyStyle)\r\n                    }, 500)\r\n                }\r\n                if (tasksCompleted % 10 === 0) {\r\n                    setTimeout(() => {\r\n                        this.notify(\"+2⭐!\", \"custom\", 2000, { background: \"#fff5be\", text: \"#000000\" })\r\n                        stats.bonusStars += 2\r\n                        this.setState({\r\n                            stats: stats\r\n                        })\r\n                    }, 500)\r\n                }\r\n            } else if (undo) {\r\n                item.editPanelHidden = true\r\n                item.active = true\r\n                delete stats.tasksCompleted[item.id]\r\n                this.setState({\r\n                    data: data,\r\n                    stats: stats\r\n                })\r\n            } else {\r\n                this.deleteItem(index)\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteItem = (key) => {\r\n        const data = this.clone(this.state.data)\r\n        data.listItems = data.listItems.filter((item, index) =>\r\n            index !== key\r\n        )\r\n        this.setState({\r\n            data: data\r\n        })\r\n    }\r\n\r\n    changePriority = (event) => {\r\n        const selectedPriority = event.target.value\r\n        this.setState({ selectedPriority: selectedPriority })\r\n    }\r\n\r\n    convertPriority = (priority) => {\r\n        if (typeof priority === 'string') {\r\n            return (priority === \"Low\") ? 3\r\n                : (priority === \"Medium\") ? 2\r\n                    : 1\r\n        } else {\r\n            return (priority === 3) ? \"Low\"\r\n                : (priority === 2) ? \"Medium\"\r\n                    : \"High\"\r\n        }\r\n    }\r\n\r\n    editPriority = (event, index) => {\r\n        const { selectedSort } = this.state\r\n        const data = this.clone(this.state.data)\r\n        const item = data.listItems[index]\r\n        const selectedPriority = event.target.value\r\n        item.priority = this.convertPriority(selectedPriority)\r\n        item.editPanelHidden = true\r\n        data.listItems = this.sortItemsBy(data.listItems, selectedSort)\r\n        this.setState({\r\n            data: data\r\n        })\r\n    }\r\n\r\n    editDate = (event, index) => {\r\n        const { selectedSort } = this.state\r\n        const data = this.clone(this.state.data)\r\n        const newDate = event.target.value\r\n        data.listItems[index].dateDue = convertDate(newDate, \"timestamp\")\r\n        data.listItems[index].editPanelHidden = true\r\n        data.listItems = this.sortItemsBy(data.listItems, selectedSort)\r\n        this.setState({\r\n            data: data\r\n        })\r\n    }\r\n\r\n    inputChange = (event) => {\r\n        const currentText = event.target.value\r\n        if (currentText === \"\") {\r\n            this.setState({\r\n                buttonDisabled: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                buttonDisabled: false\r\n            })\r\n        }\r\n    }\r\n\r\n    toggleItems = (listItems, type, tag) => {\r\n        const listItemsCopy = this.clone(listItems)\r\n        if (type === \"selected tag\") {\r\n            listItemsCopy.forEach(item => (item.tag !== tag) && (item.hidden = true))\r\n        } else if (type === \"tags only\") {\r\n            listItemsCopy.forEach(item => (item.tag === null) && (item.hidden = true))\r\n        } else if (type === \"show all\") {\r\n            listItemsCopy.forEach(item => (item.hidden === true) && (item.hidden = false))\r\n        }\r\n        return listItemsCopy\r\n    }\r\n\r\n    sortItemsBy = (listItems, selectedSort, moveFrom) => {\r\n        const showAll = this.toggleItems(listItems, \"show all\")\r\n        if (selectedSort === \"Manual\") {\r\n            const moveTo = moveFrom - 1\r\n            return listItems = this.props.arrayMove(listItems, moveFrom, moveTo)\r\n            //return listItems.sort(firstBy(\"active\", -1))\r\n        }\r\n        if (selectedSort === \"None\") {\r\n            return showAll\r\n        } else if (selectedSort === \"Priority\") {\r\n            listItems = showAll\r\n            return listItems.sort(\r\n                firstBy(\"active\", -1)\r\n                    .thenBy(\"priority\")\r\n                    .thenBy(\"dateDue\")\r\n                    .thenBy(\"task\")\r\n            )\r\n        } else if (selectedSort === \"Date Due\") {\r\n            listItems = showAll\r\n            return listItems.sort(\r\n                firstBy(\"active\", -1)\r\n                    .thenBy(\"dateDue\")\r\n                    .thenBy(\"priority\")\r\n                    .thenBy(\"task\")\r\n            )\r\n        } else if (selectedSort === \"A-Z\") {\r\n            listItems = showAll\r\n            return listItems.sort(\r\n                firstBy(\"active\", -1)\r\n                    .thenBy(\"task\")\r\n            )\r\n        } else if (selectedSort === \"Tags\") {\r\n            listItems = showAll\r\n            listItems = this.toggleItems(listItems, \"tags only\")\r\n            return listItems.sort(\r\n                firstBy(\"tag\")\r\n                    .thenBy(\"priority\")\r\n                    .thenBy(\"dateDue\")\r\n                    .thenBy(\"task\")\r\n            )\r\n        } else if (selectedSort === \"Selected Tag\") {\r\n            listItems = this.toggleItems(listItems, \"selected tag\", this.state.selectedTag)\r\n            return listItems.sort(\r\n                firstBy(\"tag\")\r\n                    .thenBy(\"priority\")\r\n                    .thenBy(\"dateDue\")\r\n                    .thenBy(\"task\")\r\n            )\r\n        } else if (selectedSort === \"toggle inactive\") {\r\n            return listItems.sort(firstBy(\"active\", -1))\r\n        }\r\n    }\r\n\r\n    sortItems = (index, manual) => {\r\n        const data = this.clone(this.state.data)\r\n        const selectedSort = this.selectSortBy.current.value\r\n        if (manual) {\r\n            if (selectedSort === \"None\") {\r\n                data.listItems = this.sortItemsBy(data.listItems, \"Manual\", index)\r\n                this.setState({\r\n                    data: data\r\n                })\r\n            } else {\r\n                data.listItems = this.sortItemsBy(data.listItems, \"Manual\", index)\r\n                this.setState({\r\n                    data: data,\r\n                    selectedSort: \"None\"\r\n                })\r\n            }\r\n        } else {\r\n            if (selectedSort === \"None\") {\r\n                data.listItems = this.sortItemsBy(data.listItems, selectedSort)\r\n                this.setState({\r\n                    data: data,\r\n                    selectedSort: selectedSort\r\n                })\r\n            } else {\r\n                data.listItems = this.sortItemsBy(data.listItems, selectedSort)\r\n                this.setState({\r\n                    data: data,\r\n                    selectedSort: selectedSort\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleEditItem = (index) => {\r\n        const data = this.clone(this.state.data)\r\n        const targetItem = data.listItems[index]\r\n        const targetPanelState = targetItem.editPanelHidden\r\n        data.listItems.forEach(function (item, index) {\r\n            if (item.editPanelHidden === false && item !== targetItem) {\r\n                item.editPanelHidden = true\r\n            }\r\n        })\r\n        data.listItems[index].editPanelHidden = !targetPanelState\r\n        this.setState({\r\n            data: data,\r\n            editTaskText: targetItem.task\r\n        })\r\n    }\r\n\r\n    changeDate = (event) => {\r\n        const updateDate = event.target.value\r\n        this.setState({\r\n            selectedDate: updateDate\r\n        })\r\n    }\r\n\r\n    changeColor = (event, selectedColor) => {\r\n        const data = this.clone(this.state.data)\r\n        data.settings.style[selectedColor] = event.target.value\r\n        this.setState({\r\n            data: data,\r\n            selectedStyle: \"None\"\r\n        })\r\n    }\r\n\r\n    toggleSettings = () => {\r\n        this.setState(state => ({\r\n            settingsHidden: false,\r\n            showModal: !state.showModal\r\n        }))\r\n    }\r\n\r\n    toggleStats = () => {\r\n        this.setState(state => ({\r\n            statsHidden: false,\r\n            showModal: !state.showModal\r\n        }))\r\n    }\r\n\r\n    changeStyle = (event) => {\r\n        const data = this.clone(this.state.data)\r\n        const style = event.target.value\r\n        const colors = data.settings.style\r\n        if (style === \"None\") {\r\n            this.setState({\r\n                selectedStyle: style\r\n            })\r\n        } else if (style === \"Default\") {\r\n            colors.colorHigh = \"#f5c6cb\"\r\n            colors.colorMedium = \"#ffeeba\"\r\n            colors.colorLow = \"#bee5eb\"\r\n            this.setState({\r\n                data: data,\r\n                selectedStyle: style\r\n            })\r\n        } else if (style === \"Marie\") {\r\n            colors.colorHigh = \"#f46ed0\"\r\n            colors.colorMedium = \"#f2b5e2\"\r\n            colors.colorLow = \"#fce8f7\"\r\n            this.setState({\r\n                data: data,\r\n                selectedStyle: style\r\n            })\r\n        } else if (style === \"Halloween\") {\r\n            colors.colorHigh = \"#e76427\"\r\n            colors.colorMedium = \"#ffa100\"\r\n            colors.colorLow = \"#feeeb8\"\r\n            this.setState({\r\n                data: data,\r\n                selectedStyle: style\r\n            })\r\n        }\r\n    }\r\n\r\n    changeTag = (event) => {\r\n        const { selectedSort } = this.state\r\n        const data = this.clone(this.state.data)\r\n        const tag = event.target.value\r\n        if (selectedSort === \"Selected Tag\") {\r\n            this.toggleItems(data.listItems, \"show all\")\r\n            this.toggleItems(data.listItems, \"selected tag\", tag)\r\n            this.setState({\r\n                data: data,\r\n                selectedTag: tag\r\n            })\r\n        } else {\r\n            this.setState({\r\n                selectedTag: tag\r\n            })\r\n        }\r\n    }\r\n\r\n    addTag = () => {\r\n        const data = this.clone(this.state.data)\r\n        const newTag = prompt(\"Enter a new tag\")\r\n        if (newTag === \"\" || data.tags.includes(newTag)) {\r\n            alert(\"Invalid tag or duplicate\")\r\n        } else {\r\n            data.tags = [...data.tags, newTag]\r\n            this.setState({\r\n                data: data,\r\n                selectedTag: newTag\r\n            })\r\n        }\r\n    }\r\n\r\n    removeTag = () => {\r\n        const { selectedTag } = this.state\r\n        const data = this.clone(this.state.data)\r\n        data.tags = data.tags.filter(tag => tag !== selectedTag || tag === \"None\")\r\n        this.setState({\r\n            data: data,\r\n            selectedTag: \"None\"\r\n        })\r\n    }\r\n\r\n    editText = (event, index) => {\r\n        event.stopPropagation()\r\n        const data = this.clone(this.state.data)\r\n        data.listItems[index].editPanelHidden = true\r\n        this.setState({\r\n            data: data\r\n        })\r\n    }\r\n\r\n    handleTextChange = (event) => {\r\n        const currentText = event.target.value\r\n        this.setState({\r\n            editTaskText: currentText\r\n        })\r\n    }\r\n\r\n    hideEditPanels = () => {\r\n        const { data } = this.state\r\n        data.listItems.forEach(item => (item.editPanelHidden === false) && (item.editPanelHidden = true))\r\n    }\r\n\r\n    toggleInactiveTasks = () => {\r\n        const data = this.clone(this.state.data)\r\n        data.settings.hideInactive = !data.settings.hideInactive\r\n        data.listItems = this.sortItemsBy(data.listItems, \"toggle inactive\")\r\n        this.setState({\r\n            data: data\r\n        })\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState(state => ({\r\n            showModal: !state.showModal,\r\n            settingsHidden: true,\r\n            statsHidden: true\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const { data, stats, buttonDisabled, selectedPriority, selectedDate, selectedTag, selectedSort, settingsHidden, statsHidden, selectedStyle, showModal } = this.state\r\n        const { convertDate, articulateDateDue } = this.props\r\n        if (selectedStyle === \"Halloween\") {\r\n            document.body.style.backgroundColor = \"black\"\r\n        } else {\r\n            document.body.style.backgroundColor = \"white\"\r\n        }\r\n        return (\r\n            <Container>\r\n                <Notifications />\r\n                <Modal isOpen={showModal} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        {(settingsHidden) ? \"Stats\" : \"Settings\"}\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Settings\r\n                            data={data}\r\n                            settingsHidden={settingsHidden}\r\n                            selectedStyle={selectedStyle}\r\n                            changeStyle={this.changeStyle}\r\n                            changeColor={this.changeColor}\r\n                            toggleInactiveTasks={this.toggleInactiveTasks}\r\n                        />\r\n                        <Stats\r\n                            stats={stats}\r\n                            statsHidden={statsHidden}\r\n                        />\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.toggleModal}>OK</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Row>\r\n                    <Col className=\"todo\" sm=\"10\" md=\"7\" lg=\"5\" xl=\"5\">\r\n                        <AddTask\r\n                            data={data}\r\n                            addItem={this.addItem}\r\n                            inputChange={this.inputChange}\r\n                            convertPriority={this.convertPriority}\r\n                            convertDate={convertDate}\r\n                            buttonDisabled={buttonDisabled}\r\n                            selectedPriority={selectedPriority}\r\n                            selectedDate={selectedDate}\r\n                            selectedTag={selectedTag} />\r\n                        <Row className=\"row-1 no-gutters\">\r\n                            <Col>\r\n                                <div className=\"calendar\">\r\n                                    <Calendar\r\n                                        value={selectedDate}\r\n                                        handleOnChange={this.changeDate}\r\n                                        convertDate={convertDate} />\r\n                                </div>\r\n                            </Col>\r\n                            <Col>\r\n                                <div className=\"priority--top\">\r\n                                    <Priority\r\n                                        value={selectedPriority}\r\n                                        handleOnChange={this.changePriority} />\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"row-2 no-gutters\">\r\n                            <Col\r\n                                className=\"sort padding-right\"\r\n                                xs=\"5\">\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    className=\"select-sort\"\r\n                                    value={selectedSort}\r\n                                    innerRef={this.selectSortBy}\r\n                                    onChange={this.sortItems}>\r\n                                    <option value=\"None\">Sort: None</option>\r\n                                    <option value=\"Priority\">Priority</option>\r\n                                    <option value=\"Date Due\">Date Due</option>\r\n                                    <option value=\"A-Z\">A-Z</option>\r\n                                    <option value=\"Tags\">Tags</option>\r\n                                    <option value=\"Selected Tag\">Selected Tag</option>\r\n                                </Input>\r\n                            </Col>\r\n                            <Col\r\n                                className=\"manage-tags\"\r\n                                xs=\"7\">\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    className=\"select-tag\"\r\n                                    value={selectedTag}\r\n                                    onChange={this.changeTag}>\r\n                                    {this.state.data.tags.map((tag, index) =>\r\n                                        <option\r\n                                            key={index}\r\n                                            value={tag}>\r\n                                            {(tag === \"None\") ? \"Tag: None\" : tag}\r\n                                        </option>\r\n                                    )}\r\n                                </Input>\r\n                                <Button\r\n                                    outline\r\n                                    color=\"secondary\"\r\n                                    size=\"sm\"\r\n                                    onClick={this.removeTag}>\r\n                                    -\r\n                                </Button>\r\n                                <Button\r\n                                    outline\r\n                                    color=\"secondary\"\r\n                                    size=\"sm\"\r\n                                    onClick={this.addTag}>\r\n                                    +\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <List className=\"list\">\r\n                            <TransitionGroup>\r\n                                {data.listItems.map((item, index) =>\r\n                                    (item.hidden) ?\r\n                                        null :\r\n                                        (!item.active && data.settings.hideInactive) ?\r\n                                            null :\r\n                                            <CSSTransition\r\n                                                key={item.id}\r\n                                                timeout={500}\r\n                                                classNames=\"fade\">\r\n                                                <ListItem\r\n                                                    data={data}\r\n                                                    item={item}\r\n                                                    index={index}\r\n                                                    handleTextChange={this.handleTextChange}\r\n                                                    editText={this.editText}\r\n                                                    toggleEditItem={this.toggleEditItem}\r\n                                                    articulateDateDue={articulateDateDue}\r\n                                                    markComplete={this.markComplete}\r\n                                                    sortItems={this.sortItems}\r\n                                                    convertPriority={this.convertPriority}\r\n                                                    editDate={this.editDate}\r\n                                                    convertDate={convertDate}\r\n                                                    editPriority={this.editPriority} />\r\n                                            </CSSTransition>\r\n                                )}\r\n                            </TransitionGroup>\r\n                        </List>\r\n                        <Row className=\"row-3 no-gutters\">\r\n                            <Button\r\n                                className=\"settings-button\"\r\n                                outline\r\n                                color=\"secondary\"\r\n                                onClick={this.toggleSettings}\r\n                            >\r\n                                {\"⚙\"}\r\n                            </Button>\r\n                            <Button\r\n                                className=\"stats-button\"\r\n                                outline\r\n                                color=\"secondary\"\r\n                                onClick={this.toggleStats}\r\n                            >\r\n                                {\"★\"}\r\n                            </Button>\r\n                        </Row>\r\n                        <Row className=\"settings no-gutters\">\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nToDo.defaultProps = {\r\n    convertDate: convertDate,\r\n    articulateDateDue: articulateDateDue,\r\n    arrayMove: arrayMove\r\n}\r\n\r\nexport default ToDo","import React, { Component } from 'react';\nimport { convertDate, articulateDateDue, arrayMove } from './functions'\nimport ToDo from './ToDo'\nimport './App.css';\n\nclass App extends Component {\n    render() {\n        const data = localStorage.getItem(\"data_9\")\n        const stats = localStorage.getItem(\"stats_3\")\n        const saveData = (data, fileName) => localStorage.setItem(fileName, JSON.stringify(data))\n        return (\n            <ToDo\n                data={data}\n                stats={stats}\n                saveData={saveData}\n                convertDate={convertDate}\n                articulateDateDue={articulateDateDue}\n                arrayMove={arrayMove}\n            />\n        )\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}